{"version":3,"file":"132.0ff758b2e2a562ae.js","mappings":"i0BAEQA,MAAA,qBCgBF,MAAOC,EAQTC,kBACIC,KAAKC,YACT,CAEcA,aAAU,IAAAC,EAAAF,KAAA,SAAAG,MAAA,YACpB,MAAMC,EAAsBF,EAAKG,aAAaC,gBACxCC,EACFH,aAA+BI,cAAgBJ,EAAsBA,EACzEF,EAAKO,aAAeP,EAAKQ,OAAOC,gBAAgBJ,GAChDL,EAAKO,aAAaG,kBAAkBC,eAAgB,EALhC,EAMxB,CAEAC,cACQd,KAAKS,cACLT,KAAKS,aAAaM,SAE1B,iDCjCYlB,MAAA,cAGIA,MAAA,yBAAAmB,EAAAnB,MAAAoB,GAAAC,UAAAC,EAAAtB,QAAA,OAASA,MAAAsB,EAAAC,UAAAJ,EAAAK,IAAoB,GAE7BxB,MAAA,wBACJA,0CADIA,MAAA,GAAAA,MAAA,IAAAA,MAAA,YAAAyB,EAAAN,EAAAO,OAAAC,aAAAC,IAAAH,IAAAN,EAAAK,IAAA,SDIPvB,yCAAwB,0BAAxBA,EAAwB4B,UAAA,2BAAAC,UAAA,SAAAC,EAAAC,MAAA,EAAAD,aAGJE,wODrBjCjC,MAAA,qCACIA,MAAA,EAAAkC,GAAA,qBAGAlC,MAAA,EAAAmC,GAAA,yBAAAnC,OACJA,oBALUA,MAAA,QAAAA,MAAA,YAAAyB,EAAAO,EAAAxB,aAAAmB,aAAAC,IAAAH,IAAA,mTEiDsBzB,MAAA,eAIIA,MAAA,yBAAAoC,EAAApC,MAAAqC,GAAAhB,UAAAiB,EAAAtC,MAAA,GAAAqB,UAAAkB,EAAAvC,MAAA,UAASA,MAAAuC,EAAAC,eAAAF,EAAAF,GAA6B,GAEtCpC,MAAA,wBACJA,yDALIA,MAAA,WAAAoC,IAAAE,EAAAG,OAIAzC,MAAA,GAAAA,MAAA,IAAAA,MAAA,6BAAAA,MAAA,EAAA0C,GAAAN,IAAA,+CApBpBpC,MAAA,4BAAAA,CAGC,WAHDA,CAGC,YAGWA,MAAA,iBACJA,QACAA,MAAA,iBAAAA,CAAc,eAENA,MAAA,gBACJA,QACAA,MAAA,wBAAAA,CAA8C,WACdA,MAAA,yBAA2CA,QACvEA,MAAA,GAAA2C,GAAA,iBAQA3C,MAAA,aACAA,MAAA,eAAwBA,MAAA,mBAAAA,MAAA4C,GAAA,MAAAN,EAAAtC,QAAAqB,UAAAwB,EAAA7C,MAAA,UAASA,MAAA6C,EAAAC,aAAAR,GAAoB,GACjDtC,MAAA,kBACAA,MAAA,0BACJA,6DAxBZA,MAAA,eAAAsC,EAAAZ,QAWwC1B,MAAA,GAAAA,YAAA,iCAINA,MAAA,GAAAA,MAAA,UAAA+C,EAAAC,mBAAAV,EAAAZ,SAQlB1B,MAAA,GAAAA,MAAA,IAAAA,MAAA,gEAhCxBA,MAAA,YAOIA,MAAA,EAAAiD,GAAA,gCA+BJjD,6CAnCIA,MAAA,UAAAkD,EAAAC,iBAAAb,EAAAG,OAAAzC,CAA0C,cAAAsC,GAKrCtC,MAAA,GAAAA,MAAA,mBAAAsC,EAAAZ,OAAA0B,qBAAA,sFAhBbpD,MAAA,WAIIA,MAAA,8BAAAqD,GAAArD,MAAAsD,GAAA,MAAAC,EAAAvD,QAAA,OAAsBA,MAAAuD,EAAAC,KAAAH,GAAY,GAIlCrD,MAAA,EAAAyD,GAAA,cAuCJzD,wDAzCIA,MAAA,kBAAAA,MAAA,EAAA0D,GAAAC,IAGuB3D,MAAA,GAAAA,MAAA,UAAA4D,EAAA5D,CAAQ,eAAA6D,EAAAC,eCPrC,MAAOC,EAKTC,YACYC,EACAC,EACAC,EACAC,GAHAjE,KAAA8D,yBACA9D,KAAA+D,sBACA/D,KAAAgE,qBACAhE,KAAAiE,cANKjE,KAAAkE,eAAiB,aAC1BlE,KAAAmE,YAAWC,QAMhB,CAEHC,WACIrE,KAAKsE,kBAAoBtE,KAAKiE,YAAYM,OAAOC,aAAaC,QAAQC,QAClEC,KAAI,EAAGH,gBAAiBA,EAAWI,cAAW,EAC9CD,KAAIC,GAAe5E,KAAK8D,uBAAuBe,oBAAoBD,KAAY,EAC/EE,MAAIC,GAAY/E,KAAKgF,aAAehF,KAAKiF,WAAWF,EAAQJ,IAAIO,GAAKA,EAAE7D,OAE3ErB,KAAKmE,SAAS,uBAClB,CAEAnB,iBAAiBV,GACb,OAAQA,GACJ,KAAK,EACD,MAAO,uCACX,KAAK,EACD,MAAO,uCACX,KAAK,EACD,MAAO,0BACX,KAAK,EACD,MAAO,0BACX,KAAK,GACD,MAAO,aACX,SACI6C,kBAAY7C,GAExB,CAEAO,mBAAmBtB,GACf,OAAOA,EAAO6D,iBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,GAClD,CAEA/C,eAAegD,EAAsC/C,GACjD+C,EAAO/C,MAAQA,EACftC,KAAKsF,mBACT,CAEAC,SAASC,EAAeC,GAEpB,OADWA,EAAId,IAAIe,GAAQ,GAAGA,EAAKrE,MAAMqE,EAAKpD,SAASqD,KAAK,IAEhE,CAEAhC,aAAa6B,EAAeE,GACxB,OAAOA,EAAKnE,MAChB,CAEAH,UAAUC,GACN,MAAME,EAASvB,KAAK8D,uBAAuB8B,cAAcvE,GACzD,GAAIE,EAAQ,CACR,MACM8D,EAAuC,CACzChE,KACAE,SACAe,MAJUtC,KAAK6C,mBAAmBtB,GAAQ,IAM9C,IAAIsE,EACA7F,KAAKgF,cAAgBhF,KAAKgF,aAAac,OACvCD,EAAY7F,KAAKgF,aAAahF,KAAKgF,aAAac,OAAS,IAEzDD,EAAY,GACZ7F,KAAKgF,cAAce,KAAKF,IAE5BA,EAAUE,KAAKV,GACfrF,KAAKsF,oBAEb,CAEA3C,aAAa0C,GACTA,EAAOhE,GAAKrB,KAAKkE,eACjBlE,KAAKsF,mBACT,CAEAjC,KAAK2C,GACD,MAAQC,eAAcC,gBAAeC,oBAAmBC,aAAcJ,EACtE,IAAIE,IAAkBD,GAAgBE,EAAkBE,KAAKb,QAAUY,EAAUC,KAAKb,QAIlFxF,KAAKgF,aAAc,CACnB,MAAMsB,EAAoBtG,KAAKgF,aAAamB,EAAkBE,KAAKb,OAC7De,EAAevG,KAAKgF,aAAaoB,EAAUC,KAAKb,OAEtDc,EAAkBE,OAAON,EAAe,GACxCK,EAAaC,OAAOP,EAAc,EAAGD,EAAMN,KAAKW,MAChDrG,KAAKsF,oBAEb,CAEQL,WAAWwB,GACf,MAAMC,EAAiB1G,KAAK+D,oBAAoB4C,IAAI,yBACpD,IAAIC,EACJ,OAAIF,IAEAE,EAAYF,EAAeG,OAAOnB,GAAQe,EAAaK,SAASpB,EAAKrE,MAElErB,KAAK8D,uBAAuBiD,gBAAgBH,EACvD,CAEQtB,oBACJ,GAAItF,KAAKgF,aAAc,CAInB,MAAMgC,EAHYhH,KAAKgF,aAClBiC,OAAO,CAACC,EAAMzB,IAAQ,IAAIyB,KAASzB,GAAM,IACzCoB,OAAOnB,GAAQA,EAAKrE,KAAOrB,KAAKkE,gBACkBS,IAAIe,KACvDrE,GAAIqE,EAAKrE,GACTiB,MAAOoD,EAAKpD,SAEhBtC,KAAKgF,aAAehF,KAAK8D,uBAAuBiD,gBAAgBC,GAChEhH,KAAK+D,oBAAoBoD,IAAI,wBAAyBH,GACtDI,WAAW,IAAMpH,KAAKgE,mBAAmBqD,gBAEjD,KAzHSzD,0CAAkB/D,MAAAyH,OAAAzH,MAAAyH,OAAAzH,mBAAAyH,OAAA,0BAAlB1D,EAAkBlC,UAAA,oBAAA6F,MAAA,GAAAC,KAAA,EAAAC,OAAA,6lCAAAC,SAAA,SAAA9F,EAAAC,GAAA,EAAAD,IDtB/B/B,MAAA,mBAAAA,CAAgB,UAAhBA,CAAgB,iBAAhBA,CAAgB,cAIAA,MAAA,gBACAA,MAAA,wBACAA,MAAA,gBACJA,QACAA,MAAA,yBACIA,MAAA,EAAA8H,GAAA,kCAOJ9H,YAGRA,MAAA,YACIA,MAAA,GAAA+H,GAAA,aAgDJ/H,iBA/DYA,MAAA,GAAAA,MAAA,IAAAA,MAAA,iCAMuBA,MAAA,GAAAA,MAAA,UAAAA,MAAA,KAAAgC,EAAAyC,oBAWXzE,MAAA,GAAAA,MAAA,UAAAgC,EAAAmD,aAAAnF,CAAiB,eAAAgC,EAAA0D,wxCElBtC,MAAMsC,EAA0B,CACnC,CACIC,KAAM,GACNC,UAAWnE,EACXoE,UAAW,yKCLPnI,MAAA,QAAAA,CACK,UAAMA,MAAA,GAAgBA,QACvBA,MAAA,gBACJA,6BAHwBA,MAAA,aAAAA,MAAA,EAAA0C,GAAA0F,EAAA5G,KACbxB,MAAA,GAAAA,MAAAoI,EAAAC,gCAOXrI,MAAA,iDAAuBA,MAAA,QAAAsI,EAAAC,iCAKvBvI,MAAA,8CAAoBA,MAAA,WAAAwI,EAAAC,qCAKpBzI,MAAA,kDAAAA,MAAA,IAAAA,MAAA,IAAA0I,EAAAC,aAAAD,EAAAE,cAAA,gCAKA5I,MAAA,2CAAAA,MAAA,IAAAA,MAAA,IAAA6I,EAAAC,eAAA,MCZcC;;;;;;;;;;;;;;;;;;;;;;EA8BpB,MAAOC,EAEThF,YAAoBI,GAAAjE,KAAAiE,aAA2B,CAE/CI,WACIrE,KAAK8I,cAAgB9I,KAAKiE,YACrB8E,MAAMC,MAAyB,CAC5BC,QAAS,CACLC,KAAM,GACNrC,OAAQ,CACJsC,OAAQ,CAAEC,IAAI,GACdhB,MAAO,CAAEiB,MAAO,CAAC,YAAa,WAElCC,KAAM,CACFX,cAAeY,MAAUC,SAIpCC,yBACAC,UAAUrD,GAAQA,EAAKsD,OAAOC,MACvC,KApBSf,0CAA2BhJ,MAAAyH,OAAA,0BAA3BuB,EAA2BnH,UAAA,+BAAA6F,MAAA,GAAAC,KAAA,GAAAC,OAAA,qTAAAC,SAAA,SAAA9F,EAAAC,GAAA,EAAAD,ID5CxC/B,MAAA,yCACIA,MAAA,2CACIA,MAAA,EAAAgK,GAAA,mBAMJhK,QACAA,MAAA,2CACIA,MAAA,EAAAiK,GAAA,mBAGJjK,QACAA,MAAA,2CACIA,MAAA,GAAAkK,GAAA,mBAGJlK,QACAA,MAAA,6CACIA,MAAA,GAAAmK,GAAA,mBAGJnK,QACAA,MAAA,6CACIA,MAAA,GAAAoK,GAAA,mBAGJpK,iBA5BcA,MAAA,QAAAA,MAAA,IAAAgC,EAAAiH,gBACEjJ,MAAA,GAAAA,MAAA,UAAAA,MAAA,qBAQAA,MAAA,GAAAA,MAAA,UAAAA,MAAA,oBAAAA,CAAqC,sBAKrCA,MAAA,GAAAA,MAAA,UAAAA,MAAA,0BAAAA,CAA2C,sBAK3CA,MAAA,GAAAA,MAAA,UAAAA,MAAA,sBAKAA,MAAA,GAAAA,MAAA,UAAAA,MAAA,mQC+Cd,MAAOqK,+CAAwB,0BAAxBA,gCAHCC,MAAYC,gICnE1BvK,MAAA,UAAAA,CAAkE,cAG1DA,MAAA,mBAAAA,MAAAwK,GAAA,MAAAC,EAAAzK,QAAA,OAASA,MAAAyK,EAAAC,YAAAC,KAAAF,EAAAG,WAAAC,YAAuC,GAGhD7K,MAAA,wBACJA,QACAA,MAAA,cAEIA,MAAA,mBAAAA,MAAAwK,GAAA,MAAAM,EAAA9K,QAAA,OAASA,MAAA8K,EAAAJ,YAAAC,KAAAG,EAAAF,WAAAG,YAAuC,GAGhD/K,MAAA,wBACJA,QACAA,MAAA,cAEIA,MAAA,mBAAAA,MAAAwK,GAAA,MAAAQ,EAAAhL,QAAA,OAASA,MAAAgL,EAAAN,YAAAC,KAAAK,EAAAJ,WAAAK,mBAA8C,GAGvDjL,MAAA,wBACJA,QACAA,MAAA,YACAA,MAAA,eAA6BA,MAAA,mBAAAA,MAAAwK,GAAA,MAAAU,EAAAlL,QAAA,OAASA,MAAAkL,EAAAC,UAAS,GAC3CnL,MAAA,iBACJA,2CArBIA,MAAA,GAAAA,MAAA,SAAAoL,IAAAC,EAAAT,WAAAC,YAEA7K,MAAA,GAAAA,MAAA,IAAAA,MAAA,+CAKAA,MAAA,GAAAA,MAAA,SAAAoL,IAAAC,EAAAT,WAAAG,YAEA/K,MAAA,GAAAA,MAAA,IAAAA,MAAA,+CAKAA,MAAA,GAAAA,MAAA,SAAAoL,IAAAC,EAAAT,WAAAK,mBAEAjL,MAAA,GAAAA,MAAA,IAAAA,MAAA,mDCTD,MAAMsL,GAAuBvC;;;;;;;;;;;EAmB9B,MAAOwC,EACTvH,YAAoBI,GAAAjE,KAAAiE,cAEpBjE,KAAAqL,SAAW,IAAIC,KACftL,KAAAuK,YAAc,IAAIgB,IAAgBd,MAAWC,YAC7C1K,KAAAyK,WAAaA,KAJkC,CAM/CpG,WACI,MAAMmH,EAAgBxL,KAAKiE,YAAYwH,SAClCC,mBACAjC,yBACAC,UAAUrD,GAAQA,EAAKsF,cAAcC,0BAAuBnK,GAC3DoK,EAAW7L,KAAKiE,YAAYM,OAAOuH,UAAUpC,UAAUrD,GAAQA,EAAKyF,SACpEvB,EAAcvK,KAAKuK,YAAY7F,QAAKqH,QAC1C/L,KAAKgM,YAAWC,MAAc1B,EAAaiB,EAAeK,GAAUnH,QAChEwH,KAAU,EAAEC,EAAY1D,EAAcqD,KAClC9L,KAAKqL,SAAS3G,QACV0H,OAAU,IAAK,EACfF,KAAUlB,GACNhL,KAAKiE,YACA8E,MAAMsD,KAA2B,CAC9BC,MAAO,CAACH,GACRnB,YAEHuB,UAAUlG,GAAQA,EAAKmG,eACvB9H,QACGC,KAAI8H,IACA,MAAMC,GACFP,IAAe1B,MAAWG,WAAa,SAAW,WAChD+B,GAAS,GAAGb,EAAQc,YAAYd,EAAQa,SAExCE,GAAoC,CACtCH,iBACAjE,eACAkE,WAEJ,OACIF,EACKK,KAAKC,GAAKA,EAAEC,OAASb,IACpBc,QAAQtI,IAAIuI,QAAeA,EAAOL,qBAAqB,SAQjG,CAEA7B,UACIhL,KAAKqL,SAASb,MAAK,EACvB,KAnDSY,0CAAyBvL,MAAAyH,OAAA,0BAAzB8D,EAAyB1J,UAAA,6BAAA6F,MAAA,EAAAC,KAAA,EAAAC,OAAA,4JAAAC,SAAA,SAAA9F,EAAAC,GAAA,EAAAD,ID/BtC/B,MAAA,kCACAA,MAAA,EAAAsN,GAAA,uCADWtN,MAAA,UAAAA,MAAA,IAAAgC,EAAAmK,WACQnM,MAAA,GAAAA,MAAA,OAAAA,MAAA,IAAAgC,EAAA0I,qSEYf1K,MAAA,UAAAA,CAA0D,cACiBA,MAAA,mBAAAA,MAAAoB,GAAA,MAAAE,EAAAtB,QAAA,OAASA,MAAAsB,EAAAiM,WAAA5C,KAAA,CAAA6C,UAA4B,MAAKC,KAAAnM,EAAAoM,QAAe,GAC5H1N,MAAA,wBACJA,QACAA,MAAA,cAAgFA,MAAA,mBAAAA,MAAAoB,GAAA,MAAA4J,EAAAhL,QAAA,OAASA,MAAAgL,EAAAuC,WAAA5C,KAAA,CAAA6C,UAA4B,MAAKC,KAAAzC,EAAA2C,YAAmB,GACzI3N,MAAA,wBACJA,QACAA,MAAA,cAAkFA,MAAA,mBAAAA,MAAAoB,GAAA,MAAA8J,EAAAlL,QAAA,OAASA,MAAAkL,EAAAqC,WAAA5C,KAAA,CAAA6C,UAA4B,SAAQ,GAC3HxN,MAAA,wBACJA,QACAA,MAAA,eAAmFA,MAAA,mBAAAA,MAAAoB,GAAA,MAAA8B,EAAAlD,QAAA,OAASA,MAAAkD,EAAAqK,WAAA5C,KAAA,CAAA6C,UAA4B,UAAS,GAC7HxN,MAAA,0BACJA,2CAX6BA,MAAA,GAAAA,MAAA,SAAA4N,EAAAH,OAAApC,EAAAqC,OACzB1N,MAAA,GAAAA,MAAA,IAAAA,MAAA,6BAE8BA,MAAA,GAAAA,MAAA,SAAA4N,EAAAH,OAAApC,EAAAsC,WAC9B3N,MAAA,GAAAA,MAAA,IAAAA,MAAA,iCAE8BA,MAAA,GAAAA,MAAA,kBAAA4N,EAAAJ,WAC9BxN,MAAA,GAAAA,MAAA,IAAAA,MAAA,gCAE8BA,MAAA,GAAAA,MAAA,mBAAA4N,EAAAJ,WAC9BxN,MAAA,GAAAA,MAAA,IAAAA,MAAA,6DAIRA,MAAA,YACIA,MAAA,+CACJA,6BADIA,MAAA,GAAAA,MAAA,IAAAA,MAAA,IAAA6N,EAAAC,OAAA,MAAA9N,MAAA,IAAA6N,EAAAE,KAAA,MCpBD,MAAMC,GAAoBjF;;;;;;;;;;;EAmB3B,MAAOkF,EAYTjK,YAAoBI,GAAAjE,KAAAiE,cAXpBjE,KAAAuN,MAAQ,IAAIQ,KACZ/N,KAAAwN,UAAY,IAAIO,UAASA,MAAOC,QAAQhO,KAAKuN,MAAMU,UAAY,IAI/DjO,KAAAoN,WAAa,IAAI7B,IAAuD,CACpE8B,UAAW,MACXC,KAAMtN,KAAKuN,OAIgC,CAE/ClJ,WACIrE,KAAKkO,WAAalO,KAAKoN,WAAW1I,QAC9BqH,QAAoB,EACpBpH,KAAIwJ,KACAR,MAAOS,IAAMD,EAAUb,MAAMe,QAAQF,EAAUd,WAAWiB,SAC1DV,IAAKQ,IAAMD,EAAUb,MAAMiB,MAAMJ,EAAUd,WAAWiB,aACxD,EACFE,KAAY,IAEhB,MAAMC,EAAgBzO,KAAKkO,WAAWxJ,QAClCwH,KAAU,EAAGyB,QAAOC,SAChB5N,KAAKiE,YACA8E,MAAM2F,MAAyB,CAAEf,MAAOA,EAAMgB,cAAef,IAAKA,EAAIe,gBACtElF,yBACAC,UAAUrD,GAAQA,EAAKsD,UAAO,EAEvC6E,KAAY,IAEhBxO,KAAK4O,iBAAmBH,EAAc/J,QAAKC,KAAIkK,GAAOA,EAAIC,aAC1D9O,KAAK+O,iBAAmBN,EAAc/J,QAClCC,KAAIkK,GAAOA,EAAIjF,MAAM3C,OAAO,CAAC+H,EAAOC,IAAUD,EAAQC,EAAMzG,aAAc,GAAK,MAEnFxI,KAAKwL,cAAgBxL,KAAKiE,YAAYwH,SACjCC,mBACAjC,yBACAC,UAAUrD,GAAQA,EAAKsF,cAAcC,0BAAuBnK,EACrE,KAxCSqM,0CAA2BjO,MAAAyH,OAAA,0BAA3BwG,EAA2BpM,UAAA,+BAAA6F,MAAA,GAAAC,KAAA,GAAAC,OAAA,wOAAAC,SAAA,SAAA9F,EAAAC,GAAA,EAAAD,ID5BxC/B,MAAA,UAAAA,CAAmB,UAAnBA,CAAmB,WAEcA,MAAA,oBAA8BA,QACvDA,MAAA,WAAwBA,MAAA,wBAA0CA,UAEtEA,MAAA,UAAAA,CAAkB,WAEVA,MAAA,6DACJA,QACAA,MAAA,YAAwBA,MAAA,0BAA+CA,YAG/EA,MAAA,YACIA,MAAA,GAAAqP,GAAA,iCAeArP,MAAA,GAAAsP,GAAA,+BAGJtP,eA7BiCA,MAAA,GAAAA,YAAA,IAAAgC,EAAA+M,mBACD/O,MAAA,GAAAA,YAAA,+BAIpBA,MAAA,GAAAA,MAAA,IAAAA,MAAA,MAAAA,MAAA,MAAAgC,EAAAkN,kBAAAlP,MAAA,MAAAgC,EAAA2J,qBAAA/J,GAAA,KAEoB5B,MAAA,GAAAA,YAAA,sCAITA,MAAA,GAAAA,MAAA,OAAAA,MAAA,MAAAgC,EAAAuL,aAeSvN,MAAA,GAAAA,MAAA,OAAAA,MAAA,MAAAgC,EAAAqM,ukBC+C1B,MAAOkB,+CAAwB,0BAAxBA,gCAHCjF,SCjEP,MAAMkF,EAA0D,CACnE,CAAEhO,GAAI,UAAWiB,MAAO,IACxB,CAAEjB,GAAI,eAAgBiB,MAAO,GAC7B,CAAEjB,GAAI,eAAgBiB,MAAO,IAGpBgN,EAA2D,CACpE7C,QAAS,CACLjL,SAAO+N,KAAE,qBACTnK,gBAAiB,CAAC,EAAG,EAAG,IACxB9E,cAAeA,IAAM8K,EACrBnI,oBAAqB,CAACuM,MAAWC,YAErCC,aAAc,CACVlO,SAAO+N,KAAE,4BACTjP,cAAeA,IAAMwN,EACrB1I,gBAAiB,CAAC,EAAG,EAAG,EAAG,IAC3BnC,oBAAqB,CAACuM,MAAWC,YAErCE,aAAc,CACVnO,SAAO+N,KAAE,2BACTjP,cAAeA,IAAMuI,EACrBzD,gBAAiB,CAAC,EAAG,EAAG,IACxBnC,oBAAqB,CAACuM,MAAWC,2BChBnC,MAAOG,EACT/L,YAAYC,GACR+L,OAAO5C,QAAQqC,GAAiB3K,IAAI,EAAEtD,EAAIE,MACjCuC,EAAuB8B,cAAcvE,IACtCyC,EAAuBgM,eAAezO,EAAIE,EAAM,GAGC,IAArDuC,EAAuBiM,mBAAmBjK,QAC1ChC,EAAuBkM,iBAAiBX,EAEhD,KAVSO,0CAAe/P,MAAAyH,OAAA,0BAAfsI,gCAHCxF,MAAc6F,KAAaC,SAASrI,MCH5C,MAAOsI,+CAAmB,0BAAnBA,EAAmBzO,UAAA,sBAAA6F,MAAA,EAAAC,KAAA,EAAAE,SAAA,SAAA9F,EAAAC,GAAA,EAAAD,ICRhC/B,MAAA,OAAGA,MAAA,4BAAsBA,8BDanB,MAAOuQ,6BEPTvQ,MAAA,SACIA,MAAA,GACJA,+BADIA,MAAA,GAAAA,MAAA,IAAAyK,EAAA+F,oBAAA,iBAAA/F,EAAAgG,YAAA,gBAAAhG,EAAAiG,QAAA,gCAPR1Q,MAAA,QAAAA,CAAqD,UAE7CA,MAAA,GAAmEA,MAAA,QACnEA,MAAA,aAAkBA,MAAA,sBAAwDA,UAG9EA,MAAA,EAAA2Q,GAAA,WAGJ3Q,uCAPQA,MAAA,GAAAA,MAAA,aAAA4Q,EAAAC,UAAA,IAAAD,EAAAE,SAAA,IACkB9Q,MAAA,GAAAA,MAAA,eAAAA,MAAA,IAAA4Q,EAAAG,KAAAC,WAAA,IAGPhR,MAAA,GAAAA,MAAA,QAAAqL,EAAAmF,sBAAAnF,EAAAoF,iBFONF,yCAAgB,0BAAhBA,0BGGP,MAAOU,GAOTjN,YAAoBI,GAAAjE,KAAAiE,cANpBjE,KAAAuQ,QAAUQ,MAEV/Q,KAAAgR,SAAQC,SAAeD,MACvBhR,KAAAqQ,uBAAsBY,SAAeZ,oBACrCrQ,KAAAsQ,eAAcW,SAAeX,WAEkB,CAE/CjM,WACIrE,KAAKkR,eAAiBlR,KAAKiE,YAAYkN,cAClCC,yBACA1H,UAAUrD,GAAQA,EAAKgL,qBAAuB,KACvD,KAbSP,2CAAsBjR,MAAAyH,OAAA,0BAAtBwJ,EAAsBpP,UAAA,yBAAA6F,MAAA,EAAAC,KAAA,EAAAC,OAAA,2GAAAC,SAAA,SAAA9F,EAAAC,GAAA,EAAAD,IDhBnC/B,MAAA,EAAAyR,GAAA,8BAUAzR,MAAA,WACIA,MAAA,gBACJA,cAZMA,MAAA,OAAAA,MAAA,IAAAgC,EAAAqP,6MCoCA,MAAOK,iDAAmB,0BAAnBA,gCAHCpH","names":["i0","DashboardWidgetComponent","ngAfterViewInit","this","loadWidget","_this","_asyncToGenerator","loadComponentResult","widgetConfig","loadComponent","componentType","Promise","componentRef","portal","createComponent","changeDetectorRef","detectChanges","ngOnDestroy","destroy","widget_r2","_r4","$implicit","ctx_r3","addWidget","id","tmp_0_0","config","title","undefined","selectors","viewQuery","rf","ctx","ViewContainerRef","DashboardWidgetComponent_ng_template_2_Template","DashboardWidgetComponent_ng_template_3_Template","width_r11","_r14","widget_r8","ctx_r12","setWidgetWidth","width","_c0","DashboardComponent_div_12_div_1_vdr_dashboard_widget_1_button_11_Template","_r18","ctx_r16","removeWidget","ctx_r9","getSupportedWidths","DashboardComponent_div_12_div_1_vdr_dashboard_widget_1_Template","ctx_r7","getClassForWidth","requiresPermissions","$event","_r21","ctx_r20","drop","DashboardComponent_div_12_div_1_Template","_c1","rowIndex_r6","row_r5","ctx_r1","trackRowItem","DashboardComponent","constructor","dashboardWidgetService","localStorageService","changedDetectorRef","dataService","deletionMarker","setTitle","titleSetter","ngOnInit","availableWidgets$","client","userStatus","stream$","pipe","map","permissions","getAvailableWidgets","tap","widgets","widgetLayout","initLayout","w","assertNever","supportedWidths","widget","recalculateLayout","trackRow","index","row","item","join","getWidgetById","targetRow","length","push","event","currentIndex","previousIndex","previousContainer","container","data","previousLayoutRow","newLayoutRow","splice","availableIds","savedLayoutDef","get","layoutDef","filter","includes","getWidgetLayout","newLayoutDef","reduce","flat","set","setTimeout","markForCheck","i1","decls","vars","consts","template","DashboardComponent_button_9_Template","DashboardComponent_div_12_Template","dashboardRoutes","path","component","pathMatch","order_r5","code","order_r6","state","order_r7","customer","order_r8","totalWithTax","currencyCode","order_r9","orderPlacedAt","gql","LatestOrdersWidgetComponent","latestOrders$","query","GetLatestOrdersDocument","options","take","active","eq","notIn","sort","SortOrder","DESC","refetchOnChannelChange","mapStream","orders","items","LatestOrdersWidgetComponent_ng_template_4_Template","LatestOrdersWidgetComponent_ng_template_7_Template","LatestOrdersWidgetComponent_ng_template_10_Template","LatestOrdersWidgetComponent_ng_template_13_Template","LatestOrdersWidgetComponent_ng_template_16_Template","LatestOrdersWidgetModule","CoreModule","SharedModule","_r3","ctx_r2","metricType$","next","MetricType","OrderTotal","ctx_r4","OrderCount","ctx_r5","AverageOrderValue","ctx_r6","refresh","activeMetricType_r1","ctx_r0","GET_ORDER_CHART_DATA","OrderChartWidgetComponent","refresh$","Subject","BehaviorSubject","currencyCode$","settings","getActiveChannel","activeChannel","defaultCurrencyCode","uiState$","uiState","distinctUntilChanged","metrics$","combineLatest","switchMap","metricType","startWith","GetOrderChartDataDocument","types","mapSingle","metricSummary","metrics","formatValueAs","locale","language","formatOptions","find","m","type","entries","entry","OrderChartWidgetComponent_div_2_Template","selection$","timeframe","date","today","yesterday","selection_r2","range_r8","start","end","GET_ORDER_SUMMARY","OrderSummaryWidgetComponent","Date","setDate","getDate","dateRange$","selection","dayjs","startOf","toDate","endOf","shareReplay","orderSummary$","GetOrderSummaryDocument","toISOString","totalOrderCount$","res","totalItems","totalOrderValue$","total","order","OrderSummaryWidgetComponent_div_18_Template","OrderSummaryWidgetComponent_div_20_Template","OrderSummaryWidgetModule","DEFAULT_DASHBOARD_WIDGET_LAYOUT","DEFAULT_WIDGETS","_","Permission","ReadOrder","orderSummary","latestOrders","DashboardModule","Object","registerWidget","getDefaultLayout","setDefaultLayout","RouterModule","forChild","TestWidgetComponent","TestWidgetModule","hideVendureBranding","hideVersion","version","WelcomeWidgetComponent_div_0_p_7_Template","administrator_r1","firstName","lastName","user","lastLogin","WelcomeWidgetComponent","ADMIN_UI_VERSION","brand","getAppConfig","administrator$","administrator","getActiveAdministrator","activeAdministrator","WelcomeWidgetComponent_div_0_Template","WelcomeWidgetModule"],"sourceRoot":"webpack:///","sources":["./src/lib/dashboard/src/components/dashboard-widget/dashboard-widget.component.html","./src/lib/dashboard/src/components/dashboard-widget/dashboard-widget.component.ts","./src/lib/dashboard/src/components/dashboard/dashboard.component.html","./src/lib/dashboard/src/components/dashboard/dashboard.component.ts","./src/lib/dashboard/src/dashboard.routes.ts","./src/lib/dashboard/src/widgets/latest-orders-widget/latest-orders-widget.component.html","./src/lib/dashboard/src/widgets/latest-orders-widget/latest-orders-widget.component.ts","./src/lib/dashboard/src/widgets/order-chart-widget/order-chart-widget.component.html","./src/lib/dashboard/src/widgets/order-chart-widget/order-chart-widget.component.ts","./src/lib/dashboard/src/widgets/order-summary-widget/order-summary-widget.component.html","./src/lib/dashboard/src/widgets/order-summary-widget/order-summary-widget.component.ts","./src/lib/dashboard/src/default-widgets.ts","./src/lib/dashboard/src/dashboard.module.ts","./src/lib/dashboard/src/widgets/test-widget/test-widget.component.ts","./src/lib/dashboard/src/widgets/test-widget/test-widget.component.html","./src/lib/dashboard/src/widgets/welcome-widget/welcome-widget.component.html","./src/lib/dashboard/src/widgets/welcome-widget/welcome-widget.component.ts"],"sourcesContent":["<vdr-card [title]=\"widgetConfig.title ?? '' | translate\">\r\n    <ng-template vdrCardControls>\r\n        <ng-content></ng-content>\r\n    </ng-template>\r\n    <ng-template #portal></ng-template>\r\n</vdr-card>\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ComponentRef,\r\n    Input,\r\n    OnDestroy,\r\n    ViewChild,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\nimport { DashboardWidgetConfig } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-dashboard-widget',\r\n    templateUrl: './dashboard-widget.component.html',\r\n    styleUrls: ['./dashboard-widget.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DashboardWidgetComponent implements AfterViewInit, OnDestroy {\r\n    @Input() widgetConfig: DashboardWidgetConfig;\r\n\r\n    @ViewChild('portal', { read: ViewContainerRef })\r\n    private portal: ViewContainerRef;\r\n\r\n    private componentRef: ComponentRef<any>;\r\n\r\n    ngAfterViewInit(): void {\r\n        this.loadWidget();\r\n    }\r\n\r\n    private async loadWidget() {\r\n        const loadComponentResult = this.widgetConfig.loadComponent();\r\n        const componentType =\r\n            loadComponentResult instanceof Promise ? await loadComponentResult : loadComponentResult;\r\n        this.componentRef = this.portal.createComponent(componentType);\r\n        this.componentRef.changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.componentRef) {\r\n            this.componentRef.destroy();\r\n        }\r\n    }\r\n}\r\n","<vdr-page-block>\r\n    <div class=\"widget-header mb-1\">\r\n        <vdr-dropdown>\r\n            <button class=\"btn btn-secondary btn-sm\" vdrDropdownTrigger>\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                {{ 'dashboard.add-widget' | translate }}\r\n                <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\r\n            </button>\r\n            <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                <button\r\n                    vdrDropdownItem\r\n                    *ngFor=\"let widget of availableWidgets$ | async\"\r\n                    (click)=\"addWidget(widget.id)\"\r\n                >\r\n                    {{ (widget.config.title ?? widget.id) | translate }}\r\n                </button>\r\n            </vdr-dropdown-menu>\r\n        </vdr-dropdown>\r\n    </div>\r\n    <div cdkDropListGroup>\r\n        <div\r\n            class=\"clr-row dashboard-row\"\r\n            *ngFor=\"let row of widgetLayout; index as rowIndex; trackBy: trackRow\"\r\n            cdkDropList\r\n            (cdkDropListDropped)=\"drop($event)\"\r\n            cdkDropListOrientation=\"horizontal\"\r\n            [cdkDropListData]=\"{ index: rowIndex }\"\r\n        >\r\n            <div\r\n                *ngFor=\"let widget of row; trackBy: trackRowItem\"\r\n                class=\"dashboard-item\"\r\n                [ngClass]=\"getClassForWidth(widget.width)\"\r\n                cdkDrag\r\n                [cdkDragData]=\"widget\"\r\n            >\r\n                <vdr-dashboard-widget\r\n                    *vdrIfPermissions=\"widget.config.requiresPermissions || null\"\r\n                    [widgetConfig]=\"widget.config\"\r\n                >\r\n                    <div class=\"flex\">\r\n                        <div class=\"drag-handle\" cdkDragHandle>\r\n                            <clr-icon shape=\"drag-handle\" size=\"24\"></clr-icon>\r\n                        </div>\r\n                        <vdr-dropdown>\r\n                            <button class=\"icon-button\" vdrDropdownTrigger>\r\n                                <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\r\n                            </button>\r\n                            <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                                <h4 class=\"dropdown-header\">{{ 'dashboard.widget-resize' | translate }}</h4>\r\n                                <button\r\n                                    vdrDropdownItem\r\n                                    [disabled]=\"width === widget.width\"\r\n                                    *ngFor=\"let width of getSupportedWidths(widget.config)\"\r\n                                    (click)=\"setWidgetWidth(widget, width)\"\r\n                                >\r\n                                    {{ 'dashboard.widget-width' | translate : { width: width } }}\r\n                                </button>\r\n                                <div class=\"dropdown-divider\" role=\"separator\"></div>\r\n                                <button vdrDropdownItem (click)=\"removeWidget(widget)\">\r\n                                    <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon>\r\n                                    {{ 'dashboard.remove-widget' | translate }}\r\n                                </button>\r\n                            </vdr-dropdown-menu>\r\n                        </vdr-dropdown>\r\n                    </div>\r\n                </vdr-dashboard-widget>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</vdr-page-block>\r\n","import { CdkDragDrop } from '@angular/cdk/drag-drop';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport {\r\n    DashboardWidgetConfig,\r\n    DashboardWidgetService,\r\n    DashboardWidgetWidth,\r\n    DataService,\r\n    LocalStorageService,\r\n    titleSetter,\r\n    WidgetLayout,\r\n    WidgetLayoutDefinition,\r\n} from '@vendure/admin-ui/core';\r\nimport { assertNever } from '@vendure/common/lib/shared-utils';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-dashboard',\r\n    templateUrl: './dashboard.component.html',\r\n    styleUrls: ['./dashboard.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n    widgetLayout: WidgetLayout | undefined;\r\n    availableWidgets$: Observable<Array<{ id: string; config: DashboardWidgetConfig }>>;\r\n    private readonly deletionMarker = '__delete__';\r\n    private setTitle = titleSetter();\r\n    constructor(\r\n        private dashboardWidgetService: DashboardWidgetService,\r\n        private localStorageService: LocalStorageService,\r\n        private changedDetectorRef: ChangeDetectorRef,\r\n        private dataService: DataService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.availableWidgets$ = this.dataService.client.userStatus().stream$.pipe(\r\n            map(({ userStatus }) => userStatus.permissions),\r\n            map(permissions => this.dashboardWidgetService.getAvailableWidgets(permissions)),\r\n            tap(widgets => (this.widgetLayout = this.initLayout(widgets.map(w => w.id)))),\r\n        );\r\n        this.setTitle('breadcrumb.dashboard');\r\n    }\r\n\r\n    getClassForWidth(width: DashboardWidgetWidth): string {\r\n        switch (width) {\r\n            case 3:\r\n                return `clr-col-12 clr-col-sm-6 clr-col-lg-3`;\r\n            case 4:\r\n                return `clr-col-12 clr-col-sm-6 clr-col-lg-4`;\r\n            case 6:\r\n                return `clr-col-12 clr-col-lg-6`;\r\n            case 8:\r\n                return `clr-col-12 clr-col-lg-8`;\r\n            case 12:\r\n                return `clr-col-12`;\r\n            default:\r\n                assertNever(width);\r\n        }\r\n    }\r\n\r\n    getSupportedWidths(config: DashboardWidgetConfig): DashboardWidgetWidth[] {\r\n        return config.supportedWidths || [3, 4, 6, 8, 12];\r\n    }\r\n\r\n    setWidgetWidth(widget: WidgetLayout[number][number], width: DashboardWidgetWidth) {\r\n        widget.width = width;\r\n        this.recalculateLayout();\r\n    }\r\n\r\n    trackRow(index: number, row: WidgetLayout[number]) {\r\n        const id = row.map(item => `${item.id}:${item.width}`).join('|');\r\n        return id;\r\n    }\r\n\r\n    trackRowItem(index: number, item: WidgetLayout[number][number]) {\r\n        return item.config;\r\n    }\r\n\r\n    addWidget(id: string) {\r\n        const config = this.dashboardWidgetService.getWidgetById(id);\r\n        if (config) {\r\n            const width = this.getSupportedWidths(config)[0];\r\n            const widget: WidgetLayout[number][number] = {\r\n                id,\r\n                config,\r\n                width,\r\n            };\r\n            let targetRow: WidgetLayout[number];\r\n            if (this.widgetLayout && this.widgetLayout.length) {\r\n                targetRow = this.widgetLayout[this.widgetLayout.length - 1];\r\n            } else {\r\n                targetRow = [];\r\n                this.widgetLayout?.push(targetRow);\r\n            }\r\n            targetRow.push(widget);\r\n            this.recalculateLayout();\r\n        }\r\n    }\r\n\r\n    removeWidget(widget: WidgetLayout[number][number]) {\r\n        widget.id = this.deletionMarker;\r\n        this.recalculateLayout();\r\n    }\r\n\r\n    drop(event: CdkDragDrop<{ index: number }>) {\r\n        const { currentIndex, previousIndex, previousContainer, container } = event;\r\n        if (previousIndex === currentIndex && previousContainer.data.index === container.data.index) {\r\n            // Nothing changed\r\n            return;\r\n        }\r\n        if (this.widgetLayout) {\r\n            const previousLayoutRow = this.widgetLayout[previousContainer.data.index];\r\n            const newLayoutRow = this.widgetLayout[container.data.index];\r\n\r\n            previousLayoutRow.splice(previousIndex, 1);\r\n            newLayoutRow.splice(currentIndex, 0, event.item.data);\r\n            this.recalculateLayout();\r\n        }\r\n    }\r\n\r\n    private initLayout(availableIds: string[]): WidgetLayout {\r\n        const savedLayoutDef = this.localStorageService.get('dashboardWidgetLayout');\r\n        let layoutDef: WidgetLayoutDefinition | undefined;\r\n        if (savedLayoutDef) {\r\n            // validate all the IDs from the saved layout are still available\r\n            layoutDef = savedLayoutDef.filter(item => availableIds.includes(item.id));\r\n        }\r\n        return this.dashboardWidgetService.getWidgetLayout(layoutDef);\r\n    }\r\n\r\n    private recalculateLayout() {\r\n        if (this.widgetLayout) {\r\n            const flattened = this.widgetLayout\r\n                .reduce((flat, row) => [...flat, ...row], [])\r\n                .filter(item => item.id !== this.deletionMarker);\r\n            const newLayoutDef: WidgetLayoutDefinition = flattened.map(item => ({\r\n                id: item.id,\r\n                width: item.width,\r\n            }));\r\n            this.widgetLayout = this.dashboardWidgetService.getWidgetLayout(newLayoutDef);\r\n            this.localStorageService.set('dashboardWidgetLayout', newLayoutDef);\r\n            setTimeout(() => this.changedDetectorRef.markForCheck());\r\n        }\r\n    }\r\n}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\n\r\nexport const dashboardRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: DashboardComponent,\r\n        pathMatch: 'full',\r\n    },\r\n];\r\n","<vdr-data-table-2 [items]=\"latestOrders$ | async\" id=\"latest-orders-widget-list\">\r\n    <vdr-dt2-column [heading]=\"'common.code' | translate\" id=\"code\">\r\n        <ng-template let-order=\"item\">\r\n            <a class=\"button-ghost\" [routerLink]=\"['/orders/', order.id]\"\r\n                ><span>{{ order.code }}</span>\r\n                <clr-icon shape=\"arrow right\"></clr-icon>\r\n            </a>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'order.state' | translate\" id=\"state\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-order=\"item\">\r\n            <vdr-order-state-label [state]=\"order.state\"></vdr-order-state-label>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'customer.customer' | translate\" id=\"customer\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-order=\"item\">\r\n            <vdr-customer-label [customer]=\"order.customer\"></vdr-customer-label>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'order.total' | translate\" id=\"total\">\r\n        <ng-template let-order=\"item\">\r\n            {{ order.totalWithTax | localeCurrency : order.currencyCode }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'order.placed-at' | translate\" id=\"placed-at\">\r\n        <ng-template let-order=\"item\">\r\n            {{ order.orderPlacedAt | timeAgo }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n</vdr-data-table-2>\r\n","import { ChangeDetectionStrategy, Component, NgModule, OnInit } from '@angular/core';\r\nimport {\r\n    CoreModule,\r\n    DataService,\r\n    GetLatestOrdersDocument,\r\n    GetLatestOrdersQuery,\r\n    GetOrderListQuery,\r\n    ItemOf,\r\n    SharedModule,\r\n    SortOrder,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst GET_LATEST_ORDERS = gql`\r\n    query GetLatestOrders($options: OrderListOptions) {\r\n        orders(options: $options) {\r\n            items {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                type\r\n                orderPlacedAt\r\n                code\r\n                state\r\n                total\r\n                totalWithTax\r\n                currencyCode\r\n                customer {\r\n                    id\r\n                    firstName\r\n                    lastName\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-latest-orders-widget',\r\n    templateUrl: './latest-orders-widget.component.html',\r\n    styleUrls: ['./latest-orders-widget.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class LatestOrdersWidgetComponent implements OnInit {\r\n    latestOrders$: Observable<Array<ItemOf<GetLatestOrdersQuery, 'orders'>>>;\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.latestOrders$ = this.dataService\r\n            .query(GetLatestOrdersDocument, {\r\n                options: {\r\n                    take: 10,\r\n                    filter: {\r\n                        active: { eq: false },\r\n                        state: { notIn: ['Cancelled', 'Draft'] },\r\n                    },\r\n                    sort: {\r\n                        orderPlacedAt: SortOrder.DESC,\r\n                    },\r\n                },\r\n            })\r\n            .refetchOnChannelChange()\r\n            .mapStream(data => data.orders.items);\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CoreModule, SharedModule],\r\n    declarations: [LatestOrdersWidgetComponent],\r\n})\r\nexport class LatestOrdersWidgetModule {}\r\n","<vdr-chart [entries]=\"metrics$ | async\" />\r\n<div class=\"flex\" *ngIf=\"metricType$ | async as activeMetricType\">\r\n    <button\r\n        class=\"button-small\"\r\n        (click)=\"metricType$.next(MetricType.OrderTotal)\"\r\n        [class.active]=\"activeMetricType === MetricType.OrderTotal\"\r\n    >\r\n        {{ 'dashboard.metric-order-total-value' | translate }}\r\n    </button>\r\n    <button\r\n        class=\"ml-1 button-small\"\r\n        (click)=\"metricType$.next(MetricType.OrderCount)\"\r\n        [class.active]=\"activeMetricType === MetricType.OrderCount\"\r\n    >\r\n        {{ 'dashboard.metric-number-of-orders' | translate }}\r\n    </button>\r\n    <button\r\n        class=\"ml-1 button-small\"\r\n        (click)=\"metricType$.next(MetricType.AverageOrderValue)\"\r\n        [class.active]=\"activeMetricType === MetricType.AverageOrderValue\"\r\n    >\r\n        {{ 'dashboard.metric-average-order-value' | translate }}\r\n    </button>\r\n    <div class=\"flex-spacer\"></div>\r\n    <button class=\"button-small\" (click)=\"refresh()\">\r\n        <clr-icon shape=\"refresh\"></clr-icon>\r\n    </button>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport {\r\n    ChartEntry,\r\n    ChartFormatOptions,\r\n    DataService,\r\n    GetOrderChartDataDocument,\r\n    MetricType,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { BehaviorSubject, combineLatest, Observable, Subject, switchMap } from 'rxjs';\r\nimport { distinctUntilChanged, map, startWith } from 'rxjs/operators';\r\n\r\nexport const GET_ORDER_CHART_DATA = gql`\r\n    query GetOrderChartData($refresh: Boolean, $types: [MetricType!]!) {\r\n        metricSummary(input: { interval: Daily, types: $types, refresh: $refresh }) {\r\n            interval\r\n            type\r\n            entries {\r\n                label\r\n                value\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-order-chart-widget',\r\n    templateUrl: './order-chart-widget.component.html',\r\n    styleUrls: ['./order-chart-widget.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderChartWidgetComponent implements OnInit {\r\n    constructor(private dataService: DataService) {}\r\n    metrics$: Observable<ChartEntry[]>;\r\n    refresh$ = new Subject<boolean>();\r\n    metricType$ = new BehaviorSubject(MetricType.OrderTotal);\r\n    MetricType = MetricType;\r\n\r\n    ngOnInit() {\r\n        const currencyCode$ = this.dataService.settings\r\n            .getActiveChannel()\r\n            .refetchOnChannelChange()\r\n            .mapStream(data => data.activeChannel.defaultCurrencyCode || undefined);\r\n        const uiState$ = this.dataService.client.uiState().mapStream(data => data.uiState);\r\n        const metricType$ = this.metricType$.pipe(distinctUntilChanged());\r\n        this.metrics$ = combineLatest(metricType$, currencyCode$, uiState$).pipe(\r\n            switchMap(([metricType, currencyCode, uiState]) =>\r\n                this.refresh$.pipe(\r\n                    startWith(false),\r\n                    switchMap(refresh =>\r\n                        this.dataService\r\n                            .query(GetOrderChartDataDocument, {\r\n                                types: [metricType],\r\n                                refresh,\r\n                            })\r\n                            .mapSingle(data => data.metricSummary)\r\n                            .pipe(\r\n                                map(metrics => {\r\n                                    const formatValueAs: 'currency' | 'number' =\r\n                                        metricType === MetricType.OrderCount ? 'number' : 'currency';\r\n                                    const locale = `${uiState.language}-${uiState.locale}`;\r\n\r\n                                    const formatOptions: ChartFormatOptions = {\r\n                                        formatValueAs,\r\n                                        currencyCode,\r\n                                        locale,\r\n                                    };\r\n                                    return (\r\n                                        metrics\r\n                                            .find(m => m.type === metricType)\r\n                                            ?.entries.map(entry => ({ ...entry, formatOptions })) ?? []\r\n                                    );\r\n                                }),\r\n                            ),\r\n                    ),\r\n                ),\r\n            ),\r\n        );\r\n    }\r\n\r\n    refresh() {\r\n        this.refresh$.next(true);\r\n    }\r\n}\r\n","<div class=\"stats\">\r\n    <div class=\"stat\">\r\n        <div class=\"stat-figure\">{{ totalOrderCount$ | async }}</div>\r\n        <div class=\"stat-label\">{{ 'dashboard.total-orders' | translate }}</div>\r\n    </div>\r\n    <div class=\"stat\">\r\n        <div class=\"stat-figure\">\r\n            {{ totalOrderValue$ | async | currency: (currencyCode$ | async) || undefined }}\r\n        </div>\r\n        <div class=\"stat-label\">{{ 'dashboard.total-order-value' | translate }}</div>\r\n    </div>\r\n</div>\r\n<div class=\"footer\">\r\n    <div class=\"flex\" *ngIf=\"selection$ | async as selection\">\r\n        <button class=\"button-small\" [class.active]=\"selection.date === today\" (click)=\"selection$.next({timeframe: 'day', date: today})\">\r\n            {{ 'dashboard.today' | translate }}\r\n        </button>\r\n        <button class=\"ml-1 button-small\" [class.active]=\"selection.date === yesterday\" (click)=\"selection$.next({timeframe: 'day', date: yesterday})\">\r\n            {{ 'dashboard.yesterday' | translate }}\r\n        </button>\r\n        <button class=\"ml-1 button-small\" [class.active]=\"selection.timeframe === 'week'\" (click)=\"selection$.next({timeframe: 'week'})\">\r\n            {{ 'dashboard.thisWeek' | translate }}\r\n        </button>\r\n        <button class=\"ml-1 button-small\" [class.active]=\"selection.timeframe === 'month'\" (click)=\"selection$.next({timeframe: 'month'})\">\r\n            {{ 'dashboard.thisMonth' | translate }}\r\n        </button>\r\n    </div>\r\n\r\n    <div class=\"date-range p5\" *ngIf=\"dateRange$ | async as range\">\r\n        {{ range.start | localeDate }} - {{ range.end | localeDate }}\r\n    </div>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, NgModule, OnInit } from '@angular/core';\r\nimport { CoreModule, DataService, GetOrderSummaryDocument } from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport dayjs from 'dayjs';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { distinctUntilChanged, map, shareReplay, switchMap } from 'rxjs/operators';\r\n\r\nexport type Timeframe = 'day' | 'week' | 'month';\r\n\r\nexport const GET_ORDER_SUMMARY = gql`\r\n    query GetOrderSummary($start: DateTime!, $end: DateTime!) {\r\n        orders(options: { filter: { orderPlacedAt: { between: { start: $start, end: $end } } } }) {\r\n            totalItems\r\n            items {\r\n                id\r\n                totalWithTax\r\n                currencyCode\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-order-summary-widget',\r\n    templateUrl: './order-summary-widget.component.html',\r\n    styleUrls: ['./order-summary-widget.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderSummaryWidgetComponent implements OnInit {\r\n    today = new Date();\r\n    yesterday = new Date(new Date().setDate(this.today.getDate() - 1));\r\n    totalOrderCount$: Observable<number>;\r\n    totalOrderValue$: Observable<number>;\r\n    currencyCode$: Observable<string | undefined>;\r\n    selection$ = new BehaviorSubject<{ timeframe: Timeframe; date?: Date }>({\r\n        timeframe: 'day',\r\n        date: this.today,\r\n    });\r\n    dateRange$: Observable<{ start: Date; end: Date }>;\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.dateRange$ = this.selection$.pipe(\r\n            distinctUntilChanged(),\r\n            map(selection => ({\r\n                start: dayjs(selection.date).startOf(selection.timeframe).toDate(),\r\n                end: dayjs(selection.date).endOf(selection.timeframe).toDate(),\r\n            })),\r\n            shareReplay(1),\r\n        );\r\n        const orderSummary$ = this.dateRange$.pipe(\r\n            switchMap(({ start, end }) =>\r\n                this.dataService\r\n                    .query(GetOrderSummaryDocument, { start: start.toISOString(), end: end.toISOString() })\r\n                    .refetchOnChannelChange()\r\n                    .mapStream(data => data.orders),\r\n            ),\r\n            shareReplay(1),\r\n        );\r\n        this.totalOrderCount$ = orderSummary$.pipe(map(res => res.totalItems));\r\n        this.totalOrderValue$ = orderSummary$.pipe(\r\n            map(res => res.items.reduce((total, order) => total + order.totalWithTax, 0) / 100),\r\n        );\r\n        this.currencyCode$ = this.dataService.settings\r\n            .getActiveChannel()\r\n            .refetchOnChannelChange()\r\n            .mapStream(data => data.activeChannel.defaultCurrencyCode || undefined);\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CoreModule],\r\n    declarations: [OrderSummaryWidgetComponent],\r\n})\r\nexport class OrderSummaryWidgetModule {}\r\n","import { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { DashboardWidgetConfig, Permission, WidgetLayoutDefinition } from '@vendure/admin-ui/core';\r\n\r\nimport { LatestOrdersWidgetComponent } from './widgets/latest-orders-widget/latest-orders-widget.component';\r\nimport { OrderChartWidgetComponent } from './widgets/order-chart-widget/order-chart-widget.component';\r\nimport { OrderSummaryWidgetComponent } from './widgets/order-summary-widget/order-summary-widget.component';\r\n\r\nexport const DEFAULT_DASHBOARD_WIDGET_LAYOUT: WidgetLayoutDefinition = [\r\n    { id: 'metrics', width: 12 },\r\n    { id: 'orderSummary', width: 6 },\r\n    { id: 'latestOrders', width: 6 },\r\n];\r\n\r\nexport const DEFAULT_WIDGETS: { [id: string]: DashboardWidgetConfig } = {\r\n    metrics: {\r\n        title: _('dashboard.metrics'),\r\n        supportedWidths: [6, 8, 12],\r\n        loadComponent: () => OrderChartWidgetComponent,\r\n        requiresPermissions: [Permission.ReadOrder],\r\n    },\r\n    orderSummary: {\r\n        title: _('dashboard.orders-summary'),\r\n        loadComponent: () => OrderSummaryWidgetComponent,\r\n        supportedWidths: [4, 6, 8, 12],\r\n        requiresPermissions: [Permission.ReadOrder],\r\n    },\r\n    latestOrders: {\r\n        title: _('dashboard.latest-orders'),\r\n        loadComponent: () => LatestOrdersWidgetComponent,\r\n        supportedWidths: [6, 8, 12],\r\n        requiresPermissions: [Permission.ReadOrder],\r\n    },\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { DashboardWidgetService, SharedModule } from '@vendure/admin-ui/core';\r\n\r\nimport { DashboardWidgetComponent } from './components/dashboard-widget/dashboard-widget.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { dashboardRoutes } from './dashboard.routes';\r\nimport { DEFAULT_DASHBOARD_WIDGET_LAYOUT, DEFAULT_WIDGETS } from './default-widgets';\r\nimport { OrderChartWidgetComponent } from './widgets/order-chart-widget/order-chart-widget.component';\r\n\r\n@NgModule({\r\n    imports: [SharedModule, RouterModule.forChild(dashboardRoutes)],\r\n    declarations: [DashboardComponent, DashboardWidgetComponent, OrderChartWidgetComponent],\r\n})\r\nexport class DashboardModule {\r\n    constructor(dashboardWidgetService: DashboardWidgetService) {\r\n        Object.entries(DEFAULT_WIDGETS).map(([id, config]) => {\r\n            if (!dashboardWidgetService.getWidgetById(id)) {\r\n                dashboardWidgetService.registerWidget(id, config);\r\n            }\r\n        });\r\n        if (dashboardWidgetService.getDefaultLayout().length === 0) {\r\n            dashboardWidgetService.setDefaultLayout(DEFAULT_DASHBOARD_WIDGET_LAYOUT);\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\n\n@Component({\n    selector: 'vdr-test-widget',\n    templateUrl: './test-widget.component.html',\n    styleUrls: ['./test-widget.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TestWidgetComponent {}\n\n@NgModule({\n    declarations: [TestWidgetComponent],\n})\nexport class TestWidgetModule {}\n","<p>This is a test widget!</p>\r\n","<div *ngIf=\"administrator$ | async as administrator\">\r\n    <h4 class=\"\">\r\n        Welcome, {{ administrator.firstName }} {{ administrator.lastName }}<br />\r\n        <small class=\"p5\">Last login: {{ administrator.user.lastLogin | timeAgo }}</small>\r\n    </h4>\r\n\r\n    <p class=\"p5\" *ngIf=\"!hideVendureBranding || !hideVersion\">\r\n        {{ hideVendureBranding ? '' : 'Vendure' }} {{ hideVersion ? '' : ('Admin UI v' + version) }}\r\n    </p>\r\n</div>\r\n<div class=\"placeholder\">\r\n    <clr-icon shape=\"line-chart\" size=\"128\"></clr-icon>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, NgModule, OnInit } from '@angular/core';\r\nimport {\r\n    ADMIN_UI_VERSION,\r\n    CoreModule,\r\n    DataService,\r\n    GetActiveAdministratorQuery,\r\n    getAppConfig,\r\n} from '@vendure/admin-ui/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'vdr-welcome-widget',\r\n    templateUrl: './welcome-widget.component.html',\r\n    styleUrls: ['./welcome-widget.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class WelcomeWidgetComponent implements OnInit {\r\n    version = ADMIN_UI_VERSION;\r\n    administrator$: Observable<GetActiveAdministratorQuery['activeAdministrator']>;\r\n    brand = getAppConfig().brand;\r\n    hideVendureBranding = getAppConfig().hideVendureBranding;\r\n    hideVersion = getAppConfig().hideVersion;\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.administrator$ = this.dataService.administrator\r\n            .getActiveAdministrator()\r\n            .mapStream(data => data.activeAdministrator || null);\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CoreModule],\r\n    declarations: [WelcomeWidgetComponent],\r\n})\r\nexport class WelcomeWidgetModule {}\r\n"],"x_google_ignoreList":[]}