import { ChangeDetectorRef, OnInit } from '@angular/core';
import { UntypedFormControl } from '@angular/forms';
import { ConfigurableOperation, ConfigurableOperationDefinition, DataService, Dialog, FulfillOrderInput, OrderDetailFragment } from '@vendure/admin-ui/core';
import * as i0 from "@angular/core";
export declare class FulfillOrderDialogComponent implements Dialog<FulfillOrderInput>, OnInit {
    private dataService;
    private changeDetector;
    resolveWith: (result?: FulfillOrderInput) => void;
    fulfillmentHandlerDef: ConfigurableOperationDefinition;
    fulfillmentHandler: ConfigurableOperation;
    fulfillmentHandlerControl: UntypedFormControl;
    fulfillmentQuantities: {
        [lineId: string]: {
            fulfillCount: number;
            max: number;
        };
    };
    order: OrderDetailFragment;
    constructor(dataService: DataService, changeDetector: ChangeDetectorRef);
    ngOnInit(): void;
    getFulfillableCount(line: OrderDetailFragment['lines'][number], globalTrackInventory: boolean): number;
    getUnfulfilledCount(line: OrderDetailFragment['lines'][number]): number;
    canSubmit(): boolean;
    select(): void;
    cancel(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<FulfillOrderDialogComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<FulfillOrderDialogComponent, "vdr-fulfill-order-dialog", never, {}, {}, never, never, false, never>;
}
