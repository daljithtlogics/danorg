import { OnInit } from '@angular/core';
import { CancelOrderInput, Dialog, I18nService, OrderDetailFragment, RefundOrderInput } from '@vendure/admin-ui/core';
import * as i0 from "@angular/core";
type SelectionLine = {
    quantity: number;
    refund: boolean;
    cancel: boolean;
};
type Payment = NonNullable<OrderDetailFragment['payments']>[number];
export declare class RefundOrderDialogComponent implements OnInit, Dialog<{
    cancel: CancelOrderInput;
    refund: RefundOrderInput;
}> {
    private i18nService;
    order: OrderDetailFragment;
    resolveWith: (result?: {
        cancel: CancelOrderInput;
        refund: RefundOrderInput;
    }) => void;
    reason: string;
    settledPayments: Payment[];
    selectedPayment: Payment;
    lineQuantities: {
        [lineId: string]: SelectionLine;
    };
    refundShipping: boolean;
    adjustment: number;
    reasons: string[];
    constructor(i18nService: I18nService);
    get refundTotal(): number;
    get settledPaymentsTotal(): number;
    lineCanBeRefundedOrCancelled(line: OrderDetailFragment['lines'][number]): boolean;
    ngOnInit(): void;
    handleZeroQuantity(line?: SelectionLine): void;
    isRefunding(): boolean;
    isCancelling(): boolean;
    canSubmit(): boolean;
    select(): void;
    cancel(): void;
    private getOrderLineInput;
    static ɵfac: i0.ɵɵFactoryDeclaration<RefundOrderDialogComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RefundOrderDialogComponent, "vdr-refund-order-dialog", never, {}, {}, never, never, false, never>;
}
export {};
