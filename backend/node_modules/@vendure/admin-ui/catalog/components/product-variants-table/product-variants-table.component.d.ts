import { ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';
import { UntypedFormArray, UntypedFormGroup } from '@angular/forms';
import { Asset, Permission, ProductDetailFragment, ProductVariantFragment } from '@vendure/admin-ui/core';
import * as i0 from "@angular/core";
interface SelectedAssets {
    assets?: Asset[];
    featuredAsset?: Asset;
}
interface PaginationConfig {
    totalItems: number;
    currentPage: number;
    itemsPerPage: number;
}
export declare class ProductVariantsTableComponent implements OnInit, OnDestroy {
    private changeDetector;
    formArray: UntypedFormArray;
    variants: ProductVariantFragment[];
    paginationConfig: PaginationConfig;
    channelPriceIncludesTax: boolean;
    optionGroups: ProductDetailFragment['optionGroups'];
    pendingAssetChanges: {
        [variantId: string]: SelectedAssets;
    };
    formGroupMap: Map<string, UntypedFormGroup>;
    readonly updatePermission: Permission[];
    private subscription;
    constructor(changeDetector: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnDestroy(): void;
    trackByFn(index: number, item: any): any;
    getFeaturedAsset(variant: ProductVariantFragment): {
        __typename?: "Asset" | undefined;
        id: string;
        createdAt: any;
        updatedAt: any;
        name: string;
        fileSize: number;
        mimeType: string;
        type: import("@vendure/admin-ui/core").AssetType;
        preview: string;
        source: string;
        width: number;
        height: number;
        focalPoint?: {
            __typename?: "Coordinate" | undefined;
            x: number;
            y: number;
        } | null | undefined;
    } | null | undefined;
    optionGroupName(optionGroupId: string): string | undefined;
    private buildFormGroupMap;
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductVariantsTableComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ProductVariantsTableComponent, "vdr-product-variants-table", never, { "formArray": { "alias": "productVariantsFormArray"; "required": false; }; "variants": { "alias": "variants"; "required": false; }; "paginationConfig": { "alias": "paginationConfig"; "required": false; }; "channelPriceIncludesTax": { "alias": "channelPriceIncludesTax"; "required": false; }; "optionGroups": { "alias": "optionGroups"; "required": false; }; "pendingAssetChanges": { "alias": "pendingAssetChanges"; "required": false; }; }, {}, never, never, false, never>;
}
export {};
