import { OnInit } from '@angular/core';
import { DataService, GetCollectionListDocument, GetCollectionListQuery, ItemOf, LanguageCode, NotificationService, TypedBaseListComponent } from '@vendure/admin-ui/core';
import { Observable } from 'rxjs';
import { CollectionOrderEvent } from '../collection-data-table/collection-data-table.component';
import * as i0 from "@angular/core";
export declare class CollectionListComponent extends TypedBaseListComponent<typeof GetCollectionListDocument, 'collections'> implements OnInit {
    protected dataService: DataService;
    private notificationService;
    activeCollectionId$: Observable<string | null>;
    activeCollectionIndex$: Observable<number>;
    activeCollectionTitle$: Observable<string>;
    subCollections$: Observable<Array<ItemOf<GetCollectionListQuery, 'collections'>>>;
    expandedIds: string[];
    readonly customFields: import("@vendure/admin-ui/core").CustomFieldConfig[];
    readonly filters: import("@vendure/admin-ui/core").DataTableFilterCollection<import("@vendure/admin-ui/core").CollectionFilterParameter>;
    readonly sorts: import("@vendure/admin-ui/core").DataTableSortCollection<import("@vendure/admin-ui/core").CollectionSortParameter, ["createdAt", "updatedAt", "name", "slug", "position"]>;
    constructor(dataService: DataService, notificationService: NotificationService);
    ngOnInit(): void;
    onRearrange(event: CollectionOrderEvent): void;
    closeContents(): void;
    setLanguage(code: LanguageCode): void;
    toggleExpanded(collection: ItemOf<GetCollectionListQuery, 'collections'>): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<CollectionListComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CollectionListComponent, "vdr-collection-list", never, {}, {}, never, never, false, never>;
}
