import { CdkDragDrop } from '@angular/cdk/drag-drop';
import { ChangeDetectorRef, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { DataService, SelectionManager } from '@vendure/admin-ui/core';
import { Observable } from 'rxjs';
import { RootNode, TreeNode } from './array-to-tree';
import { CollectionTreeService } from './collection-tree.service';
import { CollectionPartial } from './collection-tree.types';
import * as i0 from "@angular/core";
export declare class CollectionTreeNodeComponent implements OnInit, OnChanges, OnDestroy {
    private parent;
    private dataService;
    private collectionTreeService;
    private router;
    private route;
    private changeDetectorRef;
    depth: number;
    parentName: string;
    collectionTree: TreeNode<CollectionPartial>;
    activeCollectionId: string;
    expandAll: boolean;
    selectionManager: SelectionManager<CollectionPartial>;
    hasUpdatePermission$: Observable<boolean>;
    hasDeletePermission$: Observable<boolean>;
    moveListItems: Array<{
        path: string;
        id: string;
    }>;
    private subscription;
    constructor(parent: CollectionTreeNodeComponent, dataService: DataService, collectionTreeService: CollectionTreeService, router: Router, route: ActivatedRoute, changeDetectorRef: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    trackByFn(index: number, item: CollectionPartial): string;
    toggleExpanded(collection: TreeNode<CollectionPartial>): void;
    getMoveListItems(collection: CollectionPartial): void;
    move(collection: CollectionPartial, parentId: string): void;
    moveUp(collection: CollectionPartial, currentIndex: number): void;
    moveDown(collection: CollectionPartial, currentIndex: number): void;
    drop(event: CdkDragDrop<CollectionPartial | RootNode<CollectionPartial>>): void;
    delete(id: string): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<CollectionTreeNodeComponent, [{ optional: true; skipSelf: true; }, null, null, null, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CollectionTreeNodeComponent, "vdr-collection-tree-node", never, { "collectionTree": { "alias": "collectionTree"; "required": false; }; "activeCollectionId": { "alias": "activeCollectionId"; "required": false; }; "expandAll": { "alias": "expandAll"; "required": false; }; "selectionManager": { "alias": "selectionManager"; "required": false; }; }, {}, never, never, false, never>;
}
