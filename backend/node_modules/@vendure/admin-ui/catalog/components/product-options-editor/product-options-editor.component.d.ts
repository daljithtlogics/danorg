import { ChangeDetectorRef, OnInit } from '@angular/core';
import { UntypedFormArray, UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { BaseDetailComponent, CustomFieldConfig, DataService, GetProductVariantOptionsQuery, LanguageCode, NotificationService, Permission, ServerConfigService, TranslationOf } from '@vendure/admin-ui/core';
import { Observable } from 'rxjs';
import { ProductDetailService } from '../../providers/product-detail/product-detail.service';
import * as i0 from "@angular/core";
type ProductWithOptions = NonNullable<GetProductVariantOptionsQuery['product']>;
export declare class ProductOptionsEditorComponent extends BaseDetailComponent<ProductWithOptions> implements OnInit {
    protected route: ActivatedRoute;
    protected router: Router;
    protected serverConfigService: ServerConfigService;
    protected dataService: DataService;
    private productDetailService;
    private formBuilder;
    private changeDetector;
    private notificationService;
    detailForm: UntypedFormGroup;
    optionGroups$: Observable<ProductWithOptions['optionGroups']>;
    languageCode$: Observable<LanguageCode>;
    availableLanguages$: Observable<LanguageCode[]>;
    optionGroupCustomFields: CustomFieldConfig[];
    optionCustomFields: CustomFieldConfig[];
    autoUpdateVariantNames: boolean;
    paginationSettings: {
        [groupId: string]: {
            currentPage: number;
            itemsPerPage: number;
        };
    };
    readonly updatePermission: Permission[];
    constructor(route: ActivatedRoute, router: Router, serverConfigService: ServerConfigService, dataService: DataService, productDetailService: ProductDetailService, formBuilder: UntypedFormBuilder, changeDetector: ChangeDetectorRef, notificationService: NotificationService);
    ngOnInit(): void;
    getOptionGroups(): UntypedFormGroup[];
    getOptions(optionGroup: UntypedFormGroup): UntypedFormGroup[];
    save(): void;
    private getUpdatedOptionGroup;
    private getUpdatedOption;
    protected setFormValues(entity: ProductWithOptions, languageCode: LanguageCode): void;
    protected setCustomFieldsForm<T extends ProductWithOptions['optionGroups'][0] | ProductWithOptions['optionGroups'][0]['options'][0]>(customFields: CustomFieldConfig[], formGroup: UntypedFormGroup, entity: T, currentTranslation?: TranslationOf<T>): void;
    protected setOptionGroupForm(entity: ProductWithOptions['optionGroups'][0], groupsForm: UntypedFormArray, currentTranslation?: TranslationOf<ProductWithOptions['optionGroups'][0]>): UntypedFormGroup;
    protected setOptionForm(entity: ProductWithOptions['optionGroups'][0]['options'][0], optionsForm: UntypedFormArray, currentTranslation?: TranslationOf<ProductWithOptions['optionGroups'][0]['options'][0]>): UntypedFormGroup;
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductOptionsEditorComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ProductOptionsEditorComponent, "vdr-product-options-editor", never, {}, {}, never, never, false, never>;
}
export {};
