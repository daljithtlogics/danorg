import { Component, EventEmitter, Input, Output, ViewChild, ViewContainerRef, } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@vendure/admin-ui/core";
export class CustomerHistoryEntryHostComponent {
    constructor(historyEntryComponentService) {
        this.historyEntryComponentService = historyEntryComponentService;
        this.expandClick = new EventEmitter();
    }
    ngOnInit() {
        const componentType = this.historyEntryComponentService.getComponent(this.entry.type);
        const componentRef = this.portalRef.createComponent(componentType);
        componentRef.instance.entry = this.entry;
        componentRef.instance.customer = this.customer;
        this.instance = componentRef.instance;
        this.componentRef = componentRef;
    }
    ngOnDestroy() {
        this.componentRef?.destroy();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: CustomerHistoryEntryHostComponent, deps: [{ token: i1.HistoryEntryComponentService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.2", type: CustomerHistoryEntryHostComponent, selector: "vdr-customer-history-entry-host", inputs: { entry: "entry", customer: "customer", expanded: "expanded" }, outputs: { expandClick: "expandClick" }, viewQueries: [{ propertyName: "portalRef", first: true, predicate: ["portal"], descendants: true, read: ViewContainerRef, static: true }], exportAs: ["historyEntry"], ngImport: i0, template: ` <vdr-timeline-entry
        [displayType]="instance.getDisplayType(entry)"
        [iconShape]="instance.getIconShape && instance.getIconShape(entry)"
        [createdAt]="entry.createdAt"
        [name]="instance.getName && instance.getName(entry)"
        [featured]="instance.isFeatured(entry)"
        [collapsed]="!expanded && !instance.isFeatured(entry)"
        (expandClick)="expandClick.emit()"
    >
        <div #portal></div>
    </vdr-timeline-entry>`, isInline: true, dependencies: [{ kind: "component", type: i1.TimelineEntryComponent, selector: "vdr-timeline-entry", inputs: ["displayType", "createdAt", "name", "featured", "iconShape", "isLast", "collapsed"], outputs: ["expandClick"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: CustomerHistoryEntryHostComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'vdr-customer-history-entry-host',
                    template: ` <vdr-timeline-entry
        [displayType]="instance.getDisplayType(entry)"
        [iconShape]="instance.getIconShape && instance.getIconShape(entry)"
        [createdAt]="entry.createdAt"
        [name]="instance.getName && instance.getName(entry)"
        [featured]="instance.isFeatured(entry)"
        [collapsed]="!expanded && !instance.isFeatured(entry)"
        (expandClick)="expandClick.emit()"
    >
        <div #portal></div>
    </vdr-timeline-entry>`,
                    exportAs: 'historyEntry',
                }]
        }], ctorParameters: function () { return [{ type: i1.HistoryEntryComponentService }]; }, propDecorators: { entry: [{
                type: Input
            }], customer: [{
                type: Input
            }], expanded: [{
                type: Input
            }], expandClick: [{
                type: Output
            }], portalRef: [{
                type: ViewChild,
                args: ['portal', { static: true, read: ViewContainerRef }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9tZXItaGlzdG9yeS1lbnRyeS1ob3N0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY3VzdG9tZXIvc3JjL2NvbXBvbmVudHMvY3VzdG9tZXItaGlzdG9yeS9jdXN0b21lci1oaXN0b3J5LWVudHJ5LWhvc3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDSCxTQUFTLEVBRVQsWUFBWSxFQUNaLEtBQUssRUFHTCxNQUFNLEVBRU4sU0FBUyxFQUNULGdCQUFnQixHQUNuQixNQUFNLGVBQWUsQ0FBQzs7O0FBdUJ2QixNQUFNLE9BQU8saUNBQWlDO0lBUzFDLFlBQW9CLDRCQUEwRDtRQUExRCxpQ0FBNEIsR0FBNUIsNEJBQTRCLENBQThCO1FBTHBFLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQVEsQ0FBQztJQUtnQyxDQUFDO0lBRWxGLFFBQVE7UUFDSixNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsNEJBQTRCLENBQUMsWUFBWSxDQUNoRSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FDcUIsQ0FBQztRQUV6QyxNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLGVBQWUsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUNuRSxZQUFZLENBQUMsUUFBUSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3pDLFlBQVksQ0FBQyxRQUFRLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDL0MsSUFBSSxDQUFDLFFBQVEsR0FBRyxZQUFZLENBQUMsUUFBUSxDQUFDO1FBQ3RDLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO0lBQ3JDLENBQUM7SUFFRCxXQUFXO1FBQ1AsSUFBSSxDQUFDLFlBQVksRUFBRSxPQUFPLEVBQUUsQ0FBQztJQUNqQyxDQUFDOzhHQXpCUSxpQ0FBaUM7a0dBQWpDLGlDQUFpQyx3UUFLQyxnQkFBZ0IsdUVBbEJqRDs7Ozs7Ozs7OzswQkFVWTs7MkZBR2IsaUNBQWlDO2tCQWY3QyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSxpQ0FBaUM7b0JBQzNDLFFBQVEsRUFBRTs7Ozs7Ozs7OzswQkFVWTtvQkFDdEIsUUFBUSxFQUFFLGNBQWM7aUJBQzNCO21IQUVZLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxRQUFRO3NCQUFoQixLQUFLO2dCQUNHLFFBQVE7c0JBQWhCLEtBQUs7Z0JBQ0ksV0FBVztzQkFBcEIsTUFBTTtnQkFDd0QsU0FBUztzQkFBdkUsU0FBUzt1QkFBQyxRQUFRLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgICBDb21wb25lbnQsXHJcbiAgICBDb21wb25lbnRSZWYsXHJcbiAgICBFdmVudEVtaXR0ZXIsXHJcbiAgICBJbnB1dCxcclxuICAgIE9uRGVzdHJveSxcclxuICAgIE9uSW5pdCxcclxuICAgIE91dHB1dCxcclxuICAgIFR5cGUsXHJcbiAgICBWaWV3Q2hpbGQsXHJcbiAgICBWaWV3Q29udGFpbmVyUmVmLFxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge1xyXG4gICAgQ3VzdG9tZXJGcmFnbWVudCxcclxuICAgIEN1c3RvbWVySGlzdG9yeUVudHJ5Q29tcG9uZW50LFxyXG4gICAgSGlzdG9yeUVudHJ5Q29tcG9uZW50U2VydmljZSxcclxuICAgIFRpbWVsaW5lSGlzdG9yeUVudHJ5LFxyXG59IGZyb20gJ0B2ZW5kdXJlL2FkbWluLXVpL2NvcmUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ3Zkci1jdXN0b21lci1oaXN0b3J5LWVudHJ5LWhvc3QnLFxyXG4gICAgdGVtcGxhdGU6IGAgPHZkci10aW1lbGluZS1lbnRyeVxyXG4gICAgICAgIFtkaXNwbGF5VHlwZV09XCJpbnN0YW5jZS5nZXREaXNwbGF5VHlwZShlbnRyeSlcIlxyXG4gICAgICAgIFtpY29uU2hhcGVdPVwiaW5zdGFuY2UuZ2V0SWNvblNoYXBlICYmIGluc3RhbmNlLmdldEljb25TaGFwZShlbnRyeSlcIlxyXG4gICAgICAgIFtjcmVhdGVkQXRdPVwiZW50cnkuY3JlYXRlZEF0XCJcclxuICAgICAgICBbbmFtZV09XCJpbnN0YW5jZS5nZXROYW1lICYmIGluc3RhbmNlLmdldE5hbWUoZW50cnkpXCJcclxuICAgICAgICBbZmVhdHVyZWRdPVwiaW5zdGFuY2UuaXNGZWF0dXJlZChlbnRyeSlcIlxyXG4gICAgICAgIFtjb2xsYXBzZWRdPVwiIWV4cGFuZGVkICYmICFpbnN0YW5jZS5pc0ZlYXR1cmVkKGVudHJ5KVwiXHJcbiAgICAgICAgKGV4cGFuZENsaWNrKT1cImV4cGFuZENsaWNrLmVtaXQoKVwiXHJcbiAgICA+XHJcbiAgICAgICAgPGRpdiAjcG9ydGFsPjwvZGl2PlxyXG4gICAgPC92ZHItdGltZWxpbmUtZW50cnk+YCxcclxuICAgIGV4cG9ydEFzOiAnaGlzdG9yeUVudHJ5JyxcclxufSlcclxuZXhwb3J0IGNsYXNzIEN1c3RvbWVySGlzdG9yeUVudHJ5SG9zdENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuICAgIEBJbnB1dCgpIGVudHJ5OiBUaW1lbGluZUhpc3RvcnlFbnRyeTtcclxuICAgIEBJbnB1dCgpIGN1c3RvbWVyOiBDdXN0b21lckZyYWdtZW50O1xyXG4gICAgQElucHV0KCkgZXhwYW5kZWQ6IGJvb2xlYW47XHJcbiAgICBAT3V0cHV0KCkgZXhwYW5kQ2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XHJcbiAgICBAVmlld0NoaWxkKCdwb3J0YWwnLCB7IHN0YXRpYzogdHJ1ZSwgcmVhZDogVmlld0NvbnRhaW5lclJlZiB9KSBwb3J0YWxSZWY6IFZpZXdDb250YWluZXJSZWY7XHJcbiAgICBpbnN0YW5jZTogQ3VzdG9tZXJIaXN0b3J5RW50cnlDb21wb25lbnQ7XHJcbiAgICBwcml2YXRlIGNvbXBvbmVudFJlZjogQ29tcG9uZW50UmVmPEN1c3RvbWVySGlzdG9yeUVudHJ5Q29tcG9uZW50PjtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGhpc3RvcnlFbnRyeUNvbXBvbmVudFNlcnZpY2U6IEhpc3RvcnlFbnRyeUNvbXBvbmVudFNlcnZpY2UpIHt9XHJcblxyXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgY29uc3QgY29tcG9uZW50VHlwZSA9IHRoaXMuaGlzdG9yeUVudHJ5Q29tcG9uZW50U2VydmljZS5nZXRDb21wb25lbnQoXHJcbiAgICAgICAgICAgIHRoaXMuZW50cnkudHlwZSxcclxuICAgICAgICApIGFzIFR5cGU8Q3VzdG9tZXJIaXN0b3J5RW50cnlDb21wb25lbnQ+O1xyXG5cclxuICAgICAgICBjb25zdCBjb21wb25lbnRSZWYgPSB0aGlzLnBvcnRhbFJlZi5jcmVhdGVDb21wb25lbnQoY29tcG9uZW50VHlwZSk7XHJcbiAgICAgICAgY29tcG9uZW50UmVmLmluc3RhbmNlLmVudHJ5ID0gdGhpcy5lbnRyeTtcclxuICAgICAgICBjb21wb25lbnRSZWYuaW5zdGFuY2UuY3VzdG9tZXIgPSB0aGlzLmN1c3RvbWVyO1xyXG4gICAgICAgIHRoaXMuaW5zdGFuY2UgPSBjb21wb25lbnRSZWYuaW5zdGFuY2U7XHJcbiAgICAgICAgdGhpcy5jb21wb25lbnRSZWYgPSBjb21wb25lbnRSZWY7XHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICAgICAgdGhpcy5jb21wb25lbnRSZWY/LmRlc3Ryb3koKTtcclxuICAgIH1cclxufVxyXG4iXX0=