import { Component, EventEmitter, Input, Output } from '@angular/core';
import { map } from 'rxjs/operators';
import { BaseNavComponent } from '../base-nav/base-nav.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@clr/angular";
import * as i3 from "@angular/router";
import * as i4 from "../../shared/components/status-badge/status-badge.component";
import * as i5 from "../../shared/components/ui-extension-point/ui-extension-point.component";
import * as i6 from "@ngx-translate/core";
export class MainNavComponent extends BaseNavComponent {
    constructor() {
        super(...arguments);
        this.itemClick = new EventEmitter();
        this.expandedSections = [];
    }
    ngOnInit() {
        super.ngOnInit();
        this.mainMenuConfig$ = this.navBuilderService.menuConfig$.pipe(map(sections => sections.filter(s => this.displayMode ? s.displayMode === this.displayMode : !s.displayMode)));
    }
    toggleExpand(section) {
        if (this.expandedSections.includes(section.id)) {
            this.expandedSections = this.expandedSections.filter(id => id !== section.id);
        }
        else {
            this.expandedSections.push(section.id);
        }
    }
    setExpanded(section, expanded) {
        if (expanded) {
            this.expandedSections.push(section.id);
        }
        else {
            this.expandedSections = this.expandedSections.filter(id => id !== section.id);
        }
    }
    getStyleForSection(section) {
        if (section.collapsible) {
            if (this.expandedSections.includes(section.id)) {
                return { maxHeight: `${section.items.length * 33}px`, opacity: 1, visibility: 'visible' };
            }
            else {
                return { maxHeight: '0px', opacity: 0, visibility: 'hidden' };
            }
        }
    }
    onItemClick(item, event) {
        item.onClick?.(event);
        this.itemClick.emit(item);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: MainNavComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.2", type: MainNavComponent, selector: "vdr-main-nav", inputs: { displayMode: "displayMode" }, outputs: { itemClick: "itemClick" }, usesInheritance: true, ngImport: i0, template: "<nav class=\"main-nav\">\r\n    <section class=\"\">\r\n        <ng-container *ngFor=\"let section of mainMenuConfig$ | async\">\r\n            <section\r\n                class=\"nav-group\"\r\n                [attr.data-section-id]=\"section.id\"\r\n                [class.collapsible]=\"section.collapsible\"\r\n                [class.collapsed]=\"section.collapsible && !expandedSections.includes(section.id)\"\r\n                routerLinkActive=\"active\"\r\n                (isActiveChange)=\"setExpanded(section, $event)\"\r\n                *ngIf=\"shouldDisplayLink(section)\"\r\n            >\r\n                <vdr-ui-extension-point\r\n                    [locationId]=\"section.id\"\r\n                    api=\"navMenu\"\r\n                    [topPx]=\"0\"\r\n                    [leftPx]=\"8\"\r\n                    display=\"block\"\r\n                >\r\n                    <div class=\"section-header\">\r\n                        <ng-container\r\n                            *ngIf=\"navBuilderService.sectionBadges[section.id] | async as sectionBadge\"\r\n                        >\r\n                            <vdr-status-badge\r\n                                *ngIf=\"sectionBadge !== 'none'\"\r\n                                [type]=\"sectionBadge\"\r\n                            ></vdr-status-badge>\r\n                        </ng-container>\r\n                        <label class=\"nav-group-header mx-4\" [for]=\"section.id\">{{\r\n                            section.label | translate\r\n                        }}</label>\r\n                        <button *ngIf=\"section.collapsible\" class=\"button-small bg-weight-150\" (click)=\"toggleExpand(section)\">\r\n                            <clr-icon\r\n                                [attr.shape]=\"expandedSections.includes(section.id) ? 'caret up' : 'caret down'\"\r\n                                size=\"12\"\r\n                                [title]=\"'common.expand-entries' | translate\"\r\n                            ></clr-icon>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"nav-list\" [ngStyle]=\"getStyleForSection(section)\">\r\n                        <ng-container *ngFor=\"let item of section.items\">\r\n                            <div\r\n                                *ngIf=\"shouldDisplayLink(item)\"\r\n                                class=\"nav-link px-4\"\r\n                                routerLinkActive=\"active\"\r\n                            >\r\n                                <a\r\n                                    [attr.data-item-id]=\"section.id\"\r\n                                    [routerLink]=\"getRouterLink(item)\"\r\n                                    (click)=\"onItemClick(item, $event)\"\r\n                                >\r\n                                    <ng-container *ngIf=\"item.statusBadge | async as itemBadge\">\r\n                                        <vdr-status-badge\r\n                                            *ngIf=\"itemBadge.type !== 'none'\"\r\n                                            [type]=\"itemBadge.type\"\r\n                                        ></vdr-status-badge>\r\n                                    </ng-container>\r\n                                    <clr-icon\r\n                                        [attr.shape]=\"item.icon || 'block'\"\r\n                                        size=\"16\"\r\n                                        [title]=\"item.label | translate\"\r\n                                    ></clr-icon>\r\n                                    <span class=\"\">{{ item.label | translate }}</span>\r\n                                </a>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                </vdr-ui-extension-point>\r\n            </section>\r\n        </ng-container>\r\n    </section>\r\n</nav>\r\n", styles: [":host{background-color:var(--clr-nav-background-color)}nav.main-nav{height:100%;border-right-color:var(--clr-sidenav-border-color)}.main-nav .nav-group{margin-bottom:calc(var(--space-unit) * 2);padding:calc(var(--space-unit) * 2) 0;overflow:hidden;transition:padding .2s ease-in-out,margin-bottom .2s ease-in-out}.main-nav .nav-group.collapsible.collapsed{padding:3px 0;margin-bottom:calc(var(--space-unit) * 1)}.main-nav .nav-group.active:not(.collapsible.collapsed){background-color:var(--color-weight-125)}.main-nav .nav-group .nav-list{margin:0;transition:max-height .2s ease-in-out,opacity .2s ease-in-out}.main-nav .nav-group .section-header{display:flex;align-items:flex-start;justify-content:space-between;padding-inline-end:calc(var(--space-unit) * 4)}.main-nav .nav-group .nav-group-header{display:block;margin:0 0 var(--space-unit);font-size:var(--font-size-xs);letter-spacing:.05em;color:var(--color-weight-700);text-transform:uppercase}.main-nav .nav-group .nav-link{display:flex;align-items:center;line-height:100%;border-inline-end:2px solid transparent;font-size:var(--font-size-sm);padding:var(--space-unit) 0;transition:border .1s,color .1s}.main-nav .nav-group .nav-link a:link,.main-nav .nav-group .nav-link a:visited{color:var(--color-weight-700)}.main-nav .nav-group .nav-link:hover{color:var(--color-left-nav-text-hover);border-right-color:var(--color-weight-300)}.main-nav .nav-group .nav-link.active,.main-nav .nav-group .nav-link.active a:link,.main-nav .nav-group .nav-link.active a:visited{color:var(--color-text-active);border-right-color:var(--color-primary-500)}.main-nav .nav-group .nav-link.active clr-icon,.main-nav .nav-group .nav-link.active a:link clr-icon,.main-nav .nav-group .nav-link.active a:visited clr-icon{color:var(--color-primary-500)}.nav-list clr-icon{flex-shrink:0;margin-inline-end:var(--space-unit)}.nav-group{-webkit-hyphens:auto;hyphens:auto}.nav-group,.nav-link{position:relative}.nav-group vdr-status-badge{left:27px;top:6px}.nav-group .section-header vdr-status-badge{left:20px}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "directive", type: i2.ClrIconCustomTag, selector: "clr-icon" }, { kind: "directive", type: i2.ClrLabel, selector: "label", inputs: ["for"] }, { kind: "directive", type: i3.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "directive", type: i3.RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "ariaCurrentWhenActive", "routerLinkActive"], outputs: ["isActiveChange"], exportAs: ["routerLinkActive"] }, { kind: "component", type: i4.StatusBadgeComponent, selector: "vdr-status-badge", inputs: ["type"] }, { kind: "component", type: i5.UiExtensionPointComponent, selector: "vdr-ui-extension-point", inputs: ["locationId", "metadata", "topPx", "leftPx", "display", "api"] }, { kind: "pipe", type: i1.AsyncPipe, name: "async" }, { kind: "pipe", type: i6.TranslatePipe, name: "translate" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: MainNavComponent, decorators: [{
            type: Component,
            args: [{ selector: 'vdr-main-nav', template: "<nav class=\"main-nav\">\r\n    <section class=\"\">\r\n        <ng-container *ngFor=\"let section of mainMenuConfig$ | async\">\r\n            <section\r\n                class=\"nav-group\"\r\n                [attr.data-section-id]=\"section.id\"\r\n                [class.collapsible]=\"section.collapsible\"\r\n                [class.collapsed]=\"section.collapsible && !expandedSections.includes(section.id)\"\r\n                routerLinkActive=\"active\"\r\n                (isActiveChange)=\"setExpanded(section, $event)\"\r\n                *ngIf=\"shouldDisplayLink(section)\"\r\n            >\r\n                <vdr-ui-extension-point\r\n                    [locationId]=\"section.id\"\r\n                    api=\"navMenu\"\r\n                    [topPx]=\"0\"\r\n                    [leftPx]=\"8\"\r\n                    display=\"block\"\r\n                >\r\n                    <div class=\"section-header\">\r\n                        <ng-container\r\n                            *ngIf=\"navBuilderService.sectionBadges[section.id] | async as sectionBadge\"\r\n                        >\r\n                            <vdr-status-badge\r\n                                *ngIf=\"sectionBadge !== 'none'\"\r\n                                [type]=\"sectionBadge\"\r\n                            ></vdr-status-badge>\r\n                        </ng-container>\r\n                        <label class=\"nav-group-header mx-4\" [for]=\"section.id\">{{\r\n                            section.label | translate\r\n                        }}</label>\r\n                        <button *ngIf=\"section.collapsible\" class=\"button-small bg-weight-150\" (click)=\"toggleExpand(section)\">\r\n                            <clr-icon\r\n                                [attr.shape]=\"expandedSections.includes(section.id) ? 'caret up' : 'caret down'\"\r\n                                size=\"12\"\r\n                                [title]=\"'common.expand-entries' | translate\"\r\n                            ></clr-icon>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"nav-list\" [ngStyle]=\"getStyleForSection(section)\">\r\n                        <ng-container *ngFor=\"let item of section.items\">\r\n                            <div\r\n                                *ngIf=\"shouldDisplayLink(item)\"\r\n                                class=\"nav-link px-4\"\r\n                                routerLinkActive=\"active\"\r\n                            >\r\n                                <a\r\n                                    [attr.data-item-id]=\"section.id\"\r\n                                    [routerLink]=\"getRouterLink(item)\"\r\n                                    (click)=\"onItemClick(item, $event)\"\r\n                                >\r\n                                    <ng-container *ngIf=\"item.statusBadge | async as itemBadge\">\r\n                                        <vdr-status-badge\r\n                                            *ngIf=\"itemBadge.type !== 'none'\"\r\n                                            [type]=\"itemBadge.type\"\r\n                                        ></vdr-status-badge>\r\n                                    </ng-container>\r\n                                    <clr-icon\r\n                                        [attr.shape]=\"item.icon || 'block'\"\r\n                                        size=\"16\"\r\n                                        [title]=\"item.label | translate\"\r\n                                    ></clr-icon>\r\n                                    <span class=\"\">{{ item.label | translate }}</span>\r\n                                </a>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                </vdr-ui-extension-point>\r\n            </section>\r\n        </ng-container>\r\n    </section>\r\n</nav>\r\n", styles: [":host{background-color:var(--clr-nav-background-color)}nav.main-nav{height:100%;border-right-color:var(--clr-sidenav-border-color)}.main-nav .nav-group{margin-bottom:calc(var(--space-unit) * 2);padding:calc(var(--space-unit) * 2) 0;overflow:hidden;transition:padding .2s ease-in-out,margin-bottom .2s ease-in-out}.main-nav .nav-group.collapsible.collapsed{padding:3px 0;margin-bottom:calc(var(--space-unit) * 1)}.main-nav .nav-group.active:not(.collapsible.collapsed){background-color:var(--color-weight-125)}.main-nav .nav-group .nav-list{margin:0;transition:max-height .2s ease-in-out,opacity .2s ease-in-out}.main-nav .nav-group .section-header{display:flex;align-items:flex-start;justify-content:space-between;padding-inline-end:calc(var(--space-unit) * 4)}.main-nav .nav-group .nav-group-header{display:block;margin:0 0 var(--space-unit);font-size:var(--font-size-xs);letter-spacing:.05em;color:var(--color-weight-700);text-transform:uppercase}.main-nav .nav-group .nav-link{display:flex;align-items:center;line-height:100%;border-inline-end:2px solid transparent;font-size:var(--font-size-sm);padding:var(--space-unit) 0;transition:border .1s,color .1s}.main-nav .nav-group .nav-link a:link,.main-nav .nav-group .nav-link a:visited{color:var(--color-weight-700)}.main-nav .nav-group .nav-link:hover{color:var(--color-left-nav-text-hover);border-right-color:var(--color-weight-300)}.main-nav .nav-group .nav-link.active,.main-nav .nav-group .nav-link.active a:link,.main-nav .nav-group .nav-link.active a:visited{color:var(--color-text-active);border-right-color:var(--color-primary-500)}.main-nav .nav-group .nav-link.active clr-icon,.main-nav .nav-group .nav-link.active a:link clr-icon,.main-nav .nav-group .nav-link.active a:visited clr-icon{color:var(--color-primary-500)}.nav-list clr-icon{flex-shrink:0;margin-inline-end:var(--space-unit)}.nav-group{-webkit-hyphens:auto;hyphens:auto}.nav-group,.nav-link{position:relative}.nav-group vdr-status-badge{left:27px;top:6px}.nav-group .section-header vdr-status-badge{left:20px}\n"] }]
        }], propDecorators: { displayMode: [{
                type: Input
            }], itemClick: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi1uYXYuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb3JlL3NyYy9jb21wb25lbnRzL21haW4tbmF2L21haW4tbmF2LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29yZS9zcmMvY29tcG9uZW50cy9tYWluLW5hdi9tYWluLW5hdi5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQVUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRS9FLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVyQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQzs7Ozs7Ozs7QUFPbEUsTUFBTSxPQUFPLGdCQUFpQixTQUFRLGdCQUFnQjtJQUx0RDs7UUFPYyxjQUFTLEdBQUcsSUFBSSxZQUFZLEVBQWUsQ0FBQztRQUV0RCxxQkFBZ0IsR0FBYSxFQUFFLENBQUM7S0E0Q25DO0lBMUNZLFFBQVE7UUFDYixLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7UUFFakIsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsV0FBVyxDQUFDLElBQUksQ0FDMUQsR0FBRyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQ1gsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUNoQixJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxLQUFLLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FDekUsQ0FDSixDQUNKLENBQUM7SUFDTixDQUFDO0lBRUQsWUFBWSxDQUFDLE9BQXVCO1FBQ2hDLElBQUksSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLEVBQUU7WUFDNUMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEtBQUssT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQ2pGO2FBQU07WUFDSCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsQ0FBQztTQUMxQztJQUNMLENBQUM7SUFFRCxXQUFXLENBQUMsT0FBdUIsRUFBRSxRQUFpQjtRQUNsRCxJQUFJLFFBQVEsRUFBRTtZQUNWLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQzFDO2FBQU07WUFDSCxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsS0FBSyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUM7U0FDakY7SUFDTCxDQUFDO0lBRUQsa0JBQWtCLENBQUMsT0FBdUI7UUFDdEMsSUFBSSxPQUFPLENBQUMsV0FBVyxFQUFFO1lBQ3JCLElBQUksSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLEVBQUU7Z0JBQzVDLE9BQU8sRUFBRSxTQUFTLEVBQUUsR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsQ0FBQzthQUM3RjtpQkFBTTtnQkFDSCxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsQ0FBQzthQUNqRTtTQUNKO0lBQ0wsQ0FBQztJQUVELFdBQVcsQ0FBQyxJQUFpQixFQUFFLEtBQWlCO1FBQzVDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN0QixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM5QixDQUFDOzhHQS9DUSxnQkFBZ0I7a0dBQWhCLGdCQUFnQix3SkNYN0IsdTNIQXdFQTs7MkZEN0RhLGdCQUFnQjtrQkFMNUIsU0FBUzsrQkFDSSxjQUFjOzhCQUtmLFdBQVc7c0JBQW5CLEtBQUs7Z0JBQ0ksU0FBUztzQkFBbEIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcbmltcG9ydCB7IE5hdk1lbnVJdGVtLCBOYXZNZW51U2VjdGlvbiB9IGZyb20gJy4uLy4uL3Byb3ZpZGVycy9uYXYtYnVpbGRlci9uYXYtYnVpbGRlci10eXBlcyc7XHJcbmltcG9ydCB7IEJhc2VOYXZDb21wb25lbnQgfSBmcm9tICcuLi9iYXNlLW5hdi9iYXNlLW5hdi5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ3Zkci1tYWluLW5hdicsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy4vbWFpbi1uYXYuY29tcG9uZW50Lmh0bWwnLFxyXG4gICAgc3R5bGVVcmxzOiBbJy4vbWFpbi1uYXYuY29tcG9uZW50LnNjc3MnXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIE1haW5OYXZDb21wb25lbnQgZXh0ZW5kcyBCYXNlTmF2Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICAgIEBJbnB1dCgpIGRpc3BsYXlNb2RlOiBzdHJpbmcgfCB1bmRlZmluZWQ7XHJcbiAgICBAT3V0cHV0KCkgaXRlbUNsaWNrID0gbmV3IEV2ZW50RW1pdHRlcjxOYXZNZW51SXRlbT4oKTtcclxuICAgIG1haW5NZW51Q29uZmlnJDogT2JzZXJ2YWJsZTxOYXZNZW51U2VjdGlvbltdPjtcclxuICAgIGV4cGFuZGVkU2VjdGlvbnM6IHN0cmluZ1tdID0gW107XHJcblxyXG4gICAgb3ZlcnJpZGUgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIubmdPbkluaXQoKTtcclxuXHJcbiAgICAgICAgdGhpcy5tYWluTWVudUNvbmZpZyQgPSB0aGlzLm5hdkJ1aWxkZXJTZXJ2aWNlLm1lbnVDb25maWckLnBpcGUoXHJcbiAgICAgICAgICAgIG1hcChzZWN0aW9ucyA9PlxyXG4gICAgICAgICAgICAgICAgc2VjdGlvbnMuZmlsdGVyKHMgPT5cclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmRpc3BsYXlNb2RlID8gcy5kaXNwbGF5TW9kZSA9PT0gdGhpcy5kaXNwbGF5TW9kZSA6ICFzLmRpc3BsYXlNb2RlLFxyXG4gICAgICAgICAgICAgICAgKSxcclxuICAgICAgICAgICAgKSxcclxuICAgICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIHRvZ2dsZUV4cGFuZChzZWN0aW9uOiBOYXZNZW51U2VjdGlvbikge1xyXG4gICAgICAgIGlmICh0aGlzLmV4cGFuZGVkU2VjdGlvbnMuaW5jbHVkZXMoc2VjdGlvbi5pZCkpIHtcclxuICAgICAgICAgICAgdGhpcy5leHBhbmRlZFNlY3Rpb25zID0gdGhpcy5leHBhbmRlZFNlY3Rpb25zLmZpbHRlcihpZCA9PiBpZCAhPT0gc2VjdGlvbi5pZCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5leHBhbmRlZFNlY3Rpb25zLnB1c2goc2VjdGlvbi5pZCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHNldEV4cGFuZGVkKHNlY3Rpb246IE5hdk1lbnVTZWN0aW9uLCBleHBhbmRlZDogYm9vbGVhbikge1xyXG4gICAgICAgIGlmIChleHBhbmRlZCkge1xyXG4gICAgICAgICAgICB0aGlzLmV4cGFuZGVkU2VjdGlvbnMucHVzaChzZWN0aW9uLmlkKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLmV4cGFuZGVkU2VjdGlvbnMgPSB0aGlzLmV4cGFuZGVkU2VjdGlvbnMuZmlsdGVyKGlkID0+IGlkICE9PSBzZWN0aW9uLmlkKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0U3R5bGVGb3JTZWN0aW9uKHNlY3Rpb246IE5hdk1lbnVTZWN0aW9uKSB7XHJcbiAgICAgICAgaWYgKHNlY3Rpb24uY29sbGFwc2libGUpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuZXhwYW5kZWRTZWN0aW9ucy5pbmNsdWRlcyhzZWN0aW9uLmlkKSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgbWF4SGVpZ2h0OiBgJHtzZWN0aW9uLml0ZW1zLmxlbmd0aCAqIDMzfXB4YCwgb3BhY2l0eTogMSwgdmlzaWJpbGl0eTogJ3Zpc2libGUnIH07XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4geyBtYXhIZWlnaHQ6ICcwcHgnLCBvcGFjaXR5OiAwLCB2aXNpYmlsaXR5OiAnaGlkZGVuJyB9O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uSXRlbUNsaWNrKGl0ZW06IE5hdk1lbnVJdGVtLCBldmVudDogTW91c2VFdmVudCkge1xyXG4gICAgICAgIGl0ZW0ub25DbGljaz8uKGV2ZW50KTtcclxuICAgICAgICB0aGlzLml0ZW1DbGljay5lbWl0KGl0ZW0pO1xyXG4gICAgfVxyXG59XHJcbiIsIjxuYXYgY2xhc3M9XCJtYWluLW5hdlwiPlxyXG4gICAgPHNlY3Rpb24gY2xhc3M9XCJcIj5cclxuICAgICAgICA8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBzZWN0aW9uIG9mIG1haW5NZW51Q29uZmlnJCB8IGFzeW5jXCI+XHJcbiAgICAgICAgICAgIDxzZWN0aW9uXHJcbiAgICAgICAgICAgICAgICBjbGFzcz1cIm5hdi1ncm91cFwiXHJcbiAgICAgICAgICAgICAgICBbYXR0ci5kYXRhLXNlY3Rpb24taWRdPVwic2VjdGlvbi5pZFwiXHJcbiAgICAgICAgICAgICAgICBbY2xhc3MuY29sbGFwc2libGVdPVwic2VjdGlvbi5jb2xsYXBzaWJsZVwiXHJcbiAgICAgICAgICAgICAgICBbY2xhc3MuY29sbGFwc2VkXT1cInNlY3Rpb24uY29sbGFwc2libGUgJiYgIWV4cGFuZGVkU2VjdGlvbnMuaW5jbHVkZXMoc2VjdGlvbi5pZClcIlxyXG4gICAgICAgICAgICAgICAgcm91dGVyTGlua0FjdGl2ZT1cImFjdGl2ZVwiXHJcbiAgICAgICAgICAgICAgICAoaXNBY3RpdmVDaGFuZ2UpPVwic2V0RXhwYW5kZWQoc2VjdGlvbiwgJGV2ZW50KVwiXHJcbiAgICAgICAgICAgICAgICAqbmdJZj1cInNob3VsZERpc3BsYXlMaW5rKHNlY3Rpb24pXCJcclxuICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgPHZkci11aS1leHRlbnNpb24tcG9pbnRcclxuICAgICAgICAgICAgICAgICAgICBbbG9jYXRpb25JZF09XCJzZWN0aW9uLmlkXCJcclxuICAgICAgICAgICAgICAgICAgICBhcGk9XCJuYXZNZW51XCJcclxuICAgICAgICAgICAgICAgICAgICBbdG9wUHhdPVwiMFwiXHJcbiAgICAgICAgICAgICAgICAgICAgW2xlZnRQeF09XCI4XCJcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5PVwiYmxvY2tcIlxyXG4gICAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzZWN0aW9uLWhlYWRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8bmctY29udGFpbmVyXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAqbmdJZj1cIm5hdkJ1aWxkZXJTZXJ2aWNlLnNlY3Rpb25CYWRnZXNbc2VjdGlvbi5pZF0gfCBhc3luYyBhcyBzZWN0aW9uQmFkZ2VcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dmRyLXN0YXR1cy1iYWRnZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICpuZ0lmPVwic2VjdGlvbkJhZGdlICE9PSAnbm9uZSdcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFt0eXBlXT1cInNlY3Rpb25CYWRnZVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+PC92ZHItc3RhdHVzLWJhZGdlPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L25nLWNvbnRhaW5lcj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibmF2LWdyb3VwLWhlYWRlciBteC00XCIgW2Zvcl09XCJzZWN0aW9uLmlkXCI+e3tcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlY3Rpb24ubGFiZWwgfCB0cmFuc2xhdGVcclxuICAgICAgICAgICAgICAgICAgICAgICAgfX08L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uICpuZ0lmPVwic2VjdGlvbi5jb2xsYXBzaWJsZVwiIGNsYXNzPVwiYnV0dG9uLXNtYWxsIGJnLXdlaWdodC0xNTBcIiAoY2xpY2spPVwidG9nZ2xlRXhwYW5kKHNlY3Rpb24pXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y2xyLWljb25cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbYXR0ci5zaGFwZV09XCJleHBhbmRlZFNlY3Rpb25zLmluY2x1ZGVzKHNlY3Rpb24uaWQpID8gJ2NhcmV0IHVwJyA6ICdjYXJldCBkb3duJ1wiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZT1cIjEyXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbdGl0bGVdPVwiJ2NvbW1vbi5leHBhbmQtZW50cmllcycgfCB0cmFuc2xhdGVcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvY2xyLWljb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJuYXYtbGlzdFwiIFtuZ1N0eWxlXT1cImdldFN0eWxlRm9yU2VjdGlvbihzZWN0aW9uKVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBpdGVtIG9mIHNlY3Rpb24uaXRlbXNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqbmdJZj1cInNob3VsZERpc3BsYXlMaW5rKGl0ZW0pXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cIm5hdi1saW5rIHB4LTRcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdXRlckxpbmtBY3RpdmU9XCJhY3RpdmVcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFthdHRyLmRhdGEtaXRlbS1pZF09XCJzZWN0aW9uLmlkXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW3JvdXRlckxpbmtdPVwiZ2V0Um91dGVyTGluayhpdGVtKVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChjbGljayk9XCJvbkl0ZW1DbGljayhpdGVtLCAkZXZlbnQpXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJpdGVtLnN0YXR1c0JhZGdlIHwgYXN5bmMgYXMgaXRlbUJhZGdlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dmRyLXN0YXR1cy1iYWRnZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICpuZ0lmPVwiaXRlbUJhZGdlLnR5cGUgIT09ICdub25lJ1wiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW3R5cGVdPVwiaXRlbUJhZGdlLnR5cGVcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvdmRyLXN0YXR1cy1iYWRnZT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9uZy1jb250YWluZXI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjbHItaWNvblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW2F0dHIuc2hhcGVdPVwiaXRlbS5pY29uIHx8ICdibG9jaydcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZT1cIjE2XCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFt0aXRsZV09XCJpdGVtLmxhYmVsIHwgdHJhbnNsYXRlXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvY2xyLWljb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiXCI+e3sgaXRlbS5sYWJlbCB8IHRyYW5zbGF0ZSB9fTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9uZy1jb250YWluZXI+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L3Zkci11aS1leHRlbnNpb24tcG9pbnQ+XHJcbiAgICAgICAgICAgIDwvc2VjdGlvbj5cclxuICAgICAgICA8L25nLWNvbnRhaW5lcj5cclxuICAgIDwvc2VjdGlvbj5cclxuPC9uYXY+XHJcbiJdfQ==