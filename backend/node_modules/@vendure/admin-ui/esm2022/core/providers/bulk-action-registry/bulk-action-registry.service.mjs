import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class BulkActionRegistryService {
    constructor() {
        this.locationBulActionMap = new Map();
    }
    registerBulkAction(bulkAction) {
        if (!this.locationBulActionMap.has(bulkAction.location)) {
            this.locationBulActionMap.set(bulkAction.location, new Set([bulkAction]));
        }
        else {
            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
            this.locationBulActionMap.get(bulkAction.location).add(bulkAction);
        }
    }
    getBulkActionsForLocation(id) {
        return [...(this.locationBulActionMap.get(id)?.values() ?? [])];
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: BulkActionRegistryService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: BulkActionRegistryService, providedIn: 'root' }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: BulkActionRegistryService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1hY3Rpb24tcmVnaXN0cnkuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29yZS9zcmMvcHJvdmlkZXJzL2J1bGstYWN0aW9uLXJlZ2lzdHJ5L2J1bGstYWN0aW9uLXJlZ2lzdHJ5LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFPM0MsTUFBTSxPQUFPLHlCQUF5QjtJQUh0QztRQUlZLHlCQUFvQixHQUFHLElBQUksR0FBRyxFQUF5QyxDQUFDO0tBY25GO0lBWkcsa0JBQWtCLENBQUMsVUFBc0I7UUFDckMsSUFBSSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxFQUFFO1lBQ3JELElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxJQUFJLEdBQUcsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUM3RTthQUFNO1lBQ0gsb0VBQW9FO1lBQ3BFLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBRSxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQztTQUN2RTtJQUNMLENBQUM7SUFFRCx5QkFBeUIsQ0FBQyxFQUF3QjtRQUM5QyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNwRSxDQUFDOzhHQWRRLHlCQUF5QjtrSEFBekIseUJBQXlCLGNBRnRCLE1BQU07OzJGQUVULHlCQUF5QjtrQkFIckMsVUFBVTttQkFBQztvQkFDUixVQUFVLEVBQUUsTUFBTTtpQkFDckIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5pbXBvcnQgeyBCdWxrQWN0aW9uLCBCdWxrQWN0aW9uTG9jYXRpb25JZCB9IGZyb20gJy4vYnVsay1hY3Rpb24tdHlwZXMnO1xyXG5cclxuQEluamVjdGFibGUoe1xyXG4gICAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQnVsa0FjdGlvblJlZ2lzdHJ5U2VydmljZSB7XHJcbiAgICBwcml2YXRlIGxvY2F0aW9uQnVsQWN0aW9uTWFwID0gbmV3IE1hcDxCdWxrQWN0aW9uTG9jYXRpb25JZCwgU2V0PEJ1bGtBY3Rpb24+PigpO1xyXG5cclxuICAgIHJlZ2lzdGVyQnVsa0FjdGlvbihidWxrQWN0aW9uOiBCdWxrQWN0aW9uKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmxvY2F0aW9uQnVsQWN0aW9uTWFwLmhhcyhidWxrQWN0aW9uLmxvY2F0aW9uKSkge1xyXG4gICAgICAgICAgICB0aGlzLmxvY2F0aW9uQnVsQWN0aW9uTWFwLnNldChidWxrQWN0aW9uLmxvY2F0aW9uLCBuZXcgU2V0KFtidWxrQWN0aW9uXSkpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uXHJcbiAgICAgICAgICAgIHRoaXMubG9jYXRpb25CdWxBY3Rpb25NYXAuZ2V0KGJ1bGtBY3Rpb24ubG9jYXRpb24pIS5hZGQoYnVsa0FjdGlvbik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGdldEJ1bGtBY3Rpb25zRm9yTG9jYXRpb24oaWQ6IEJ1bGtBY3Rpb25Mb2NhdGlvbklkKTogQnVsa0FjdGlvbltdIHtcclxuICAgICAgICByZXR1cm4gWy4uLih0aGlzLmxvY2F0aW9uQnVsQWN0aW9uTWFwLmdldChpZCk/LnZhbHVlcygpID8/IFtdKV07XHJcbiAgICB9XHJcbn1cclxuIl19