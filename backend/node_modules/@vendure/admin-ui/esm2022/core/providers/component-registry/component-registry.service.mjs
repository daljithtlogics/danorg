import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class ComponentRegistryService {
    constructor() {
        this.inputComponentMap = new Map();
    }
    registerInputComponent(id, component, providers) {
        if (this.inputComponentMap.has(id)) {
            throw new Error(`Cannot register an InputComponent with the id "${id}", as one with that id already exists`);
        }
        this.inputComponentMap.set(id, { type: component, providers: providers || [] });
    }
    getInputComponent(id) {
        return this.inputComponentMap.get(id);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: ComponentRegistryService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: ComponentRegistryService, providedIn: 'root' }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: ComponentRegistryService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LXJlZ2lzdHJ5LnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvcmUvc3JjL3Byb3ZpZGVycy9jb21wb25lbnQtcmVnaXN0cnkvY29tcG9uZW50LXJlZ2lzdHJ5LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBa0IsTUFBTSxlQUFlLENBQUM7O0FBTzNELE1BQU0sT0FBTyx3QkFBd0I7SUFIckM7UUFJWSxzQkFBaUIsR0FBRyxJQUFJLEdBQUcsRUFHaEMsQ0FBQztLQWdCUDtJQWRHLHNCQUFzQixDQUFDLEVBQVUsRUFBRSxTQUF3QyxFQUFFLFNBQXNCO1FBQy9GLElBQUksSUFBSSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRTtZQUNoQyxNQUFNLElBQUksS0FBSyxDQUNYLGtEQUFrRCxFQUFFLHVDQUF1QyxDQUM5RixDQUFDO1NBQ0w7UUFDRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLFNBQVMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3BGLENBQUM7SUFFRCxpQkFBaUIsQ0FDYixFQUFVO1FBRVYsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzFDLENBQUM7OEdBbkJRLHdCQUF3QjtrSEFBeEIsd0JBQXdCLGNBRnJCLE1BQU07OzJGQUVULHdCQUF3QjtrQkFIcEMsVUFBVTttQkFBQztvQkFDUixVQUFVLEVBQUUsTUFBTTtpQkFDckIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBQcm92aWRlciwgVHlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgRm9ybUlucHV0Q29tcG9uZW50IH0gZnJvbSAnLi4vLi4vY29tbW9uL2NvbXBvbmVudC1yZWdpc3RyeS10eXBlcyc7XHJcblxyXG5ASW5qZWN0YWJsZSh7XHJcbiAgICBwcm92aWRlZEluOiAncm9vdCcsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDb21wb25lbnRSZWdpc3RyeVNlcnZpY2Uge1xyXG4gICAgcHJpdmF0ZSBpbnB1dENvbXBvbmVudE1hcCA9IG5ldyBNYXA8XHJcbiAgICAgICAgc3RyaW5nLFxyXG4gICAgICAgIHsgdHlwZTogVHlwZTxGb3JtSW5wdXRDb21wb25lbnQ8YW55Pj47IHByb3ZpZGVyczogUHJvdmlkZXJbXSB9XHJcbiAgICA+KCk7XHJcblxyXG4gICAgcmVnaXN0ZXJJbnB1dENvbXBvbmVudChpZDogc3RyaW5nLCBjb21wb25lbnQ6IFR5cGU8Rm9ybUlucHV0Q29tcG9uZW50PGFueT4+LCBwcm92aWRlcnM/OiBQcm92aWRlcltdKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuaW5wdXRDb21wb25lbnRNYXAuaGFzKGlkKSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXHJcbiAgICAgICAgICAgICAgICBgQ2Fubm90IHJlZ2lzdGVyIGFuIElucHV0Q29tcG9uZW50IHdpdGggdGhlIGlkIFwiJHtpZH1cIiwgYXMgb25lIHdpdGggdGhhdCBpZCBhbHJlYWR5IGV4aXN0c2AsXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuaW5wdXRDb21wb25lbnRNYXAuc2V0KGlkLCB7IHR5cGU6IGNvbXBvbmVudCwgcHJvdmlkZXJzOiBwcm92aWRlcnMgfHwgW10gfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0SW5wdXRDb21wb25lbnQoXHJcbiAgICAgICAgaWQ6IHN0cmluZyxcclxuICAgICk6IHsgdHlwZTogVHlwZTxGb3JtSW5wdXRDb21wb25lbnQ8YW55Pj47IHByb3ZpZGVyczogUHJvdmlkZXJbXSB9IHwgdW5kZWZpbmVkIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5pbnB1dENvbXBvbmVudE1hcC5nZXQoaWQpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==