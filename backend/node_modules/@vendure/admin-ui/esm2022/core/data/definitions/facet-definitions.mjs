import { gql } from 'apollo-angular';
export const FACET_VALUE_FRAGMENT = gql `
    fragment FacetValue on FacetValue {
        id
        createdAt
        updatedAt
        languageCode
        code
        name
        translations {
            id
            languageCode
            name
        }
        facet {
            id
            createdAt
            updatedAt
            name
        }
    }
`;
export const FACET_WITH_VALUES_FRAGMENT = gql `
    fragment FacetWithValues on Facet {
        id
        createdAt
        updatedAt
        languageCode
        isPrivate
        code
        name
        translations {
            id
            languageCode
            name
        }
        values {
            ...FacetValue
        }
    }
    ${FACET_VALUE_FRAGMENT}
`;
export const FACET_WITH_VALUE_LIST_FRAGMENT = gql `
    fragment FacetWithValueList on Facet {
        id
        createdAt
        updatedAt
        languageCode
        isPrivate
        code
        name
        translations {
            id
            languageCode
            name
        }
        valueList(options: { take: 100 }) {
            totalItems
            items {
                ...FacetValue
            }
        }
    }
    ${FACET_VALUE_FRAGMENT}
`;
export const CREATE_FACET = gql `
    mutation CreateFacet($input: CreateFacetInput!) {
        createFacet(input: $input) {
            ...FacetWithValues
        }
    }
    ${FACET_WITH_VALUES_FRAGMENT}
`;
export const UPDATE_FACET = gql `
    mutation UpdateFacet($input: UpdateFacetInput!) {
        updateFacet(input: $input) {
            ...FacetWithValues
        }
    }
    ${FACET_WITH_VALUES_FRAGMENT}
`;
export const DELETE_FACET = gql `
    mutation DeleteFacet($id: ID!, $force: Boolean) {
        deleteFacet(id: $id, force: $force) {
            result
            message
        }
    }
`;
export const DELETE_FACETS = gql `
    mutation DeleteFacets($ids: [ID!]!, $force: Boolean) {
        deleteFacets(ids: $ids, force: $force) {
            result
            message
        }
    }
`;
export const CREATE_FACET_VALUES = gql `
    mutation CreateFacetValues($input: [CreateFacetValueInput!]!) {
        createFacetValues(input: $input) {
            ...FacetValue
        }
    }
    ${FACET_VALUE_FRAGMENT}
`;
export const UPDATE_FACET_VALUES = gql `
    mutation UpdateFacetValues($input: [UpdateFacetValueInput!]!) {
        updateFacetValues(input: $input) {
            ...FacetValue
        }
    }
    ${FACET_VALUE_FRAGMENT}
`;
export const DELETE_FACET_VALUES = gql `
    mutation DeleteFacetValues($ids: [ID!]!, $force: Boolean) {
        deleteFacetValues(ids: $ids, force: $force) {
            result
            message
        }
    }
`;
export const GET_FACET_VALUE_LIST = gql `
    query GetFacetValueList($options: FacetValueListOptions) {
        facetValues(options: $options) {
            items {
                ...FacetValue
            }
            totalItems
        }
    }
    ${FACET_VALUE_FRAGMENT}
`;
export const ASSIGN_FACETS_TO_CHANNEL = gql `
    mutation AssignFacetsToChannel($input: AssignFacetsToChannelInput!) {
        assignFacetsToChannel(input: $input) {
            id
        }
    }
`;
export const REMOVE_FACETS_FROM_CHANNEL = gql `
    mutation RemoveFacetsFromChannel($input: RemoveFacetsFromChannelInput!) {
        removeFacetsFromChannel(input: $input) {
            ... on Facet {
                id
            }
            ... on FacetInUseError {
                errorCode
                message
                variantCount
                productCount
            }
        }
    }
`;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFjZXQtZGVmaW5pdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvcmUvc3JjL2RhdGEvZGVmaW5pdGlvbnMvZmFjZXQtZGVmaW5pdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXJDLE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLEdBQUcsQ0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FvQnRDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FBRyxHQUFHLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7OztNQWtCdkMsb0JBQW9CO0NBQ3pCLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSw4QkFBOEIsR0FBRyxHQUFHLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztNQXFCM0Msb0JBQW9CO0NBQ3pCLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsR0FBRyxDQUFBOzs7Ozs7TUFNekIsMEJBQTBCO0NBQy9CLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsR0FBRyxDQUFBOzs7Ozs7TUFNekIsMEJBQTBCO0NBQy9CLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsR0FBRyxDQUFBOzs7Ozs7O0NBTzlCLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcsR0FBRyxDQUFBOzs7Ozs7O0NBTy9CLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxHQUFHLENBQUE7Ozs7OztNQU1oQyxvQkFBb0I7Q0FDekIsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLEdBQUcsQ0FBQTs7Ozs7O01BTWhDLG9CQUFvQjtDQUN6QixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsR0FBRyxDQUFBOzs7Ozs7O0NBT3JDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxHQUFHLENBQUE7Ozs7Ozs7OztNQVNqQyxvQkFBb0I7Q0FDekIsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUFHLEdBQUcsQ0FBQTs7Ozs7O0NBTTFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FBRyxHQUFHLENBQUE7Ozs7Ozs7Ozs7Ozs7O0NBYzVDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBncWwgfSBmcm9tICdhcG9sbG8tYW5ndWxhcic7XHJcblxyXG5leHBvcnQgY29uc3QgRkFDRVRfVkFMVUVfRlJBR01FTlQgPSBncWxgXHJcbiAgICBmcmFnbWVudCBGYWNldFZhbHVlIG9uIEZhY2V0VmFsdWUge1xyXG4gICAgICAgIGlkXHJcbiAgICAgICAgY3JlYXRlZEF0XHJcbiAgICAgICAgdXBkYXRlZEF0XHJcbiAgICAgICAgbGFuZ3VhZ2VDb2RlXHJcbiAgICAgICAgY29kZVxyXG4gICAgICAgIG5hbWVcclxuICAgICAgICB0cmFuc2xhdGlvbnMge1xyXG4gICAgICAgICAgICBpZFxyXG4gICAgICAgICAgICBsYW5ndWFnZUNvZGVcclxuICAgICAgICAgICAgbmFtZVxyXG4gICAgICAgIH1cclxuICAgICAgICBmYWNldCB7XHJcbiAgICAgICAgICAgIGlkXHJcbiAgICAgICAgICAgIGNyZWF0ZWRBdFxyXG4gICAgICAgICAgICB1cGRhdGVkQXRcclxuICAgICAgICAgICAgbmFtZVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBGQUNFVF9XSVRIX1ZBTFVFU19GUkFHTUVOVCA9IGdxbGBcclxuICAgIGZyYWdtZW50IEZhY2V0V2l0aFZhbHVlcyBvbiBGYWNldCB7XHJcbiAgICAgICAgaWRcclxuICAgICAgICBjcmVhdGVkQXRcclxuICAgICAgICB1cGRhdGVkQXRcclxuICAgICAgICBsYW5ndWFnZUNvZGVcclxuICAgICAgICBpc1ByaXZhdGVcclxuICAgICAgICBjb2RlXHJcbiAgICAgICAgbmFtZVxyXG4gICAgICAgIHRyYW5zbGF0aW9ucyB7XHJcbiAgICAgICAgICAgIGlkXHJcbiAgICAgICAgICAgIGxhbmd1YWdlQ29kZVxyXG4gICAgICAgICAgICBuYW1lXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhbHVlcyB7XHJcbiAgICAgICAgICAgIC4uLkZhY2V0VmFsdWVcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAke0ZBQ0VUX1ZBTFVFX0ZSQUdNRU5UfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZBQ0VUX1dJVEhfVkFMVUVfTElTVF9GUkFHTUVOVCA9IGdxbGBcclxuICAgIGZyYWdtZW50IEZhY2V0V2l0aFZhbHVlTGlzdCBvbiBGYWNldCB7XHJcbiAgICAgICAgaWRcclxuICAgICAgICBjcmVhdGVkQXRcclxuICAgICAgICB1cGRhdGVkQXRcclxuICAgICAgICBsYW5ndWFnZUNvZGVcclxuICAgICAgICBpc1ByaXZhdGVcclxuICAgICAgICBjb2RlXHJcbiAgICAgICAgbmFtZVxyXG4gICAgICAgIHRyYW5zbGF0aW9ucyB7XHJcbiAgICAgICAgICAgIGlkXHJcbiAgICAgICAgICAgIGxhbmd1YWdlQ29kZVxyXG4gICAgICAgICAgICBuYW1lXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhbHVlTGlzdChvcHRpb25zOiB7IHRha2U6IDEwMCB9KSB7XHJcbiAgICAgICAgICAgIHRvdGFsSXRlbXNcclxuICAgICAgICAgICAgaXRlbXMge1xyXG4gICAgICAgICAgICAgICAgLi4uRmFjZXRWYWx1ZVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJHtGQUNFVF9WQUxVRV9GUkFHTUVOVH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBDUkVBVEVfRkFDRVQgPSBncWxgXHJcbiAgICBtdXRhdGlvbiBDcmVhdGVGYWNldCgkaW5wdXQ6IENyZWF0ZUZhY2V0SW5wdXQhKSB7XHJcbiAgICAgICAgY3JlYXRlRmFjZXQoaW5wdXQ6ICRpbnB1dCkge1xyXG4gICAgICAgICAgICAuLi5GYWNldFdpdGhWYWx1ZXNcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAke0ZBQ0VUX1dJVEhfVkFMVUVTX0ZSQUdNRU5UfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IFVQREFURV9GQUNFVCA9IGdxbGBcclxuICAgIG11dGF0aW9uIFVwZGF0ZUZhY2V0KCRpbnB1dDogVXBkYXRlRmFjZXRJbnB1dCEpIHtcclxuICAgICAgICB1cGRhdGVGYWNldChpbnB1dDogJGlucHV0KSB7XHJcbiAgICAgICAgICAgIC4uLkZhY2V0V2l0aFZhbHVlc1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICR7RkFDRVRfV0lUSF9WQUxVRVNfRlJBR01FTlR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgREVMRVRFX0ZBQ0VUID0gZ3FsYFxyXG4gICAgbXV0YXRpb24gRGVsZXRlRmFjZXQoJGlkOiBJRCEsICRmb3JjZTogQm9vbGVhbikge1xyXG4gICAgICAgIGRlbGV0ZUZhY2V0KGlkOiAkaWQsIGZvcmNlOiAkZm9yY2UpIHtcclxuICAgICAgICAgICAgcmVzdWx0XHJcbiAgICAgICAgICAgIG1lc3NhZ2VcclxuICAgICAgICB9XHJcbiAgICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgREVMRVRFX0ZBQ0VUUyA9IGdxbGBcclxuICAgIG11dGF0aW9uIERlbGV0ZUZhY2V0cygkaWRzOiBbSUQhXSEsICRmb3JjZTogQm9vbGVhbikge1xyXG4gICAgICAgIGRlbGV0ZUZhY2V0cyhpZHM6ICRpZHMsIGZvcmNlOiAkZm9yY2UpIHtcclxuICAgICAgICAgICAgcmVzdWx0XHJcbiAgICAgICAgICAgIG1lc3NhZ2VcclxuICAgICAgICB9XHJcbiAgICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgQ1JFQVRFX0ZBQ0VUX1ZBTFVFUyA9IGdxbGBcclxuICAgIG11dGF0aW9uIENyZWF0ZUZhY2V0VmFsdWVzKCRpbnB1dDogW0NyZWF0ZUZhY2V0VmFsdWVJbnB1dCFdISkge1xyXG4gICAgICAgIGNyZWF0ZUZhY2V0VmFsdWVzKGlucHV0OiAkaW5wdXQpIHtcclxuICAgICAgICAgICAgLi4uRmFjZXRWYWx1ZVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICR7RkFDRVRfVkFMVUVfRlJBR01FTlR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgVVBEQVRFX0ZBQ0VUX1ZBTFVFUyA9IGdxbGBcclxuICAgIG11dGF0aW9uIFVwZGF0ZUZhY2V0VmFsdWVzKCRpbnB1dDogW1VwZGF0ZUZhY2V0VmFsdWVJbnB1dCFdISkge1xyXG4gICAgICAgIHVwZGF0ZUZhY2V0VmFsdWVzKGlucHV0OiAkaW5wdXQpIHtcclxuICAgICAgICAgICAgLi4uRmFjZXRWYWx1ZVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICR7RkFDRVRfVkFMVUVfRlJBR01FTlR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgREVMRVRFX0ZBQ0VUX1ZBTFVFUyA9IGdxbGBcclxuICAgIG11dGF0aW9uIERlbGV0ZUZhY2V0VmFsdWVzKCRpZHM6IFtJRCFdISwgJGZvcmNlOiBCb29sZWFuKSB7XHJcbiAgICAgICAgZGVsZXRlRmFjZXRWYWx1ZXMoaWRzOiAkaWRzLCBmb3JjZTogJGZvcmNlKSB7XHJcbiAgICAgICAgICAgIHJlc3VsdFxyXG4gICAgICAgICAgICBtZXNzYWdlXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IEdFVF9GQUNFVF9WQUxVRV9MSVNUID0gZ3FsYFxyXG4gICAgcXVlcnkgR2V0RmFjZXRWYWx1ZUxpc3QoJG9wdGlvbnM6IEZhY2V0VmFsdWVMaXN0T3B0aW9ucykge1xyXG4gICAgICAgIGZhY2V0VmFsdWVzKG9wdGlvbnM6ICRvcHRpb25zKSB7XHJcbiAgICAgICAgICAgIGl0ZW1zIHtcclxuICAgICAgICAgICAgICAgIC4uLkZhY2V0VmFsdWVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0b3RhbEl0ZW1zXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJHtGQUNFVF9WQUxVRV9GUkFHTUVOVH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBBU1NJR05fRkFDRVRTX1RPX0NIQU5ORUwgPSBncWxgXHJcbiAgICBtdXRhdGlvbiBBc3NpZ25GYWNldHNUb0NoYW5uZWwoJGlucHV0OiBBc3NpZ25GYWNldHNUb0NoYW5uZWxJbnB1dCEpIHtcclxuICAgICAgICBhc3NpZ25GYWNldHNUb0NoYW5uZWwoaW5wdXQ6ICRpbnB1dCkge1xyXG4gICAgICAgICAgICBpZFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBSRU1PVkVfRkFDRVRTX0ZST01fQ0hBTk5FTCA9IGdxbGBcclxuICAgIG11dGF0aW9uIFJlbW92ZUZhY2V0c0Zyb21DaGFubmVsKCRpbnB1dDogUmVtb3ZlRmFjZXRzRnJvbUNoYW5uZWxJbnB1dCEpIHtcclxuICAgICAgICByZW1vdmVGYWNldHNGcm9tQ2hhbm5lbChpbnB1dDogJGlucHV0KSB7XHJcbiAgICAgICAgICAgIC4uLiBvbiBGYWNldCB7XHJcbiAgICAgICAgICAgICAgICBpZFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC4uLiBvbiBGYWNldEluVXNlRXJyb3Ige1xyXG4gICAgICAgICAgICAgICAgZXJyb3JDb2RlXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlXHJcbiAgICAgICAgICAgICAgICB2YXJpYW50Q291bnRcclxuICAgICAgICAgICAgICAgIHByb2R1Y3RDb3VudFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5gO1xyXG4iXX0=