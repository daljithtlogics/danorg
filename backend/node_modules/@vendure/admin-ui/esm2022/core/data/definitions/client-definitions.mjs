import { gql } from 'apollo-angular';
export const REQUEST_STARTED = gql `
    mutation RequestStarted {
        requestStarted @client
    }
`;
export const REQUEST_COMPLETED = gql `
    mutation RequestCompleted {
        requestCompleted @client
    }
`;
export const USER_STATUS_FRAGMENT = gql `
    fragment UserStatus on UserStatus {
        administratorId
        username
        isLoggedIn
        loginTime
        activeChannelId
        permissions
        channels {
            id
            code
            token
            permissions
        }
    }
`;
export const SET_AS_LOGGED_IN = gql `
    mutation SetAsLoggedIn($input: UserStatusInput!) {
        setAsLoggedIn(input: $input) @client {
            ...UserStatus
        }
    }
    ${USER_STATUS_FRAGMENT}
`;
export const SET_AS_LOGGED_OUT = gql `
    mutation SetAsLoggedOut {
        setAsLoggedOut @client {
            ...UserStatus
        }
    }
    ${USER_STATUS_FRAGMENT}
`;
export const SET_UI_LANGUAGE_AND_LOCALE = gql `
    mutation SetUiLanguage($languageCode: LanguageCode!, $locale: String) {
        setUiLanguage(languageCode: $languageCode) @client
        setUiLocale(locale: $locale) @client
    }
`;
export const SET_UI_LOCALE = gql `
    mutation SetUiLocale($locale: String) {
        setUiLocale(locale: $locale) @client
    }
`;
export const SET_DISPLAY_UI_EXTENSION_POINTS = gql `
    mutation SetDisplayUiExtensionPoints($display: Boolean!) {
        setDisplayUiExtensionPoints(display: $display) @client
    }
`;
export const SET_MAIN_NAV_EXPANDED = gql `
    mutation SetMainNavExpanded($expanded: Boolean!) {
        setMainNavExpanded(expanded: $expanded) @client
    }
`;
export const SET_CONTENT_LANGUAGE = gql `
    mutation SetContentLanguage($languageCode: LanguageCode!) {
        setContentLanguage(languageCode: $languageCode) @client
    }
`;
export const SET_UI_THEME = gql `
    mutation SetUiTheme($theme: String!) {
        setUiTheme(theme: $theme) @client
    }
`;
export const GET_NEWTORK_STATUS = gql `
    query GetNetworkStatus {
        networkStatus @client {
            inFlightRequests
        }
    }
`;
export const GET_USER_STATUS = gql `
    query GetUserStatus {
        userStatus @client {
            ...UserStatus
        }
    }
    ${USER_STATUS_FRAGMENT}
`;
export const GET_UI_STATE = gql `
    query GetUiState {
        uiState @client {
            language
            locale
            contentLanguage
            theme
            displayUiExtensionPoints
            mainNavExpanded
        }
    }
`;
export const GET_CLIENT_STATE = gql `
    query GetClientState {
        networkStatus @client {
            inFlightRequests
        }
        userStatus @client {
            ...UserStatus
        }
        uiState @client {
            language
            locale
            contentLanguage
            theme
            displayUiExtensionPoints
            mainNavExpanded
        }
    }
    ${USER_STATUS_FRAGMENT}
`;
export const SET_ACTIVE_CHANNEL = gql `
    mutation SetActiveChannel($channelId: ID!) {
        setActiveChannel(channelId: $channelId) @client {
            ...UserStatus
        }
    }
    ${USER_STATUS_FRAGMENT}
`;
export const UPDATE_USER_CHANNELS = gql `
    mutation UpdateUserChannels($channels: [CurrentUserChannelInput!]!) {
        updateUserChannels(channels: $channels) @client {
            ...UserStatus
        }
    }
    ${USER_STATUS_FRAGMENT}
`;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpZW50LWRlZmluaXRpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb3JlL3NyYy9kYXRhL2RlZmluaXRpb25zL2NsaWVudC1kZWZpbml0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFckMsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHLEdBQUcsQ0FBQTs7OztDQUlqQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsR0FBRyxDQUFBOzs7O0NBSW5DLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxHQUFHLENBQUE7Ozs7Ozs7Ozs7Ozs7OztDQWV0QyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsR0FBRyxDQUFBOzs7Ozs7TUFNN0Isb0JBQW9CO0NBQ3pCLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxHQUFHLENBQUE7Ozs7OztNQU05QixvQkFBb0I7Q0FDekIsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLDBCQUEwQixHQUFHLEdBQUcsQ0FBQTs7Ozs7Q0FLNUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxHQUFHLENBQUE7Ozs7Q0FJL0IsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLCtCQUErQixHQUFHLEdBQUcsQ0FBQTs7OztDQUlqRCxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQUcsR0FBRyxDQUFBOzs7O0NBSXZDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxHQUFHLENBQUE7Ozs7Q0FJdEMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxHQUFHLENBQUE7Ozs7Q0FJOUIsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHLEdBQUcsQ0FBQTs7Ozs7O0NBTXBDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUcsR0FBRyxDQUFBOzs7Ozs7TUFNNUIsb0JBQW9CO0NBQ3pCLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsR0FBRyxDQUFBOzs7Ozs7Ozs7OztDQVc5QixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsR0FBRyxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7OztNQWlCN0Isb0JBQW9CO0NBQ3pCLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyxHQUFHLENBQUE7Ozs7OztNQU0vQixvQkFBb0I7Q0FDekIsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLEdBQUcsQ0FBQTs7Ozs7O01BTWpDLG9CQUFvQjtDQUN6QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ3FsIH0gZnJvbSAnYXBvbGxvLWFuZ3VsYXInO1xyXG5cclxuZXhwb3J0IGNvbnN0IFJFUVVFU1RfU1RBUlRFRCA9IGdxbGBcclxuICAgIG11dGF0aW9uIFJlcXVlc3RTdGFydGVkIHtcclxuICAgICAgICByZXF1ZXN0U3RhcnRlZCBAY2xpZW50XHJcbiAgICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgUkVRVUVTVF9DT01QTEVURUQgPSBncWxgXHJcbiAgICBtdXRhdGlvbiBSZXF1ZXN0Q29tcGxldGVkIHtcclxuICAgICAgICByZXF1ZXN0Q29tcGxldGVkIEBjbGllbnRcclxuICAgIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBVU0VSX1NUQVRVU19GUkFHTUVOVCA9IGdxbGBcclxuICAgIGZyYWdtZW50IFVzZXJTdGF0dXMgb24gVXNlclN0YXR1cyB7XHJcbiAgICAgICAgYWRtaW5pc3RyYXRvcklkXHJcbiAgICAgICAgdXNlcm5hbWVcclxuICAgICAgICBpc0xvZ2dlZEluXHJcbiAgICAgICAgbG9naW5UaW1lXHJcbiAgICAgICAgYWN0aXZlQ2hhbm5lbElkXHJcbiAgICAgICAgcGVybWlzc2lvbnNcclxuICAgICAgICBjaGFubmVscyB7XHJcbiAgICAgICAgICAgIGlkXHJcbiAgICAgICAgICAgIGNvZGVcclxuICAgICAgICAgICAgdG9rZW5cclxuICAgICAgICAgICAgcGVybWlzc2lvbnNcclxuICAgICAgICB9XHJcbiAgICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgU0VUX0FTX0xPR0dFRF9JTiA9IGdxbGBcclxuICAgIG11dGF0aW9uIFNldEFzTG9nZ2VkSW4oJGlucHV0OiBVc2VyU3RhdHVzSW5wdXQhKSB7XHJcbiAgICAgICAgc2V0QXNMb2dnZWRJbihpbnB1dDogJGlucHV0KSBAY2xpZW50IHtcclxuICAgICAgICAgICAgLi4uVXNlclN0YXR1c1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICR7VVNFUl9TVEFUVVNfRlJBR01FTlR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgU0VUX0FTX0xPR0dFRF9PVVQgPSBncWxgXHJcbiAgICBtdXRhdGlvbiBTZXRBc0xvZ2dlZE91dCB7XHJcbiAgICAgICAgc2V0QXNMb2dnZWRPdXQgQGNsaWVudCB7XHJcbiAgICAgICAgICAgIC4uLlVzZXJTdGF0dXNcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAke1VTRVJfU1RBVFVTX0ZSQUdNRU5UfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IFNFVF9VSV9MQU5HVUFHRV9BTkRfTE9DQUxFID0gZ3FsYFxyXG4gICAgbXV0YXRpb24gU2V0VWlMYW5ndWFnZSgkbGFuZ3VhZ2VDb2RlOiBMYW5ndWFnZUNvZGUhLCAkbG9jYWxlOiBTdHJpbmcpIHtcclxuICAgICAgICBzZXRVaUxhbmd1YWdlKGxhbmd1YWdlQ29kZTogJGxhbmd1YWdlQ29kZSkgQGNsaWVudFxyXG4gICAgICAgIHNldFVpTG9jYWxlKGxvY2FsZTogJGxvY2FsZSkgQGNsaWVudFxyXG4gICAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IFNFVF9VSV9MT0NBTEUgPSBncWxgXHJcbiAgICBtdXRhdGlvbiBTZXRVaUxvY2FsZSgkbG9jYWxlOiBTdHJpbmcpIHtcclxuICAgICAgICBzZXRVaUxvY2FsZShsb2NhbGU6ICRsb2NhbGUpIEBjbGllbnRcclxuICAgIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTRVRfRElTUExBWV9VSV9FWFRFTlNJT05fUE9JTlRTID0gZ3FsYFxyXG4gICAgbXV0YXRpb24gU2V0RGlzcGxheVVpRXh0ZW5zaW9uUG9pbnRzKCRkaXNwbGF5OiBCb29sZWFuISkge1xyXG4gICAgICAgIHNldERpc3BsYXlVaUV4dGVuc2lvblBvaW50cyhkaXNwbGF5OiAkZGlzcGxheSkgQGNsaWVudFxyXG4gICAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IFNFVF9NQUlOX05BVl9FWFBBTkRFRCA9IGdxbGBcclxuICAgIG11dGF0aW9uIFNldE1haW5OYXZFeHBhbmRlZCgkZXhwYW5kZWQ6IEJvb2xlYW4hKSB7XHJcbiAgICAgICAgc2V0TWFpbk5hdkV4cGFuZGVkKGV4cGFuZGVkOiAkZXhwYW5kZWQpIEBjbGllbnRcclxuICAgIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTRVRfQ09OVEVOVF9MQU5HVUFHRSA9IGdxbGBcclxuICAgIG11dGF0aW9uIFNldENvbnRlbnRMYW5ndWFnZSgkbGFuZ3VhZ2VDb2RlOiBMYW5ndWFnZUNvZGUhKSB7XHJcbiAgICAgICAgc2V0Q29udGVudExhbmd1YWdlKGxhbmd1YWdlQ29kZTogJGxhbmd1YWdlQ29kZSkgQGNsaWVudFxyXG4gICAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IFNFVF9VSV9USEVNRSA9IGdxbGBcclxuICAgIG11dGF0aW9uIFNldFVpVGhlbWUoJHRoZW1lOiBTdHJpbmchKSB7XHJcbiAgICAgICAgc2V0VWlUaGVtZSh0aGVtZTogJHRoZW1lKSBAY2xpZW50XHJcbiAgICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgR0VUX05FV1RPUktfU1RBVFVTID0gZ3FsYFxyXG4gICAgcXVlcnkgR2V0TmV0d29ya1N0YXR1cyB7XHJcbiAgICAgICAgbmV0d29ya1N0YXR1cyBAY2xpZW50IHtcclxuICAgICAgICAgICAgaW5GbGlnaHRSZXF1ZXN0c1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBHRVRfVVNFUl9TVEFUVVMgPSBncWxgXHJcbiAgICBxdWVyeSBHZXRVc2VyU3RhdHVzIHtcclxuICAgICAgICB1c2VyU3RhdHVzIEBjbGllbnQge1xyXG4gICAgICAgICAgICAuLi5Vc2VyU3RhdHVzXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJHtVU0VSX1NUQVRVU19GUkFHTUVOVH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBHRVRfVUlfU1RBVEUgPSBncWxgXHJcbiAgICBxdWVyeSBHZXRVaVN0YXRlIHtcclxuICAgICAgICB1aVN0YXRlIEBjbGllbnQge1xyXG4gICAgICAgICAgICBsYW5ndWFnZVxyXG4gICAgICAgICAgICBsb2NhbGVcclxuICAgICAgICAgICAgY29udGVudExhbmd1YWdlXHJcbiAgICAgICAgICAgIHRoZW1lXHJcbiAgICAgICAgICAgIGRpc3BsYXlVaUV4dGVuc2lvblBvaW50c1xyXG4gICAgICAgICAgICBtYWluTmF2RXhwYW5kZWRcclxuICAgICAgICB9XHJcbiAgICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgR0VUX0NMSUVOVF9TVEFURSA9IGdxbGBcclxuICAgIHF1ZXJ5IEdldENsaWVudFN0YXRlIHtcclxuICAgICAgICBuZXR3b3JrU3RhdHVzIEBjbGllbnQge1xyXG4gICAgICAgICAgICBpbkZsaWdodFJlcXVlc3RzXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHVzZXJTdGF0dXMgQGNsaWVudCB7XHJcbiAgICAgICAgICAgIC4uLlVzZXJTdGF0dXNcclxuICAgICAgICB9XHJcbiAgICAgICAgdWlTdGF0ZSBAY2xpZW50IHtcclxuICAgICAgICAgICAgbGFuZ3VhZ2VcclxuICAgICAgICAgICAgbG9jYWxlXHJcbiAgICAgICAgICAgIGNvbnRlbnRMYW5ndWFnZVxyXG4gICAgICAgICAgICB0aGVtZVxyXG4gICAgICAgICAgICBkaXNwbGF5VWlFeHRlbnNpb25Qb2ludHNcclxuICAgICAgICAgICAgbWFpbk5hdkV4cGFuZGVkXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJHtVU0VSX1NUQVRVU19GUkFHTUVOVH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBTRVRfQUNUSVZFX0NIQU5ORUwgPSBncWxgXHJcbiAgICBtdXRhdGlvbiBTZXRBY3RpdmVDaGFubmVsKCRjaGFubmVsSWQ6IElEISkge1xyXG4gICAgICAgIHNldEFjdGl2ZUNoYW5uZWwoY2hhbm5lbElkOiAkY2hhbm5lbElkKSBAY2xpZW50IHtcclxuICAgICAgICAgICAgLi4uVXNlclN0YXR1c1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICR7VVNFUl9TVEFUVVNfRlJBR01FTlR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgVVBEQVRFX1VTRVJfQ0hBTk5FTFMgPSBncWxgXHJcbiAgICBtdXRhdGlvbiBVcGRhdGVVc2VyQ2hhbm5lbHMoJGNoYW5uZWxzOiBbQ3VycmVudFVzZXJDaGFubmVsSW5wdXQhXSEpIHtcclxuICAgICAgICB1cGRhdGVVc2VyQ2hhbm5lbHMoY2hhbm5lbHM6ICRjaGFubmVscykgQGNsaWVudCB7XHJcbiAgICAgICAgICAgIC4uLlVzZXJTdGF0dXNcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAke1VTRVJfU1RBVFVTX0ZSQUdNRU5UfVxyXG5gO1xyXG4iXX0=