import { gql } from 'apollo-angular';
import { ERROR_RESULT_FRAGMENT } from './shared-definitions';
export const CURRENT_USER_FRAGMENT = gql `
    fragment CurrentUser on CurrentUser {
        id
        identifier
        channels {
            id
            code
            token
            permissions
        }
    }
`;
export const ATTEMPT_LOGIN = gql `
    mutation AttemptLogin($username: String!, $password: String!, $rememberMe: Boolean!) {
        login(username: $username, password: $password, rememberMe: $rememberMe) {
            ...CurrentUser
            ...ErrorResult
        }
    }
    ${CURRENT_USER_FRAGMENT}
    ${ERROR_RESULT_FRAGMENT}
`;
export const LOG_OUT = gql `
    mutation LogOut {
        logout {
            success
        }
    }
`;
export const GET_CURRENT_USER = gql `
    query GetCurrentUser {
        me {
            ...CurrentUser
        }
    }
    ${CURRENT_USER_FRAGMENT}
`;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC1kZWZpbml0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29yZS9zcmMvZGF0YS9kZWZpbml0aW9ucy9hdXRoLWRlZmluaXRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVyQyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUU3RCxNQUFNLENBQUMsTUFBTSxxQkFBcUIsR0FBRyxHQUFHLENBQUE7Ozs7Ozs7Ozs7O0NBV3ZDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcsR0FBRyxDQUFBOzs7Ozs7O01BTzFCLHFCQUFxQjtNQUNyQixxQkFBcUI7Q0FDMUIsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLE9BQU8sR0FBRyxHQUFHLENBQUE7Ozs7OztDQU16QixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsR0FBRyxDQUFBOzs7Ozs7TUFNN0IscUJBQXFCO0NBQzFCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBncWwgfSBmcm9tICdhcG9sbG8tYW5ndWxhcic7XHJcblxyXG5pbXBvcnQgeyBFUlJPUl9SRVNVTFRfRlJBR01FTlQgfSBmcm9tICcuL3NoYXJlZC1kZWZpbml0aW9ucyc7XHJcblxyXG5leHBvcnQgY29uc3QgQ1VSUkVOVF9VU0VSX0ZSQUdNRU5UID0gZ3FsYFxyXG4gICAgZnJhZ21lbnQgQ3VycmVudFVzZXIgb24gQ3VycmVudFVzZXIge1xyXG4gICAgICAgIGlkXHJcbiAgICAgICAgaWRlbnRpZmllclxyXG4gICAgICAgIGNoYW5uZWxzIHtcclxuICAgICAgICAgICAgaWRcclxuICAgICAgICAgICAgY29kZVxyXG4gICAgICAgICAgICB0b2tlblxyXG4gICAgICAgICAgICBwZXJtaXNzaW9uc1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBBVFRFTVBUX0xPR0lOID0gZ3FsYFxyXG4gICAgbXV0YXRpb24gQXR0ZW1wdExvZ2luKCR1c2VybmFtZTogU3RyaW5nISwgJHBhc3N3b3JkOiBTdHJpbmchLCAkcmVtZW1iZXJNZTogQm9vbGVhbiEpIHtcclxuICAgICAgICBsb2dpbih1c2VybmFtZTogJHVzZXJuYW1lLCBwYXNzd29yZDogJHBhc3N3b3JkLCByZW1lbWJlck1lOiAkcmVtZW1iZXJNZSkge1xyXG4gICAgICAgICAgICAuLi5DdXJyZW50VXNlclxyXG4gICAgICAgICAgICAuLi5FcnJvclJlc3VsdFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICR7Q1VSUkVOVF9VU0VSX0ZSQUdNRU5UfVxyXG4gICAgJHtFUlJPUl9SRVNVTFRfRlJBR01FTlR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgTE9HX09VVCA9IGdxbGBcclxuICAgIG11dGF0aW9uIExvZ091dCB7XHJcbiAgICAgICAgbG9nb3V0IHtcclxuICAgICAgICAgICAgc3VjY2Vzc1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBHRVRfQ1VSUkVOVF9VU0VSID0gZ3FsYFxyXG4gICAgcXVlcnkgR2V0Q3VycmVudFVzZXIge1xyXG4gICAgICAgIG1lIHtcclxuICAgICAgICAgICAgLi4uQ3VycmVudFVzZXJcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAke0NVUlJFTlRfVVNFUl9GUkFHTUVOVH1cclxuYDtcclxuIl19