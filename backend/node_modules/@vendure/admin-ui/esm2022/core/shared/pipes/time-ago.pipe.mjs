import { Pipe } from '@angular/core';
import { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';
import dayjs from 'dayjs';
import * as i0 from "@angular/core";
import * as i1 from "../../providers/i18n/i18n.service";
/**
 * @description
 * Converts a date into the format "3 minutes ago", "5 hours ago" etc.
 *
 * @example
 * ```HTML
 * {{ order.orderPlacedAt | timeAgo }}
 * ```
 *
 * @docsCategory pipes
 */
export class TimeAgoPipe {
    constructor(i18nService) {
        this.i18nService = i18nService;
    }
    transform(value, nowVal) {
        const then = dayjs(value);
        const now = dayjs(nowVal || new Date());
        const secondsDiff = now.diff(then, 'second');
        const durations = [
            [60, _('datetime.ago-seconds')],
            [3600, _('datetime.ago-minutes')],
            [86400, _('datetime.ago-hours')],
            [31536000, _('datetime.ago-days')],
            [Number.MAX_SAFE_INTEGER, _('datetime.ago-years')],
        ];
        let lastUpperBound = 1;
        for (const [upperBound, translationToken] of durations) {
            if (secondsDiff < upperBound) {
                const count = Math.max(0, Math.floor(secondsDiff / lastUpperBound));
                return this.i18nService.translate(translationToken, { count });
            }
            lastUpperBound = upperBound;
        }
        return then.format();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: TimeAgoPipe, deps: [{ token: i1.I18nService }], target: i0.ɵɵFactoryTarget.Pipe }); }
    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "16.2.2", ngImport: i0, type: TimeAgoPipe, name: "timeAgo", pure: false }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: TimeAgoPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'timeAgo',
                    pure: false,
                }]
        }], ctorParameters: function () { return [{ type: i1.I18nService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZS1hZ28ucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29yZS9zcmMvc2hhcmVkL3BpcGVzL3RpbWUtYWdvLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLE1BQU0sSUFBSSxDQUFDLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUN0RSxPQUFPLEtBQUssTUFBTSxPQUFPLENBQUM7OztBQUkxQjs7Ozs7Ozs7OztHQVVHO0FBS0gsTUFBTSxPQUFPLFdBQVc7SUFDcEIsWUFBb0IsV0FBd0I7UUFBeEIsZ0JBQVcsR0FBWCxXQUFXLENBQWE7SUFBRyxDQUFDO0lBRWhELFNBQVMsQ0FBQyxLQUFvQixFQUFFLE1BQXNCO1FBQ2xELE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMxQixNQUFNLEdBQUcsR0FBRyxLQUFLLENBQUMsTUFBTSxJQUFJLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztRQUN4QyxNQUFNLFdBQVcsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQztRQUM3QyxNQUFNLFNBQVMsR0FBNEI7WUFDdkMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLHNCQUFzQixDQUFDLENBQUM7WUFDL0IsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLHNCQUFzQixDQUFDLENBQUM7WUFDakMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLG9CQUFvQixDQUFDLENBQUM7WUFDaEMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLENBQUM7WUFDbEMsQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDLG9CQUFvQixDQUFDLENBQUM7U0FDckQsQ0FBQztRQUVGLElBQUksY0FBYyxHQUFHLENBQUMsQ0FBQztRQUN2QixLQUFLLE1BQU0sQ0FBQyxVQUFVLEVBQUUsZ0JBQWdCLENBQUMsSUFBSSxTQUFTLEVBQUU7WUFDcEQsSUFBSSxXQUFXLEdBQUcsVUFBVSxFQUFFO2dCQUMxQixNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsR0FBRyxjQUFjLENBQUMsQ0FBQyxDQUFDO2dCQUNwRSxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLGdCQUFnQixFQUFFLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQzthQUNsRTtZQUNELGNBQWMsR0FBRyxVQUFVLENBQUM7U0FDL0I7UUFDRCxPQUFPLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUN6QixDQUFDOzhHQXhCUSxXQUFXOzRHQUFYLFdBQVc7OzJGQUFYLFdBQVc7a0JBSnZCLElBQUk7bUJBQUM7b0JBQ0YsSUFBSSxFQUFFLFNBQVM7b0JBQ2YsSUFBSSxFQUFFLEtBQUs7aUJBQ2QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IG1hcmtlciBhcyBfIH0gZnJvbSAnQGJpZXNiamVyZy9uZ3gtdHJhbnNsYXRlLWV4dHJhY3QtbWFya2VyJztcclxuaW1wb3J0IGRheWpzIGZyb20gJ2RheWpzJztcclxuXHJcbmltcG9ydCB7IEkxOG5TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vcHJvdmlkZXJzL2kxOG4vaTE4bi5zZXJ2aWNlJztcclxuXHJcbi8qKlxyXG4gKiBAZGVzY3JpcHRpb25cclxuICogQ29udmVydHMgYSBkYXRlIGludG8gdGhlIGZvcm1hdCBcIjMgbWludXRlcyBhZ29cIiwgXCI1IGhvdXJzIGFnb1wiIGV0Yy5cclxuICpcclxuICogQGV4YW1wbGVcclxuICogYGBgSFRNTFxyXG4gKiB7eyBvcmRlci5vcmRlclBsYWNlZEF0IHwgdGltZUFnbyB9fVxyXG4gKiBgYGBcclxuICpcclxuICogQGRvY3NDYXRlZ29yeSBwaXBlc1xyXG4gKi9cclxuQFBpcGUoe1xyXG4gICAgbmFtZTogJ3RpbWVBZ28nLFxyXG4gICAgcHVyZTogZmFsc2UsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBUaW1lQWdvUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBpMThuU2VydmljZTogSTE4blNlcnZpY2UpIHt9XHJcblxyXG4gICAgdHJhbnNmb3JtKHZhbHVlOiBzdHJpbmcgfCBEYXRlLCBub3dWYWw/OiBzdHJpbmcgfCBEYXRlKTogc3RyaW5nIHtcclxuICAgICAgICBjb25zdCB0aGVuID0gZGF5anModmFsdWUpO1xyXG4gICAgICAgIGNvbnN0IG5vdyA9IGRheWpzKG5vd1ZhbCB8fCBuZXcgRGF0ZSgpKTtcclxuICAgICAgICBjb25zdCBzZWNvbmRzRGlmZiA9IG5vdy5kaWZmKHRoZW4sICdzZWNvbmQnKTtcclxuICAgICAgICBjb25zdCBkdXJhdGlvbnM6IEFycmF5PFtudW1iZXIsIHN0cmluZ10+ID0gW1xyXG4gICAgICAgICAgICBbNjAsIF8oJ2RhdGV0aW1lLmFnby1zZWNvbmRzJyldLFxyXG4gICAgICAgICAgICBbMzYwMCwgXygnZGF0ZXRpbWUuYWdvLW1pbnV0ZXMnKV0sXHJcbiAgICAgICAgICAgIFs4NjQwMCwgXygnZGF0ZXRpbWUuYWdvLWhvdXJzJyldLFxyXG4gICAgICAgICAgICBbMzE1MzYwMDAsIF8oJ2RhdGV0aW1lLmFnby1kYXlzJyldLFxyXG4gICAgICAgICAgICBbTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIsIF8oJ2RhdGV0aW1lLmFnby15ZWFycycpXSxcclxuICAgICAgICBdO1xyXG5cclxuICAgICAgICBsZXQgbGFzdFVwcGVyQm91bmQgPSAxO1xyXG4gICAgICAgIGZvciAoY29uc3QgW3VwcGVyQm91bmQsIHRyYW5zbGF0aW9uVG9rZW5dIG9mIGR1cmF0aW9ucykge1xyXG4gICAgICAgICAgICBpZiAoc2Vjb25kc0RpZmYgPCB1cHBlckJvdW5kKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjb3VudCA9IE1hdGgubWF4KDAsIE1hdGguZmxvb3Ioc2Vjb25kc0RpZmYgLyBsYXN0VXBwZXJCb3VuZCkpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuaTE4blNlcnZpY2UudHJhbnNsYXRlKHRyYW5zbGF0aW9uVG9rZW4sIHsgY291bnQgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbGFzdFVwcGVyQm91bmQgPSB1cHBlckJvdW5kO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhlbi5mb3JtYXQoKTtcclxuICAgIH1cclxufVxyXG4iXX0=