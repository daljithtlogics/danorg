import { Component, Input, ViewChild, ViewContainerRef } from '@angular/core';
import { map } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../../../data/providers/data.service";
import * as i2 from "../../../providers/custom-field-component/custom-field-component.service";
import * as i3 from "@clr/angular";
import * as i4 from "@angular/common";
import * as i5 from "@angular/forms";
import * as i6 from "../form-field/form-field.component";
import * as i7 from "../help-tooltip/help-tooltip.component";
import * as i8 from "../../dynamic-form-inputs/dynamic-form-input/dynamic-form-input.component";
import * as i9 from "../../pipes/custom-field-label.pipe";
import * as i10 from "../../pipes/custom-field-description.pipe";
/**
 * This component renders the appropriate type of form input control based
 * on the "type" property of the provided CustomFieldConfig.
 */
export class CustomFieldControlComponent {
    constructor(dataService, customFieldComponentService) {
        this.dataService = dataService;
        this.customFieldComponentService = customFieldComponentService;
        this.compact = false;
        this.showLabel = true;
        this.readonly = false;
        this.hasCustomControl = false;
    }
    ngOnInit() {
        this.uiLanguage$ = this.dataService.client
            .uiState()
            .stream$.pipe(map(({ uiState }) => uiState.language));
    }
    getFieldDefinition() {
        const config = {
            ...this.customField,
        };
        const id = this.customFieldComponentService.customFieldComponentExists(this.entityName, this.customField.name);
        if (id) {
            config.ui = { component: id };
        }
        switch (config.__typename) {
            case 'IntCustomFieldConfig':
                return {
                    ...config,
                    min: config.intMin,
                    max: config.intMax,
                    step: config.intStep,
                };
            case 'FloatCustomFieldConfig':
                return {
                    ...config,
                    min: config.floatMin,
                    max: config.floatMax,
                    step: config.floatStep,
                };
            case 'DateTimeCustomFieldConfig':
                return {
                    ...config,
                    min: config.datetimeMin,
                    max: config.datetimeMax,
                    step: config.datetimeStep,
                };
            default:
                return {
                    ...config,
                };
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: CustomFieldControlComponent, deps: [{ token: i1.DataService }, { token: i2.CustomFieldComponentService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.2", type: CustomFieldControlComponent, selector: "vdr-custom-field-control", inputs: { entityName: "entityName", formGroup: ["customFieldsFormGroup", "formGroup"], customField: "customField", compact: "compact", showLabel: "showLabel", readonly: "readonly" }, viewQueries: [{ propertyName: "customComponentPlaceholder", first: true, predicate: ["customComponentPlaceholder"], descendants: true, read: ViewContainerRef }], ngImport: i0, template: "<div class=\"clr-form-control\" *ngIf=\"compact\">\r\n    <div class=\"flex\">\r\n        <label for=\"basic\" class=\"clr-control-label\"\r\n            >{{ customField | customFieldLabel: (uiLanguage$ | async) }}\r\n            <vdr-help-tooltip\r\n                *ngIf=\"customField | customFieldDescription: (uiLanguage$ | async) as description\"\r\n                [content]=\"description\"\r\n            ></vdr-help-tooltip>\r\n        </label>\r\n    </div>\r\n    <div class=\"clr-control-container\">\r\n        <div class=\"clr-input-wrapper\">\r\n            <ng-container *ngTemplateOutlet=\"inputs\"></ng-container>\r\n        </div>\r\n    </div>\r\n</div>\r\n<vdr-form-field\r\n    [label]=\"customField | customFieldLabel: (uiLanguage$ | async)\"\r\n    [tooltip]=\"customField | customFieldDescription: (uiLanguage$ | async)\"\r\n    [for]=\"customField.name\"\r\n    *ngIf=\"!compact\"\r\n>\r\n    <ng-container *ngTemplateOutlet=\"inputs\"></ng-container>\r\n</vdr-form-field>\r\n\r\n<ng-template #inputs>\r\n    <ng-container [formGroup]=\"formGroup\">\r\n        <vdr-dynamic-form-input\r\n            [formControlName]=\"customField.name\"\r\n            [readonly]=\"readonly || customField.readonly\"\r\n            [control]=\"formGroup.get(customField.name)\"\r\n            [def]=\"getFieldDefinition()\"\r\n        >\r\n        </vdr-dynamic-form-input>\r\n    </ng-container>\r\n</ng-template>\r\n", styles: [":host{display:block;width:100%}:host .toggle-switch{margin-top:0;margin-bottom:0}\n"], dependencies: [{ kind: "directive", type: i3.ClrLabel, selector: "label", inputs: ["for"] }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i4.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i5.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i5.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "component", type: i6.FormFieldComponent, selector: "vdr-form-field", inputs: ["label", "for", "tooltip", "errors", "readOnlyToggle"] }, { kind: "component", type: i7.HelpTooltipComponent, selector: "vdr-help-tooltip", inputs: ["content", "position"] }, { kind: "component", type: i8.DynamicFormInputComponent, selector: "vdr-dynamic-form-input", inputs: ["def", "readonly", "control"] }, { kind: "pipe", type: i4.AsyncPipe, name: "async" }, { kind: "pipe", type: i9.CustomFieldLabelPipe, name: "customFieldLabel" }, { kind: "pipe", type: i10.CustomFieldDescriptionPipe, name: "customFieldDescription" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: CustomFieldControlComponent, decorators: [{
            type: Component,
            args: [{ selector: 'vdr-custom-field-control', template: "<div class=\"clr-form-control\" *ngIf=\"compact\">\r\n    <div class=\"flex\">\r\n        <label for=\"basic\" class=\"clr-control-label\"\r\n            >{{ customField | customFieldLabel: (uiLanguage$ | async) }}\r\n            <vdr-help-tooltip\r\n                *ngIf=\"customField | customFieldDescription: (uiLanguage$ | async) as description\"\r\n                [content]=\"description\"\r\n            ></vdr-help-tooltip>\r\n        </label>\r\n    </div>\r\n    <div class=\"clr-control-container\">\r\n        <div class=\"clr-input-wrapper\">\r\n            <ng-container *ngTemplateOutlet=\"inputs\"></ng-container>\r\n        </div>\r\n    </div>\r\n</div>\r\n<vdr-form-field\r\n    [label]=\"customField | customFieldLabel: (uiLanguage$ | async)\"\r\n    [tooltip]=\"customField | customFieldDescription: (uiLanguage$ | async)\"\r\n    [for]=\"customField.name\"\r\n    *ngIf=\"!compact\"\r\n>\r\n    <ng-container *ngTemplateOutlet=\"inputs\"></ng-container>\r\n</vdr-form-field>\r\n\r\n<ng-template #inputs>\r\n    <ng-container [formGroup]=\"formGroup\">\r\n        <vdr-dynamic-form-input\r\n            [formControlName]=\"customField.name\"\r\n            [readonly]=\"readonly || customField.readonly\"\r\n            [control]=\"formGroup.get(customField.name)\"\r\n            [def]=\"getFieldDefinition()\"\r\n        >\r\n        </vdr-dynamic-form-input>\r\n    </ng-container>\r\n</ng-template>\r\n", styles: [":host{display:block;width:100%}:host .toggle-switch{margin-top:0;margin-bottom:0}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.DataService }, { type: i2.CustomFieldComponentService }]; }, propDecorators: { entityName: [{
                type: Input
            }], formGroup: [{
                type: Input,
                args: ['customFieldsFormGroup']
            }], customField: [{
                type: Input
            }], compact: [{
                type: Input
            }], showLabel: [{
                type: Input
            }], readonly: [{
                type: Input
            }], customComponentPlaceholder: [{
                type: ViewChild,
                args: ['customComponentPlaceholder', { read: ViewContainerRef }]
            }] } });
//# sourceMappingURL=data:application/json;base64,