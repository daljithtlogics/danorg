import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../../../data/providers/data.service";
import * as i2 from "@angular/common";
import * as i3 from "@ngx-translate/core";
import * as i4 from "../../pipes/custom-field-label.pipe";
export class LocalizedTextComponent {
    constructor(dataService) {
        this.dataService = dataService;
        this.uiLanguage$ = this.dataService.client.uiState().mapStream(data => data.uiState.language);
    }
    isString(value) {
        return typeof value === 'string';
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: LocalizedTextComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.2", type: LocalizedTextComponent, selector: "vdr-localized-text", inputs: { text: "text" }, ngImport: i0, template: "<ng-container *ngIf=\"isString(text)\">{{ text | translate }}</ng-container>\r\n<ng-container *ngIf=\"!isString(text)\">{{ text | customFieldLabel : (uiLanguage$ | async) }}</ng-container>\r\n", styles: [""], dependencies: [{ kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }, { kind: "pipe", type: i3.TranslatePipe, name: "translate" }, { kind: "pipe", type: i4.CustomFieldLabelPipe, name: "customFieldLabel" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: LocalizedTextComponent, decorators: [{
            type: Component,
            args: [{ selector: 'vdr-localized-text', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-container *ngIf=\"isString(text)\">{{ text | translate }}</ng-container>\r\n<ng-container *ngIf=\"!isString(text)\">{{ text | customFieldLabel : (uiLanguage$ | async) }}</ng-container>\r\n" }]
        }], ctorParameters: function () { return [{ type: i1.DataService }]; }, propDecorators: { text: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWxpemVkLXRleHQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb3JlL3NyYy9zaGFyZWQvY29tcG9uZW50cy9sb2NhbGl6ZWQtdGV4dC9sb2NhbGl6ZWQtdGV4dC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvcmUvc3JjL3NoYXJlZC9jb21wb25lbnRzL2xvY2FsaXplZC10ZXh0L2xvY2FsaXplZC10ZXh0LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7QUFXMUUsTUFBTSxPQUFPLHNCQUFzQjtJQUcvQixZQUFvQixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtRQUN4QyxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEcsQ0FBQztJQUVELFFBQVEsQ0FBQyxLQUFpQztRQUN0QyxPQUFPLE9BQU8sS0FBSyxLQUFLLFFBQVEsQ0FBQztJQUNyQyxDQUFDOzhHQVRRLHNCQUFzQjtrR0FBdEIsc0JBQXNCLG9GQ1huQyxrTUFFQTs7MkZEU2Esc0JBQXNCO2tCQU5sQyxTQUFTOytCQUNJLG9CQUFvQixtQkFHYix1QkFBdUIsQ0FBQyxNQUFNO2tHQUd0QyxJQUFJO3NCQUFaLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IExhbmd1YWdlQ29kZSwgTG9jYWxpemVkU3RyaW5nIH0gZnJvbSAnLi4vLi4vLi4vY29tbW9uL2dlbmVyYXRlZC10eXBlcyc7XHJcbmltcG9ydCB7IERhdGFTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vZGF0YS9wcm92aWRlcnMvZGF0YS5zZXJ2aWNlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICd2ZHItbG9jYWxpemVkLXRleHQnLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcuL2xvY2FsaXplZC10ZXh0LmNvbXBvbmVudC5odG1sJyxcclxuICAgIHN0eWxlVXJsczogWycuL2xvY2FsaXplZC10ZXh0LmNvbXBvbmVudC5zY3NzJ10sXHJcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcclxufSlcclxuZXhwb3J0IGNsYXNzIExvY2FsaXplZFRleHRDb21wb25lbnQge1xyXG4gICAgQElucHV0KCkgdGV4dDogTG9jYWxpemVkU3RyaW5nW10gfCBzdHJpbmc7XHJcbiAgICB1aUxhbmd1YWdlJDogT2JzZXJ2YWJsZTxMYW5ndWFnZUNvZGU+O1xyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBkYXRhU2VydmljZTogRGF0YVNlcnZpY2UpIHtcclxuICAgICAgICB0aGlzLnVpTGFuZ3VhZ2UkID0gdGhpcy5kYXRhU2VydmljZS5jbGllbnQudWlTdGF0ZSgpLm1hcFN0cmVhbShkYXRhID0+IGRhdGEudWlTdGF0ZS5sYW5ndWFnZSk7XHJcbiAgICB9XHJcblxyXG4gICAgaXNTdHJpbmcodmFsdWU6IHN0cmluZyB8IExvY2FsaXplZFN0cmluZ1tdKTogdmFsdWUgaXMgc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJztcclxuICAgIH1cclxufVxyXG4iLCI8bmctY29udGFpbmVyICpuZ0lmPVwiaXNTdHJpbmcodGV4dClcIj57eyB0ZXh0IHwgdHJhbnNsYXRlIH19PC9uZy1jb250YWluZXI+XHJcbjxuZy1jb250YWluZXIgKm5nSWY9XCIhaXNTdHJpbmcodGV4dClcIj57eyB0ZXh0IHwgY3VzdG9tRmllbGRMYWJlbCA6ICh1aUxhbmd1YWdlJCB8IGFzeW5jKSB9fTwvbmctY29udGFpbmVyPlxyXG4iXX0=