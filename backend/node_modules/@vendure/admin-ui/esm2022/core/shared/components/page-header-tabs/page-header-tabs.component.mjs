import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@clr/angular";
import * as i2 from "@angular/common";
import * as i3 from "@angular/router";
import * as i4 from "@ngx-translate/core";
export class PageHeaderTabsComponent {
    constructor() {
        this.tabs = [];
        this.routerLinkActiveOptions = {
            matrixParams: 'ignored',
            queryParams: 'ignored',
            fragment: 'ignored',
            paths: 'exact',
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: PageHeaderTabsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.2", type: PageHeaderTabsComponent, selector: "vdr-page-header-tabs", inputs: { tabs: "tabs" }, ngImport: i0, template: "<div class=\"tab-bar\" *ngIf=\"tabs.length\">\r\n    <a\r\n        [routerLink]=\"tab.route\"\r\n        class=\"tab\"\r\n        *ngFor=\"let tab of tabs\"\r\n        routerLinkActive=\"active\"\r\n        [routerLinkActiveOptions]=\"routerLinkActiveOptions\"\r\n    >\r\n        <clr-icon *ngIf=\"tab.icon\" [attr.shape]=\"tab.icon\"></clr-icon>\r\n        {{ tab.label | translate }}\r\n    </a>\r\n</div>\r\n", styles: [":host{display:block;margin-top:calc(var(--space-unit) * 2)}.tab-bar{display:flex}.tab{padding:calc(var(--space-unit) * 1) calc(var(--space-unit) * 2);border-bottom:1px solid var(--color-weight-300);margin-bottom:-1px;color:var(--color-weight-700);cursor:pointer}.tab.active{color:var(--color-text-active);border-bottom-color:var(--color-text-active)}\n"], dependencies: [{ kind: "directive", type: i1.ClrIconCustomTag, selector: "clr-icon" }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "directive", type: i3.RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "ariaCurrentWhenActive", "routerLinkActive"], outputs: ["isActiveChange"], exportAs: ["routerLinkActive"] }, { kind: "pipe", type: i4.TranslatePipe, name: "translate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: PageHeaderTabsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'vdr-page-header-tabs', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"tab-bar\" *ngIf=\"tabs.length\">\r\n    <a\r\n        [routerLink]=\"tab.route\"\r\n        class=\"tab\"\r\n        *ngFor=\"let tab of tabs\"\r\n        routerLinkActive=\"active\"\r\n        [routerLinkActiveOptions]=\"routerLinkActiveOptions\"\r\n    >\r\n        <clr-icon *ngIf=\"tab.icon\" [attr.shape]=\"tab.icon\"></clr-icon>\r\n        {{ tab.label | translate }}\r\n    </a>\r\n</div>\r\n", styles: [":host{display:block;margin-top:calc(var(--space-unit) * 2)}.tab-bar{display:flex}.tab{padding:calc(var(--space-unit) * 1) calc(var(--space-unit) * 2);border-bottom:1px solid var(--color-weight-300);margin-bottom:-1px;color:var(--color-weight-700);cursor:pointer}.tab.active{color:var(--color-text-active);border-bottom-color:var(--color-text-active)}\n"] }]
        }], propDecorators: { tabs: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS1oZWFkZXItdGFicy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvcmUvc3JjL3NoYXJlZC9jb21wb25lbnRzL3BhZ2UtaGVhZGVyLXRhYnMvcGFnZS1oZWFkZXItdGFicy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvcmUvc3JjL3NoYXJlZC9jb21wb25lbnRzL3BhZ2UtaGVhZGVyLXRhYnMvcGFnZS1oZWFkZXItdGFicy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7O0FBZ0IxRSxNQUFNLE9BQU8sdUJBQXVCO0lBTnBDO1FBT2EsU0FBSSxHQUFnQixFQUFFLENBQUM7UUFFdkIsNEJBQXVCLEdBQXlCO1lBQ3JELFlBQVksRUFBRSxTQUFTO1lBQ3ZCLFdBQVcsRUFBRSxTQUFTO1lBQ3RCLFFBQVEsRUFBRSxTQUFTO1lBQ25CLEtBQUssRUFBRSxPQUFPO1NBQ2pCLENBQUM7S0FDTDs4R0FUWSx1QkFBdUI7a0dBQXZCLHVCQUF1QixzRkNoQnBDLDhaQVlBOzsyRkRJYSx1QkFBdUI7a0JBTm5DLFNBQVM7K0JBQ0ksc0JBQXNCLG1CQUdmLHVCQUF1QixDQUFDLE1BQU07OEJBR3RDLElBQUk7c0JBQVosS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IElzQWN0aXZlTWF0Y2hPcHRpb25zIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSGVhZGVyVGFiIHtcclxuICAgIGlkOiBzdHJpbmc7XHJcbiAgICBsYWJlbDogc3RyaW5nO1xyXG4gICAgaWNvbj86IHN0cmluZztcclxuICAgIHJvdXRlPzogc3RyaW5nW107XHJcbn1cclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICd2ZHItcGFnZS1oZWFkZXItdGFicycsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy4vcGFnZS1oZWFkZXItdGFicy5jb21wb25lbnQuaHRtbCcsXHJcbiAgICBzdHlsZVVybHM6IFsnLi9wYWdlLWhlYWRlci10YWJzLmNvbXBvbmVudC5zY3NzJ10sXHJcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcclxufSlcclxuZXhwb3J0IGNsYXNzIFBhZ2VIZWFkZXJUYWJzQ29tcG9uZW50IHtcclxuICAgIEBJbnB1dCgpIHRhYnM6IEhlYWRlclRhYltdID0gW107XHJcblxyXG4gICAgcmVhZG9ubHkgcm91dGVyTGlua0FjdGl2ZU9wdGlvbnM6IElzQWN0aXZlTWF0Y2hPcHRpb25zID0ge1xyXG4gICAgICAgIG1hdHJpeFBhcmFtczogJ2lnbm9yZWQnLFxyXG4gICAgICAgIHF1ZXJ5UGFyYW1zOiAnaWdub3JlZCcsXHJcbiAgICAgICAgZnJhZ21lbnQ6ICdpZ25vcmVkJyxcclxuICAgICAgICBwYXRoczogJ2V4YWN0JyxcclxuICAgIH07XHJcbn1cclxuIiwiPGRpdiBjbGFzcz1cInRhYi1iYXJcIiAqbmdJZj1cInRhYnMubGVuZ3RoXCI+XHJcbiAgICA8YVxyXG4gICAgICAgIFtyb3V0ZXJMaW5rXT1cInRhYi5yb3V0ZVwiXHJcbiAgICAgICAgY2xhc3M9XCJ0YWJcIlxyXG4gICAgICAgICpuZ0Zvcj1cImxldCB0YWIgb2YgdGFic1wiXHJcbiAgICAgICAgcm91dGVyTGlua0FjdGl2ZT1cImFjdGl2ZVwiXHJcbiAgICAgICAgW3JvdXRlckxpbmtBY3RpdmVPcHRpb25zXT1cInJvdXRlckxpbmtBY3RpdmVPcHRpb25zXCJcclxuICAgID5cclxuICAgICAgICA8Y2xyLWljb24gKm5nSWY9XCJ0YWIuaWNvblwiIFthdHRyLnNoYXBlXT1cInRhYi5pY29uXCI+PC9jbHItaWNvbj5cclxuICAgICAgICB7eyB0YWIubGFiZWwgfCB0cmFuc2xhdGUgfX1cclxuICAgIDwvYT5cclxuPC9kaXY+XHJcbiJdfQ==