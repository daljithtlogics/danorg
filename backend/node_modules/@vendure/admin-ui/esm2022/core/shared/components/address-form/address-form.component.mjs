import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
import * as i3 from "../form-field/form-field.component";
import * as i4 from "../form-field/form-field-control.directive";
import * as i5 from "../tabbed-custom-fields/tabbed-custom-fields.component";
import * as i6 from "../card/card.component";
import * as i7 from "@ngx-translate/core";
export class AddressFormComponent {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: AddressFormComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.2", type: AddressFormComponent, selector: "vdr-address-form", inputs: { customFields: "customFields", formGroup: "formGroup", availableCountries: "availableCountries" }, ngImport: i0, template: "<form [formGroup]=\"formGroup\">\r\n    <vdr-card>\r\n        <vdr-form-field [label]=\"'customer.full-name' | translate\">\r\n            <input formControlName=\"fullName\" type=\"text\" />\r\n        </vdr-form-field>\r\n        <vdr-form-field [label]=\"'customer.company' | translate\">\r\n            <input formControlName=\"company\" type=\"text\" />\r\n        </vdr-form-field>\r\n\r\n        <vdr-form-field [label]=\"'customer.street-line-1' | translate\">\r\n            <input formControlName=\"streetLine1\" type=\"text\" />\r\n        </vdr-form-field>\r\n\r\n        <vdr-form-field [label]=\"'customer.street-line-2' | translate\">\r\n            <input formControlName=\"streetLine2\" type=\"text\" />\r\n        </vdr-form-field>\r\n\r\n        <vdr-form-field [label]=\"'customer.city' | translate\">\r\n            <input formControlName=\"city\" type=\"text\" />\r\n        </vdr-form-field>\r\n\r\n        <vdr-form-field [label]=\"'customer.province' | translate\">\r\n            <input formControlName=\"province\" type=\"text\" />\r\n        </vdr-form-field>\r\n\r\n        <vdr-form-field [label]=\"'customer.postal-code' | translate\">\r\n            <input formControlName=\"postalCode\" type=\"text\" />\r\n        </vdr-form-field>\r\n\r\n        <vdr-form-field [label]=\"'customer.country' | translate\">\r\n            <select name=\"countryCode\" formControlName=\"countryCode\">\r\n                <option *ngFor=\"let country of availableCountries\" [value]=\"country.code\">\r\n                    {{ country.name }}\r\n                </option>\r\n            </select>\r\n        </vdr-form-field>\r\n        <vdr-form-field [label]=\"'customer.phone-number' | translate\">\r\n            <input formControlName=\"phoneNumber\" type=\"text\" />\r\n        </vdr-form-field>\r\n        <section\r\n            formGroupName=\"customFields\"\r\n            *ngIf=\"formGroup.get('customFields') as customFieldsGroup\"\r\n        >\r\n            <vdr-tabbed-custom-fields\r\n                entityName=\"Address\"\r\n                [customFields]=\"customFields\"\r\n                [customFieldsFormGroup]=\"customFieldsGroup\"\r\n            ></vdr-tabbed-custom-fields>\r\n        </section>\r\n    </vdr-card>\r\n</form>\r\n", styles: [""], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i2.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i2.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i2.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "directive", type: i2.FormGroupName, selector: "[formGroupName]", inputs: ["formGroupName"] }, { kind: "component", type: i3.FormFieldComponent, selector: "vdr-form-field", inputs: ["label", "for", "tooltip", "errors", "readOnlyToggle"] }, { kind: "directive", type: i4.FormFieldControlDirective, selector: "input, textarea, select" }, { kind: "component", type: i5.TabbedCustomFieldsComponent, selector: "vdr-tabbed-custom-fields", inputs: ["entityName", "customFields", "customFieldsFormGroup", "readonly", "compact", "showLabel"] }, { kind: "component", type: i6.CardComponent, selector: "vdr-card", inputs: ["title", "paddingX"] }, { kind: "pipe", type: i7.TranslatePipe, name: "translate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: AddressFormComponent, decorators: [{
            type: Component,
            args: [{ selector: 'vdr-address-form', changeDetection: ChangeDetectionStrategy.OnPush, template: "<form [formGroup]=\"formGroup\">\r\n    <vdr-card>\r\n        <vdr-form-field [label]=\"'customer.full-name' | translate\">\r\n            <input formControlName=\"fullName\" type=\"text\" />\r\n        </vdr-form-field>\r\n        <vdr-form-field [label]=\"'customer.company' | translate\">\r\n            <input formControlName=\"company\" type=\"text\" />\r\n        </vdr-form-field>\r\n\r\n        <vdr-form-field [label]=\"'customer.street-line-1' | translate\">\r\n            <input formControlName=\"streetLine1\" type=\"text\" />\r\n        </vdr-form-field>\r\n\r\n        <vdr-form-field [label]=\"'customer.street-line-2' | translate\">\r\n            <input formControlName=\"streetLine2\" type=\"text\" />\r\n        </vdr-form-field>\r\n\r\n        <vdr-form-field [label]=\"'customer.city' | translate\">\r\n            <input formControlName=\"city\" type=\"text\" />\r\n        </vdr-form-field>\r\n\r\n        <vdr-form-field [label]=\"'customer.province' | translate\">\r\n            <input formControlName=\"province\" type=\"text\" />\r\n        </vdr-form-field>\r\n\r\n        <vdr-form-field [label]=\"'customer.postal-code' | translate\">\r\n            <input formControlName=\"postalCode\" type=\"text\" />\r\n        </vdr-form-field>\r\n\r\n        <vdr-form-field [label]=\"'customer.country' | translate\">\r\n            <select name=\"countryCode\" formControlName=\"countryCode\">\r\n                <option *ngFor=\"let country of availableCountries\" [value]=\"country.code\">\r\n                    {{ country.name }}\r\n                </option>\r\n            </select>\r\n        </vdr-form-field>\r\n        <vdr-form-field [label]=\"'customer.phone-number' | translate\">\r\n            <input formControlName=\"phoneNumber\" type=\"text\" />\r\n        </vdr-form-field>\r\n        <section\r\n            formGroupName=\"customFields\"\r\n            *ngIf=\"formGroup.get('customFields') as customFieldsGroup\"\r\n        >\r\n            <vdr-tabbed-custom-fields\r\n                entityName=\"Address\"\r\n                [customFields]=\"customFields\"\r\n                [customFieldsFormGroup]=\"customFieldsGroup\"\r\n            ></vdr-tabbed-custom-fields>\r\n        </section>\r\n    </vdr-card>\r\n</form>\r\n" }]
        }], propDecorators: { customFields: [{
                type: Input
            }], formGroup: [{
                type: Input
            }], availableCountries: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkcmVzcy1mb3JtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29yZS9zcmMvc2hhcmVkL2NvbXBvbmVudHMvYWRkcmVzcy1mb3JtL2FkZHJlc3MtZm9ybS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvcmUvc3JjL3NoYXJlZC9jb21wb25lbnRzL2FkZHJlc3MtZm9ybS9hZGRyZXNzLWZvcm0uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7OztBQVcxRSxNQUFNLE9BQU8sb0JBQW9COzhHQUFwQixvQkFBb0I7a0dBQXBCLG9CQUFvQixvS0NYakMsZ3VFQW1EQTs7MkZEeENhLG9CQUFvQjtrQkFOaEMsU0FBUzsrQkFDSSxrQkFBa0IsbUJBR1gsdUJBQXVCLENBQUMsTUFBTTs4QkFHdEMsWUFBWTtzQkFBcEIsS0FBSztnQkFDRyxTQUFTO3NCQUFqQixLQUFLO2dCQUNHLGtCQUFrQjtzQkFBMUIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFVudHlwZWRGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcblxyXG5pbXBvcnQgeyBDdXN0b21GaWVsZENvbmZpZywgR2V0QXZhaWxhYmxlQ291bnRyaWVzUXVlcnkgfSBmcm9tICcuLi8uLi8uLi9jb21tb24vZ2VuZXJhdGVkLXR5cGVzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICd2ZHItYWRkcmVzcy1mb3JtJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi9hZGRyZXNzLWZvcm0uY29tcG9uZW50Lmh0bWwnLFxyXG4gICAgc3R5bGVVcmxzOiBbJy4vYWRkcmVzcy1mb3JtLmNvbXBvbmVudC5zY3NzJ10sXHJcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcclxufSlcclxuZXhwb3J0IGNsYXNzIEFkZHJlc3NGb3JtQ29tcG9uZW50IHtcclxuICAgIEBJbnB1dCgpIGN1c3RvbUZpZWxkczogQ3VzdG9tRmllbGRDb25maWc7XHJcbiAgICBASW5wdXQoKSBmb3JtR3JvdXA6IFVudHlwZWRGb3JtR3JvdXA7XHJcbiAgICBASW5wdXQoKSBhdmFpbGFibGVDb3VudHJpZXM6IEFycmF5PEdldEF2YWlsYWJsZUNvdW50cmllc1F1ZXJ5Wydjb3VudHJpZXMnXVsnaXRlbXMnXT47XHJcbn1cclxuIiwiPGZvcm0gW2Zvcm1Hcm91cF09XCJmb3JtR3JvdXBcIj5cclxuICAgIDx2ZHItY2FyZD5cclxuICAgICAgICA8dmRyLWZvcm0tZmllbGQgW2xhYmVsXT1cIidjdXN0b21lci5mdWxsLW5hbWUnIHwgdHJhbnNsYXRlXCI+XHJcbiAgICAgICAgICAgIDxpbnB1dCBmb3JtQ29udHJvbE5hbWU9XCJmdWxsTmFtZVwiIHR5cGU9XCJ0ZXh0XCIgLz5cclxuICAgICAgICA8L3Zkci1mb3JtLWZpZWxkPlxyXG4gICAgICAgIDx2ZHItZm9ybS1maWVsZCBbbGFiZWxdPVwiJ2N1c3RvbWVyLmNvbXBhbnknIHwgdHJhbnNsYXRlXCI+XHJcbiAgICAgICAgICAgIDxpbnB1dCBmb3JtQ29udHJvbE5hbWU9XCJjb21wYW55XCIgdHlwZT1cInRleHRcIiAvPlxyXG4gICAgICAgIDwvdmRyLWZvcm0tZmllbGQ+XHJcblxyXG4gICAgICAgIDx2ZHItZm9ybS1maWVsZCBbbGFiZWxdPVwiJ2N1c3RvbWVyLnN0cmVldC1saW5lLTEnIHwgdHJhbnNsYXRlXCI+XHJcbiAgICAgICAgICAgIDxpbnB1dCBmb3JtQ29udHJvbE5hbWU9XCJzdHJlZXRMaW5lMVwiIHR5cGU9XCJ0ZXh0XCIgLz5cclxuICAgICAgICA8L3Zkci1mb3JtLWZpZWxkPlxyXG5cclxuICAgICAgICA8dmRyLWZvcm0tZmllbGQgW2xhYmVsXT1cIidjdXN0b21lci5zdHJlZXQtbGluZS0yJyB8IHRyYW5zbGF0ZVwiPlxyXG4gICAgICAgICAgICA8aW5wdXQgZm9ybUNvbnRyb2xOYW1lPVwic3RyZWV0TGluZTJcIiB0eXBlPVwidGV4dFwiIC8+XHJcbiAgICAgICAgPC92ZHItZm9ybS1maWVsZD5cclxuXHJcbiAgICAgICAgPHZkci1mb3JtLWZpZWxkIFtsYWJlbF09XCInY3VzdG9tZXIuY2l0eScgfCB0cmFuc2xhdGVcIj5cclxuICAgICAgICAgICAgPGlucHV0IGZvcm1Db250cm9sTmFtZT1cImNpdHlcIiB0eXBlPVwidGV4dFwiIC8+XHJcbiAgICAgICAgPC92ZHItZm9ybS1maWVsZD5cclxuXHJcbiAgICAgICAgPHZkci1mb3JtLWZpZWxkIFtsYWJlbF09XCInY3VzdG9tZXIucHJvdmluY2UnIHwgdHJhbnNsYXRlXCI+XHJcbiAgICAgICAgICAgIDxpbnB1dCBmb3JtQ29udHJvbE5hbWU9XCJwcm92aW5jZVwiIHR5cGU9XCJ0ZXh0XCIgLz5cclxuICAgICAgICA8L3Zkci1mb3JtLWZpZWxkPlxyXG5cclxuICAgICAgICA8dmRyLWZvcm0tZmllbGQgW2xhYmVsXT1cIidjdXN0b21lci5wb3N0YWwtY29kZScgfCB0cmFuc2xhdGVcIj5cclxuICAgICAgICAgICAgPGlucHV0IGZvcm1Db250cm9sTmFtZT1cInBvc3RhbENvZGVcIiB0eXBlPVwidGV4dFwiIC8+XHJcbiAgICAgICAgPC92ZHItZm9ybS1maWVsZD5cclxuXHJcbiAgICAgICAgPHZkci1mb3JtLWZpZWxkIFtsYWJlbF09XCInY3VzdG9tZXIuY291bnRyeScgfCB0cmFuc2xhdGVcIj5cclxuICAgICAgICAgICAgPHNlbGVjdCBuYW1lPVwiY291bnRyeUNvZGVcIiBmb3JtQ29udHJvbE5hbWU9XCJjb3VudHJ5Q29kZVwiPlxyXG4gICAgICAgICAgICAgICAgPG9wdGlvbiAqbmdGb3I9XCJsZXQgY291bnRyeSBvZiBhdmFpbGFibGVDb3VudHJpZXNcIiBbdmFsdWVdPVwiY291bnRyeS5jb2RlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAge3sgY291bnRyeS5uYW1lIH19XHJcbiAgICAgICAgICAgICAgICA8L29wdGlvbj5cclxuICAgICAgICAgICAgPC9zZWxlY3Q+XHJcbiAgICAgICAgPC92ZHItZm9ybS1maWVsZD5cclxuICAgICAgICA8dmRyLWZvcm0tZmllbGQgW2xhYmVsXT1cIidjdXN0b21lci5waG9uZS1udW1iZXInIHwgdHJhbnNsYXRlXCI+XHJcbiAgICAgICAgICAgIDxpbnB1dCBmb3JtQ29udHJvbE5hbWU9XCJwaG9uZU51bWJlclwiIHR5cGU9XCJ0ZXh0XCIgLz5cclxuICAgICAgICA8L3Zkci1mb3JtLWZpZWxkPlxyXG4gICAgICAgIDxzZWN0aW9uXHJcbiAgICAgICAgICAgIGZvcm1Hcm91cE5hbWU9XCJjdXN0b21GaWVsZHNcIlxyXG4gICAgICAgICAgICAqbmdJZj1cImZvcm1Hcm91cC5nZXQoJ2N1c3RvbUZpZWxkcycpIGFzIGN1c3RvbUZpZWxkc0dyb3VwXCJcclxuICAgICAgICA+XHJcbiAgICAgICAgICAgIDx2ZHItdGFiYmVkLWN1c3RvbS1maWVsZHNcclxuICAgICAgICAgICAgICAgIGVudGl0eU5hbWU9XCJBZGRyZXNzXCJcclxuICAgICAgICAgICAgICAgIFtjdXN0b21GaWVsZHNdPVwiY3VzdG9tRmllbGRzXCJcclxuICAgICAgICAgICAgICAgIFtjdXN0b21GaWVsZHNGb3JtR3JvdXBdPVwiY3VzdG9tRmllbGRzR3JvdXBcIlxyXG4gICAgICAgICAgICA+PC92ZHItdGFiYmVkLWN1c3RvbS1maWVsZHM+XHJcbiAgICAgICAgPC9zZWN0aW9uPlxyXG4gICAgPC92ZHItY2FyZD5cclxuPC9mb3JtPlxyXG4iXX0=