import { Component, EventEmitter, Input, Output, ViewChild, ViewContainerRef, } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@vendure/admin-ui/core";
export class OrderHistoryEntryHostComponent {
    constructor(historyEntryComponentService) {
        this.historyEntryComponentService = historyEntryComponentService;
        this.expandClick = new EventEmitter();
    }
    ngOnInit() {
        const componentType = this.historyEntryComponentService.getComponent(this.entry.type);
        const componentRef = this.portalRef.createComponent(componentType);
        componentRef.instance.entry = this.entry;
        componentRef.instance.order = this.order;
        this.instance = componentRef.instance;
        this.componentRef = componentRef;
    }
    ngOnDestroy() {
        this.componentRef?.destroy();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: OrderHistoryEntryHostComponent, deps: [{ token: i1.HistoryEntryComponentService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.2", type: OrderHistoryEntryHostComponent, selector: "vdr-order-history-entry-host", inputs: { entry: "entry", order: "order", expanded: "expanded" }, outputs: { expandClick: "expandClick" }, viewQueries: [{ propertyName: "portalRef", first: true, predicate: ["portal"], descendants: true, read: ViewContainerRef, static: true }], exportAs: ["historyEntry"], ngImport: i0, template: `<vdr-timeline-entry
        [displayType]="instance.getDisplayType(entry)"
        [iconShape]="instance.getIconShape && instance.getIconShape(entry)"
        [createdAt]="entry.createdAt"
        [name]="instance.getName && instance.getName(entry)"
        [featured]="instance.isFeatured(entry)"
        [collapsed]="!expanded && !instance.isFeatured(entry)"
        (expandClick)="expandClick.emit()"
    >
        <div #portal></div>
    </vdr-timeline-entry>`, isInline: true, dependencies: [{ kind: "component", type: i1.TimelineEntryComponent, selector: "vdr-timeline-entry", inputs: ["displayType", "createdAt", "name", "featured", "iconShape", "isLast", "collapsed"], outputs: ["expandClick"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: OrderHistoryEntryHostComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'vdr-order-history-entry-host',
                    template: `<vdr-timeline-entry
        [displayType]="instance.getDisplayType(entry)"
        [iconShape]="instance.getIconShape && instance.getIconShape(entry)"
        [createdAt]="entry.createdAt"
        [name]="instance.getName && instance.getName(entry)"
        [featured]="instance.isFeatured(entry)"
        [collapsed]="!expanded && !instance.isFeatured(entry)"
        (expandClick)="expandClick.emit()"
    >
        <div #portal></div>
    </vdr-timeline-entry>`,
                    exportAs: 'historyEntry',
                }]
        }], ctorParameters: function () { return [{ type: i1.HistoryEntryComponentService }]; }, propDecorators: { entry: [{
                type: Input
            }], order: [{
                type: Input
            }], expanded: [{
                type: Input
            }], expandClick: [{
                type: Output
            }], portalRef: [{
                type: ViewChild,
                args: ['portal', { static: true, read: ViewContainerRef }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JkZXItaGlzdG9yeS1lbnRyeS1ob3N0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvb3JkZXIvc3JjL2NvbXBvbmVudHMvb3JkZXItaGlzdG9yeS9vcmRlci1oaXN0b3J5LWVudHJ5LWhvc3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDSCxTQUFTLEVBRVQsWUFBWSxFQUNaLEtBQUssRUFHTCxNQUFNLEVBRU4sU0FBUyxFQUNULGdCQUFnQixHQUNuQixNQUFNLGVBQWUsQ0FBQzs7O0FBdUJ2QixNQUFNLE9BQU8sOEJBQThCO0lBU3ZDLFlBQW9CLDRCQUEwRDtRQUExRCxpQ0FBNEIsR0FBNUIsNEJBQTRCLENBQThCO1FBTHBFLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQVEsQ0FBQztJQUtnQyxDQUFDO0lBRWxGLFFBQVE7UUFDSixNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsNEJBQTRCLENBQUMsWUFBWSxDQUNoRSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FDa0IsQ0FBQztRQUV0QyxNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLGVBQWUsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUNuRSxZQUFZLENBQUMsUUFBUSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3pDLFlBQVksQ0FBQyxRQUFRLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDekMsSUFBSSxDQUFDLFFBQVEsR0FBRyxZQUFZLENBQUMsUUFBUSxDQUFDO1FBQ3RDLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO0lBQ3JDLENBQUM7SUFFRCxXQUFXO1FBQ1AsSUFBSSxDQUFDLFlBQVksRUFBRSxPQUFPLEVBQUUsQ0FBQztJQUNqQyxDQUFDOzhHQXpCUSw4QkFBOEI7a0dBQTlCLDhCQUE4QiwrUEFLSSxnQkFBZ0IsdUVBbEJqRDs7Ozs7Ozs7OzswQkFVWTs7MkZBR2IsOEJBQThCO2tCQWYxQyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSw4QkFBOEI7b0JBQ3hDLFFBQVEsRUFBRTs7Ozs7Ozs7OzswQkFVWTtvQkFDdEIsUUFBUSxFQUFFLGNBQWM7aUJBQzNCO21IQUVZLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxLQUFLO3NCQUFiLEtBQUs7Z0JBQ0csUUFBUTtzQkFBaEIsS0FBSztnQkFDSSxXQUFXO3NCQUFwQixNQUFNO2dCQUN3RCxTQUFTO3NCQUF2RSxTQUFTO3VCQUFDLFFBQVEsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICAgIENvbXBvbmVudCxcclxuICAgIENvbXBvbmVudFJlZixcclxuICAgIEV2ZW50RW1pdHRlcixcclxuICAgIElucHV0LFxyXG4gICAgT25EZXN0cm95LFxyXG4gICAgT25Jbml0LFxyXG4gICAgT3V0cHV0LFxyXG4gICAgVHlwZSxcclxuICAgIFZpZXdDaGlsZCxcclxuICAgIFZpZXdDb250YWluZXJSZWYsXHJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7XHJcbiAgICBIaXN0b3J5RW50cnlDb21wb25lbnRTZXJ2aWNlLFxyXG4gICAgT3JkZXJEZXRhaWxGcmFnbWVudCxcclxuICAgIE9yZGVySGlzdG9yeUVudHJ5Q29tcG9uZW50LFxyXG4gICAgVGltZWxpbmVIaXN0b3J5RW50cnksXHJcbn0gZnJvbSAnQHZlbmR1cmUvYWRtaW4tdWkvY29yZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAndmRyLW9yZGVyLWhpc3RvcnktZW50cnktaG9zdCcsXHJcbiAgICB0ZW1wbGF0ZTogYDx2ZHItdGltZWxpbmUtZW50cnlcclxuICAgICAgICBbZGlzcGxheVR5cGVdPVwiaW5zdGFuY2UuZ2V0RGlzcGxheVR5cGUoZW50cnkpXCJcclxuICAgICAgICBbaWNvblNoYXBlXT1cImluc3RhbmNlLmdldEljb25TaGFwZSAmJiBpbnN0YW5jZS5nZXRJY29uU2hhcGUoZW50cnkpXCJcclxuICAgICAgICBbY3JlYXRlZEF0XT1cImVudHJ5LmNyZWF0ZWRBdFwiXHJcbiAgICAgICAgW25hbWVdPVwiaW5zdGFuY2UuZ2V0TmFtZSAmJiBpbnN0YW5jZS5nZXROYW1lKGVudHJ5KVwiXHJcbiAgICAgICAgW2ZlYXR1cmVkXT1cImluc3RhbmNlLmlzRmVhdHVyZWQoZW50cnkpXCJcclxuICAgICAgICBbY29sbGFwc2VkXT1cIiFleHBhbmRlZCAmJiAhaW5zdGFuY2UuaXNGZWF0dXJlZChlbnRyeSlcIlxyXG4gICAgICAgIChleHBhbmRDbGljayk9XCJleHBhbmRDbGljay5lbWl0KClcIlxyXG4gICAgPlxyXG4gICAgICAgIDxkaXYgI3BvcnRhbD48L2Rpdj5cclxuICAgIDwvdmRyLXRpbWVsaW5lLWVudHJ5PmAsXHJcbiAgICBleHBvcnRBczogJ2hpc3RvcnlFbnRyeScsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBPcmRlckhpc3RvcnlFbnRyeUhvc3RDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgICBASW5wdXQoKSBlbnRyeTogVGltZWxpbmVIaXN0b3J5RW50cnk7XHJcbiAgICBASW5wdXQoKSBvcmRlcjogT3JkZXJEZXRhaWxGcmFnbWVudDtcclxuICAgIEBJbnB1dCgpIGV4cGFuZGVkOiBib29sZWFuO1xyXG4gICAgQE91dHB1dCgpIGV4cGFuZENsaWNrID0gbmV3IEV2ZW50RW1pdHRlcjx2b2lkPigpO1xyXG4gICAgQFZpZXdDaGlsZCgncG9ydGFsJywgeyBzdGF0aWM6IHRydWUsIHJlYWQ6IFZpZXdDb250YWluZXJSZWYgfSkgcG9ydGFsUmVmOiBWaWV3Q29udGFpbmVyUmVmO1xyXG4gICAgaW5zdGFuY2U6IE9yZGVySGlzdG9yeUVudHJ5Q29tcG9uZW50O1xyXG4gICAgcHJpdmF0ZSBjb21wb25lbnRSZWY6IENvbXBvbmVudFJlZjxPcmRlckhpc3RvcnlFbnRyeUNvbXBvbmVudD47XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBoaXN0b3J5RW50cnlDb21wb25lbnRTZXJ2aWNlOiBIaXN0b3J5RW50cnlDb21wb25lbnRTZXJ2aWNlKSB7fVxyXG5cclxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgICAgIGNvbnN0IGNvbXBvbmVudFR5cGUgPSB0aGlzLmhpc3RvcnlFbnRyeUNvbXBvbmVudFNlcnZpY2UuZ2V0Q29tcG9uZW50KFxyXG4gICAgICAgICAgICB0aGlzLmVudHJ5LnR5cGUsXHJcbiAgICAgICAgKSBhcyBUeXBlPE9yZGVySGlzdG9yeUVudHJ5Q29tcG9uZW50PjtcclxuXHJcbiAgICAgICAgY29uc3QgY29tcG9uZW50UmVmID0gdGhpcy5wb3J0YWxSZWYuY3JlYXRlQ29tcG9uZW50KGNvbXBvbmVudFR5cGUpO1xyXG4gICAgICAgIGNvbXBvbmVudFJlZi5pbnN0YW5jZS5lbnRyeSA9IHRoaXMuZW50cnk7XHJcbiAgICAgICAgY29tcG9uZW50UmVmLmluc3RhbmNlLm9yZGVyID0gdGhpcy5vcmRlcjtcclxuICAgICAgICB0aGlzLmluc3RhbmNlID0gY29tcG9uZW50UmVmLmluc3RhbmNlO1xyXG4gICAgICAgIHRoaXMuY29tcG9uZW50UmVmID0gY29tcG9uZW50UmVmO1xyXG4gICAgfVxyXG5cclxuICAgIG5nT25EZXN0cm95KCkge1xyXG4gICAgICAgIHRoaXMuY29tcG9uZW50UmVmPy5kZXN0cm95KCk7XHJcbiAgICB9XHJcbn1cclxuIl19