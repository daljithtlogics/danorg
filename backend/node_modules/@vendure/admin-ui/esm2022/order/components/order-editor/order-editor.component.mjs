import { ChangeDetectionStrategy, Component } from '@angular/core';
import { UntypedFormArray, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';
import { BaseDetailComponent, HistoryEntryType, SortOrder, transformRelationCustomFieldInputs, } from '@vendure/admin-ui/core';
import { assertNever, notNullOrUndefined } from '@vendure/common/lib/shared-utils';
import { simpleDeepClone } from '@vendure/common/lib/simple-deep-clone';
import { EMPTY, of } from 'rxjs';
import { mapTo, shareReplay, switchMap, takeUntil } from 'rxjs/operators';
import { OrderEditResultType, OrderEditsPreviewDialogComponent, } from '../order-edits-preview-dialog/order-edits-preview-dialog.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@vendure/admin-ui/core";
import * as i3 from "../../providers/order-transition.service";
import * as i4 from "@clr/angular";
import * as i5 from "@angular/common";
import * as i6 from "@angular/forms";
import * as i7 from "../line-fulfillment/line-fulfillment.component";
import * as i8 from "../line-refunds/line-refunds.component";
import * as i9 from "../coupon-code-selector/coupon-code-selector.component";
import * as i10 from "@ngx-translate/core";
export class OrderEditorComponent extends BaseDetailComponent {
    constructor(router, route, serverConfigService, changeDetector, dataService, notificationService, modalService, orderTransitionService) {
        super(route, router, serverConfigService, dataService);
        this.changeDetector = changeDetector;
        this.dataService = dataService;
        this.notificationService = notificationService;
        this.modalService = modalService;
        this.orderTransitionService = orderTransitionService;
        this.detailForm = new UntypedFormGroup({});
        this.couponCodesControl = new UntypedFormControl();
        this.modifyOrderInput = {
            dryRun: true,
            orderId: '',
            addItems: [],
            adjustOrderLines: [],
            surcharges: [],
            note: '',
            updateShippingAddress: {},
            updateBillingAddress: {},
        };
        this.note = '';
        this.recalculateShipping = true;
        this.addedVariants = new Map();
    }
    get addedLines() {
        const getSinglePriceValue = (price) => price.__typename === 'SinglePrice' ? price.value : 0;
        return (this.modifyOrderInput.addItems || [])
            .map(row => {
            const variantInfo = this.addedVariants.get(row.productVariantId);
            if (variantInfo) {
                return {
                    ...variantInfo,
                    price: getSinglePriceValue(variantInfo.price),
                    priceWithTax: getSinglePriceValue(variantInfo.priceWithTax),
                    quantity: row.quantity,
                };
            }
        })
            .filter(notNullOrUndefined);
    }
    ngOnInit() {
        this.init();
        this.addressCustomFields = this.getCustomFieldConfig('Address');
        this.modifyOrderInput.orderId = this.route.snapshot.paramMap.get('id');
        this.orderLineCustomFields = this.getCustomFieldConfig('OrderLine');
        this.entity$.pipe(takeUntil(this.destroy$)).subscribe(order => {
            if (order.couponCodes.length) {
                this.couponCodesControl.setValue(order.couponCodes);
            }
            this.surchargeForm = new UntypedFormGroup({
                description: new UntypedFormControl('', Validators.required),
                sku: new UntypedFormControl(''),
                price: new UntypedFormControl(0, Validators.required),
                priceIncludesTax: new UntypedFormControl(true),
                taxRate: new UntypedFormControl(0),
                taxDescription: new UntypedFormControl(''),
            });
            if (!this.shippingAddressForm) {
                this.shippingAddressForm = new UntypedFormGroup({
                    fullName: new UntypedFormControl(order.shippingAddress?.fullName),
                    company: new UntypedFormControl(order.shippingAddress?.company),
                    streetLine1: new UntypedFormControl(order.shippingAddress?.streetLine1),
                    streetLine2: new UntypedFormControl(order.shippingAddress?.streetLine2),
                    city: new UntypedFormControl(order.shippingAddress?.city),
                    province: new UntypedFormControl(order.shippingAddress?.province),
                    postalCode: new UntypedFormControl(order.shippingAddress?.postalCode),
                    countryCode: new UntypedFormControl(order.shippingAddress?.countryCode),
                    phoneNumber: new UntypedFormControl(order.shippingAddress?.phoneNumber),
                });
                this.addAddressCustomFieldsFormGroup(this.shippingAddressForm, order.shippingAddress);
            }
            if (!this.billingAddressForm) {
                this.billingAddressForm = new UntypedFormGroup({
                    fullName: new UntypedFormControl(order.billingAddress?.fullName),
                    company: new UntypedFormControl(order.billingAddress?.company),
                    streetLine1: new UntypedFormControl(order.billingAddress?.streetLine1),
                    streetLine2: new UntypedFormControl(order.billingAddress?.streetLine2),
                    city: new UntypedFormControl(order.billingAddress?.city),
                    province: new UntypedFormControl(order.billingAddress?.province),
                    postalCode: new UntypedFormControl(order.billingAddress?.postalCode),
                    countryCode: new UntypedFormControl(order.billingAddress?.countryCode),
                    phoneNumber: new UntypedFormControl(order.billingAddress?.phoneNumber),
                });
                this.addAddressCustomFieldsFormGroup(this.billingAddressForm, order.billingAddress);
            }
            this.orderLineCustomFieldsFormArray = new UntypedFormArray([]);
            for (const line of order.lines) {
                const formGroup = new UntypedFormGroup({});
                for (const { name } of this.orderLineCustomFields) {
                    formGroup.addControl(name, new UntypedFormControl(line.customFields[name]));
                }
                formGroup.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {
                    let modifyRow = this.modifyOrderInput.adjustOrderLines.find(l => l.orderLineId === line.id);
                    if (!modifyRow) {
                        modifyRow = {
                            orderLineId: line.id,
                            quantity: line.quantity,
                        };
                        this.modifyOrderInput.adjustOrderLines.push(modifyRow);
                    }
                    if (this.orderLineCustomFields.length) {
                        modifyRow.customFields = value;
                    }
                });
                this.orderLineCustomFieldsFormArray.push(formGroup);
            }
        });
        this.addItemCustomFieldsFormArray = new UntypedFormArray([]);
        this.addItemCustomFieldsForm = new UntypedFormGroup({});
        for (const customField of this.orderLineCustomFields) {
            this.addItemCustomFieldsForm.addControl(customField.name, new UntypedFormControl());
        }
        this.availableCountries$ = this.dataService.settings
            .getAvailableCountries()
            .mapSingle(result => result.countries.items)
            .pipe(shareReplay(1));
        this.dataService.order
            .getOrderHistory(this.id, {
            take: 1,
            sort: {
                createdAt: SortOrder.DESC,
            },
            filter: { type: { eq: HistoryEntryType.ORDER_STATE_TRANSITION } },
        })
            .single$.subscribe(({ order }) => {
            this.previousState = order?.history.items[0].data.from;
        });
    }
    ngOnDestroy() {
        this.destroy();
    }
    transitionToPriorState(order) {
        this.orderTransitionService
            .transitionToPreModifyingState(order.id, order.nextStates)
            .subscribe(result => {
            this.router.navigate(['..'], { relativeTo: this.route });
        });
    }
    canPreviewChanges() {
        const { addItems, adjustOrderLines, surcharges } = this.modifyOrderInput;
        return (!!addItems?.length ||
            !!surcharges?.length ||
            !!adjustOrderLines?.length ||
            (this.shippingAddressForm.dirty && this.shippingAddressForm.valid) ||
            (this.billingAddressForm.dirty && this.billingAddressForm.valid) ||
            this.couponCodesControl.dirty);
    }
    isLineModified(line) {
        return !!this.modifyOrderInput.adjustOrderLines?.find(l => l.orderLineId === line.id && l.quantity !== line.quantity);
    }
    updateLineQuantity(line, quantity) {
        const { adjustOrderLines } = this.modifyOrderInput;
        let row = adjustOrderLines?.find(l => l.orderLineId === line.id);
        if (row && +quantity === line.quantity) {
            // Remove the modification if the quantity is the same as
            // the original order
            adjustOrderLines?.splice(adjustOrderLines?.indexOf(row), 1);
        }
        if (!row) {
            row = { orderLineId: line.id, quantity: +quantity };
            adjustOrderLines?.push(row);
        }
        row.quantity = +quantity;
    }
    updateAddedItemQuantity(item, quantity) {
        const row = this.modifyOrderInput.addItems?.find(l => l.productVariantId === item.productVariantId);
        if (row) {
            row.quantity = +quantity;
        }
    }
    trackByProductVariantId(index, item) {
        return item.productVariantId;
    }
    getSelectedItemPrice(result) {
        switch (result?.priceWithTax.__typename) {
            case 'SinglePrice':
                return result.priceWithTax.value;
            default:
                return 0;
        }
    }
    addItemToOrder(result) {
        if (!result) {
            return;
        }
        const customFields = this.orderLineCustomFields.length
            ? this.addItemCustomFieldsForm.value
            : undefined;
        let row = this.modifyOrderInput.addItems?.find(l => this.isMatchingAddItemRow(l, result, customFields));
        if (!row) {
            row = { productVariantId: result.productVariantId, quantity: 1 };
            if (customFields) {
                row.customFields = customFields;
            }
            this.modifyOrderInput.addItems?.push(row);
        }
        else {
            row.quantity++;
        }
        if (customFields) {
            const formGroup = new UntypedFormGroup({});
            for (const [key, value] of Object.entries(customFields)) {
                formGroup.addControl(key, new UntypedFormControl(value));
            }
            this.addItemCustomFieldsFormArray.push(formGroup);
            formGroup.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {
                if (row) {
                    row.customFields = value;
                }
            });
        }
        this.addItemCustomFieldsForm.reset({});
        this.addItemSelectedVariant = undefined;
        this.addedVariants.set(result.productVariantId, result);
    }
    isMatchingAddItemRow(row, result, customFields) {
        return (row.productVariantId === result.productVariantId &&
            JSON.stringify(row.customFields) === JSON.stringify(customFields));
    }
    removeAddedItem(index) {
        this.modifyOrderInput.addItems.splice(index, 1);
        if (-1 < index) {
            this.addItemCustomFieldsFormArray.removeAt(index);
        }
    }
    getSurchargePrices(surcharge) {
        const priceWithTax = surcharge.priceIncludesTax
            ? surcharge.price
            : Math.round(surcharge.price * ((100 + (surcharge.taxRate || 0)) / 100));
        const price = surcharge.priceIncludesTax
            ? Math.round(surcharge.price / ((100 + (surcharge.taxRate || 0)) / 100))
            : surcharge.price;
        return {
            price,
            priceWithTax,
        };
    }
    addSurcharge(value) {
        this.modifyOrderInput.surcharges?.push(value);
        this.surchargeForm.reset({
            price: 0,
            priceIncludesTax: true,
            taxRate: 0,
        });
    }
    removeSurcharge(index) {
        this.modifyOrderInput.surcharges?.splice(index, 1);
    }
    previewAndModify(order) {
        const modifyOrderInput = {
            ...this.modifyOrderInput,
            adjustOrderLines: this.modifyOrderInput.adjustOrderLines.map(line => transformRelationCustomFieldInputs(simpleDeepClone(line), this.orderLineCustomFields)),
        };
        const input = {
            ...modifyOrderInput,
            ...(this.billingAddressForm.dirty ? { updateBillingAddress: this.billingAddressForm.value } : {}),
            ...(this.shippingAddressForm.dirty
                ? { updateShippingAddress: this.shippingAddressForm.value }
                : {}),
            dryRun: true,
            couponCodes: this.couponCodesControl.dirty ? this.couponCodesControl.value : undefined,
            note: this.note ?? '',
            options: {
                recalculateShipping: this.recalculateShipping,
            },
        };
        const originalTotalWithTax = order.totalWithTax;
        this.dataService.order
            .modifyOrder(input)
            .pipe(switchMap(({ modifyOrder }) => {
            switch (modifyOrder.__typename) {
                case 'Order':
                    return this.modalService.fromComponent(OrderEditsPreviewDialogComponent, {
                        size: 'xl',
                        closable: false,
                        locals: {
                            originalTotalWithTax,
                            order: modifyOrder,
                            orderLineCustomFields: this.orderLineCustomFields,
                            modifyOrderInput: input,
                        },
                    });
                case 'InsufficientStockError':
                case 'NegativeQuantityError':
                case 'NoChangesSpecifiedError':
                case 'OrderLimitError':
                case 'OrderModificationStateError':
                case 'PaymentMethodMissingError':
                case 'RefundPaymentIdMissingError':
                case 'CouponCodeLimitError':
                case 'CouponCodeExpiredError':
                case 'CouponCodeInvalidError': {
                    this.notificationService.error(modifyOrder.message);
                    return of(false);
                }
                case null:
                case undefined:
                    return of(false);
                default:
                    assertNever(modifyOrder);
            }
        }), switchMap(result => {
            if (!result || result.result === OrderEditResultType.Cancel) {
                // re-fetch so that the preview values get overwritten in the cache.
                return this.dataService.order.getOrder(this.id).mapSingle(() => false);
            }
            else {
                // Do the modification
                const wetRunInput = {
                    ...input,
                    dryRun: false,
                };
                if (result.result === OrderEditResultType.Refund) {
                    wetRunInput.refund = {
                        paymentId: result.refundPaymentId,
                        reason: result.refundNote,
                    };
                }
                return this.dataService.order.modifyOrder(wetRunInput).pipe(switchMap(({ modifyOrder }) => {
                    if (modifyOrder.__typename === 'Order') {
                        const priceDelta = modifyOrder.totalWithTax - originalTotalWithTax;
                        const nextState = 0 < priceDelta ? 'ArrangingAdditionalPayment' : this.previousState;
                        return this.dataService.order
                            .transitionToState(order.id, nextState)
                            .pipe(mapTo(true));
                    }
                    else {
                        this.notificationService.error(modifyOrder.message);
                        return EMPTY;
                    }
                }));
            }
        }))
            .subscribe(result => {
            if (result) {
                this.router.navigate(['../'], { relativeTo: this.route });
            }
        });
    }
    addAddressCustomFieldsFormGroup(parentFormGroup, address) {
        if (address && this.addressCustomFields.length) {
            const addressCustomFieldsFormGroup = new UntypedFormGroup({});
            for (const customFieldDef of this.addressCustomFields) {
                const name = customFieldDef.name;
                const value = address.customFields?.[name];
                addressCustomFieldsFormGroup.addControl(name, new UntypedFormControl(value));
            }
            parentFormGroup.addControl('customFields', addressCustomFieldsFormGroup);
        }
    }
    setFormValues(entity, languageCode) {
        /* not used */
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: OrderEditorComponent, deps: [{ token: i1.Router }, { token: i1.ActivatedRoute }, { token: i2.ServerConfigService }, { token: i0.ChangeDetectorRef }, { token: i2.DataService }, { token: i2.NotificationService }, { token: i2.ModalService }, { token: i3.OrderTransitionService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.2", type: OrderEditorComponent, selector: "vdr-order-editor", usesInheritance: true, ngImport: i0, template: "<vdr-page-block>\r\n    <vdr-action-bar *ngIf=\"entity$ | async as order\">\r\n        <vdr-ab-left>\r\n            <div class=\"flex clr-align-items-center\">\r\n                <vdr-order-state-label [state]=\"order.state\"></vdr-order-state-label>\r\n            </div>\r\n        </vdr-ab-left>\r\n\r\n        <vdr-ab-right>\r\n            <button class=\"btn btn-secondary\" (click)=\"transitionToPriorState(order)\">\r\n                {{ 'order.cancel-modification' | translate }}\r\n            </button>\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n\r\n<vdr-page-block>\r\n    <div *ngIf=\"entity$ | async as order\">\r\n        <div class=\"clr-row\">\r\n            <div class=\"clr-col-lg-8\">\r\n                <table class=\"order-table table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>{{ 'order.product-name' | translate }}</th>\r\n                            <th>{{ 'order.product-sku' | translate }}</th>\r\n                            <th>{{ 'order.unit-price' | translate }}</th>\r\n                            <th>{{ 'order.quantity' | translate }}</th>\r\n                            <th *ngIf=\"orderLineCustomFields.length\">\r\n                                {{ 'common.custom-fields' | translate }}\r\n                            </th>\r\n                            <th>{{ 'order.total' | translate }}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr\r\n                            *ngFor=\"let line of order.lines; let i = index\"\r\n                            class=\"order-line\"\r\n                            [class.is-cancelled]=\"line.quantity === 0\"\r\n                            [class.modified]=\"isLineModified(line)\"\r\n                        >\r\n                            <td class=\"align-middle thumb\">\r\n                                <img\r\n                                    *ngIf=\"line.featuredAsset\"\r\n                                    [src]=\"line.featuredAsset | assetPreview : 'tiny'\"\r\n                                />\r\n                            </td>\r\n                            <td class=\"align-middle name\">{{ line.productVariant.name }}</td>\r\n                            <td class=\"align-middle sku\">{{ line.productVariant.sku }}</td>\r\n                            <td class=\"align-middle unit-price\">\r\n                                {{ line.unitPriceWithTax | localeCurrency : order.currencyCode }}\r\n                                <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                                    {{ line.unitPrice | localeCurrency : order.currencyCode }}\r\n                                </div>\r\n                            </td>\r\n                            <td class=\"align-middle quantity\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    min=\"0\"\r\n                                    [value]=\"line.quantity\"\r\n                                    (input)=\"updateLineQuantity(line, $event.target.value)\"\r\n                                />\r\n                                <vdr-line-refunds\r\n                                    [line]=\"line\"\r\n                                    [payments]=\"order.payments\"\r\n                                ></vdr-line-refunds>\r\n                                <vdr-line-fulfillment\r\n                                    [line]=\"line\"\r\n                                    [allOrderFulfillments]=\"order.fulfillments\"\r\n                                    [orderState]=\"order.state\"\r\n                                ></vdr-line-fulfillment>\r\n                            </td>\r\n                            <td\r\n                                *ngIf=\"orderLineCustomFields.length\"\r\n                                class=\"order-line-custom-field align-middle\"\r\n                            >\r\n                                <vdr-tabbed-custom-fields\r\n                                    entityName=\"OrderLine\"\r\n                                    [customFields]=\"orderLineCustomFields\"\r\n                                    [customFieldsFormGroup]=\"orderLineCustomFieldsFormArray.get([i])\"\r\n                                    [compact]=\"true\"\r\n                                ></vdr-tabbed-custom-fields>\r\n                            </td>\r\n                            <td class=\"align-middle total\">\r\n                                {{ line.linePriceWithTax | localeCurrency : order.currencyCode }}\r\n                                <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                                    {{ line.linePrice | localeCurrency : order.currencyCode }}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr\r\n                            *ngFor=\"\r\n                                let addedLine of addedLines;\r\n                                trackBy: trackByProductVariantId;\r\n                                let i = index\r\n                            \"\r\n                            class=\"modified\"\r\n                        >\r\n                            <td class=\"align-middle thumb\">\r\n                                <img\r\n                                    *ngIf=\"addedLine.productAsset\"\r\n                                    [src]=\"addedLine.productAsset | assetPreview : 'tiny'\"\r\n                                />\r\n                            </td>\r\n                            <td class=\"align-middle name\">{{ addedLine.productVariantName }}</td>\r\n                            <td class=\"align-middle sku\">{{ addedLine.sku }}</td>\r\n                            <td class=\"align-middle unit-price\">\r\n                                {{ addedLine.priceWithTax | localeCurrency : order.currencyCode }}\r\n                                <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                                    {{ addedLine.price | localeCurrency : order.currencyCode }}\r\n                                </div>\r\n                            </td>\r\n                            <td class=\"align-middle quantity\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    min=\"0\"\r\n                                    [value]=\"addedLine.quantity\"\r\n                                    (input)=\"updateAddedItemQuantity(addedLine, $event.target.value)\"\r\n                                />\r\n                                <button class=\"icon-button\" (click)=\"removeAddedItem(i)\">\r\n                                    <clr-icon shape=\"trash\"></clr-icon>\r\n                                </button>\r\n                            </td>\r\n                            <td\r\n                                *ngIf=\"orderLineCustomFields.length\"\r\n                                class=\"order-line-custom-field align-middle\"\r\n                            >\r\n                                <ng-container *ngFor=\"let customField of orderLineCustomFields\">\r\n                                    <vdr-custom-field-control\r\n                                        [customField]=\"customField\"\r\n                                        [customFieldsFormGroup]=\"addItemCustomFieldsFormArray.get([i])\"\r\n                                        entityName=\"OrderLine\"\r\n                                        [compact]=\"true\"\r\n                                    ></vdr-custom-field-control>\r\n                                </ng-container>\r\n                            </td>\r\n                            <td class=\"align-middle total\">\r\n                                {{\r\n                                    (addedLine.priceWithTax * addedLine.quantity) / 100\r\n                                        | currency : order.currencyCode\r\n                                }}\r\n                                <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                                    {{\r\n                                        (addedLine.price * addedLine.quantity) / 100\r\n                                            | currency : order.currencyCode\r\n                                    }}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"surcharge\" *ngFor=\"let surcharge of order.surcharges\">\r\n                            <td class=\"align-middle name left\" colspan=\"2\">{{ surcharge.description }}</td>\r\n                            <td class=\"align-middle sku\">{{ surcharge.sku }}</td>\r\n                            <td class=\"align-middle\"></td>\r\n                            <td></td>\r\n                            <td *ngIf=\"orderLineCustomFields.length\"></td>\r\n                            <td class=\"align-middle total\">\r\n                                {{ surcharge.priceWithTax | localeCurrency : order.currencyCode }}\r\n                                <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                                    {{ surcharge.price | localeCurrency : order.currencyCode }}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr\r\n                            class=\"surcharge modified\"\r\n                            *ngFor=\"let surcharge of modifyOrderInput.surcharges; let i = index\"\r\n                        >\r\n                            <td class=\"align-middle name left\" colspan=\"2\">\r\n                                {{ surcharge.description }}\r\n                                <button class=\"icon-button\" (click)=\"removeSurcharge(i)\">\r\n                                    <clr-icon shape=\"trash\"></clr-icon>\r\n                                </button>\r\n                            </td>\r\n                            <td class=\"align-middle sku\">{{ surcharge.sku }}</td>\r\n                            <td class=\"align-middle\"></td>\r\n                            <td></td>\r\n                            <td *ngIf=\"orderLineCustomFields.length\"></td>\r\n                            <td class=\"align-middle total\">\r\n                                <ng-container *ngIf=\"getSurchargePrices(surcharge) as surchargePrice\">\r\n                                    {{ surchargePrice.priceWithTax | localeCurrency : order.currencyCode }}\r\n                                    <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                                        {{ surchargePrice.price | localeCurrency : order.currencyCode }}\r\n                                    </div>\r\n                                </ng-container>\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"shipping\">\r\n                            <td class=\"left clr-align-middle\">{{ 'order.shipping' | translate }}</td>\r\n                            <td class=\"clr-align-middle\">\r\n                                {{ order.shippingLines[0]?.shippingMethod?.name }}\r\n                            </td>\r\n                            <td colspan=\"3\"></td>\r\n                            <td *ngIf=\"orderLineCustomFields.length\"></td>\r\n                            <td class=\"clr-align-middle\">\r\n                                {{ order.shippingWithTax | localeCurrency : order.currencyCode }}\r\n                                <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                                    {{ order.shipping | localeCurrency : order.currencyCode }}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <h4 class=\"mb-2\">{{ 'order.modifications' | translate }}</h4>\r\n                <clr-accordion>\r\n                    <clr-accordion-panel>\r\n                        <clr-accordion-title>{{ 'order.add-item-to-order' | translate }}</clr-accordion-title>\r\n                        <clr-accordion-content *clrIfExpanded>\r\n                            <vdr-product-variant-selector\r\n                                class=\"mb-4\"\r\n                                (productSelected)=\"addItemSelectedVariant = $event\"\r\n                            >\r\n                            </vdr-product-variant-selector>\r\n                            <div *ngIf=\"addItemSelectedVariant\" class=\"flex mb-4\">\r\n                                <img\r\n                                    *ngIf=\"addItemSelectedVariant.productAsset as asset\"\r\n                                    [src]=\"asset | assetPreview : 'tiny'\"\r\n                                    class=\"mr-4 add-item-thumb\"\r\n                                />\r\n                                <div>\r\n                                    <strong class=\"mr-4\">{{\r\n                                        addItemSelectedVariant.productVariantName\r\n                                    }}</strong>\r\n                                    <small>{{ addItemSelectedVariant.sku }}</small>\r\n                                    <div>\r\n                                        {{\r\n                                            getSelectedItemPrice(addItemSelectedVariant)\r\n                                                | localeCurrency : order.currencyCode\r\n                                        }}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <ng-container *ngFor=\"let customField of orderLineCustomFields\">\r\n                                <vdr-custom-field-control\r\n                                    [readonly]=\"!addItemSelectedVariant\"\r\n                                    [customField]=\"customField\"\r\n                                    [customFieldsFormGroup]=\"addItemCustomFieldsForm\"\r\n                                    entityName=\"OrderLine\"\r\n                                    [compact]=\"true\"\r\n                                ></vdr-custom-field-control>\r\n                            </ng-container>\r\n                            <button\r\n                                class=\"btn btn-secondary\"\r\n                                [disabled]=\"!addItemSelectedVariant || addItemCustomFieldsForm.invalid\"\r\n                                (click)=\"addItemToOrder(addItemSelectedVariant)\"\r\n                            >\r\n                                {{ 'order.add-item-to-order' | translate }}\r\n                            </button>\r\n                        </clr-accordion-content>\r\n                    </clr-accordion-panel>\r\n                    <clr-accordion-panel>\r\n                        <clr-accordion-title>{{ 'order.set-coupon-codes' | translate }}</clr-accordion-title>\r\n                        <clr-accordion-content *clrIfExpanded>\r\n                            <vdr-coupon-code-selector\r\n                                [control]=\"couponCodesControl\"\r\n                            ></vdr-coupon-code-selector>\r\n                        </clr-accordion-content>\r\n                    </clr-accordion-panel>\r\n\r\n                    <clr-accordion-panel>\r\n                        <clr-accordion-title>{{ 'order.add-surcharge' | translate }}</clr-accordion-title>\r\n                        <clr-accordion-content *clrIfExpanded>\r\n                            <form [formGroup]=\"surchargeForm\" (submit)=\"addSurcharge(surchargeForm.value)\">\r\n                                <vdr-form-field [label]=\"'common.description' | translate\" for=\"description\"\r\n                                    ><input id=\"description\" type=\"text\" formControlName=\"description\"\r\n                                /></vdr-form-field>\r\n                                <vdr-form-field [label]=\"'order.product-sku' | translate\" for=\"sku\"\r\n                                    ><input id=\"sku\" type=\"text\" formControlName=\"sku\"\r\n                                /></vdr-form-field>\r\n                                <vdr-form-field [label]=\"'common.price' | translate\" for=\"price\">\r\n                                    <vdr-currency-input\r\n                                        [currencyCode]=\"order.currencyCode\"\r\n                                        id=\"price\"\r\n                                        formControlName=\"price\"\r\n                                    ></vdr-currency-input>\r\n                                </vdr-form-field>\r\n                                <vdr-form-field\r\n                                    [label]=\"\r\n                                        'catalog.price-includes-tax-at'\r\n                                            | translate : { rate: surchargeForm.get('taxRate')?.value }\r\n                                    \"\r\n                                    for=\"priceIncludesTax\"\r\n                                    ><input\r\n                                        id=\"priceIncludesTax\"\r\n                                        type=\"checkbox\"\r\n                                        clrCheckbox\r\n                                        formControlName=\"priceIncludesTax\"\r\n                                /></vdr-form-field>\r\n                                <vdr-form-field [label]=\"'order.tax-rate' | translate\" for=\"taxRate\">\r\n                                    <vdr-affixed-input suffix=\"%\"\r\n                                        ><input\r\n                                            id=\"taxRate\"\r\n                                            type=\"number\"\r\n                                            min=\"0\"\r\n                                            max=\"100\"\r\n                                            formControlName=\"taxRate\"\r\n                                    /></vdr-affixed-input>\r\n                                </vdr-form-field>\r\n                                <vdr-form-field\r\n                                    [label]=\"'order.tax-description' | translate\"\r\n                                    for=\"taxDescription\"\r\n                                    ><input id=\"taxDescription\" type=\"text\" formControlName=\"taxDescription\"\r\n                                /></vdr-form-field>\r\n                                <button\r\n                                    class=\"btn btn-secondary\"\r\n                                    [disabled]=\"\r\n                                        surchargeForm.invalid ||\r\n                                        surchargeForm.pristine ||\r\n                                        surchargeForm.get('price')?.value === 0\r\n                                    \"\r\n                                >\r\n                                    {{ 'order.add-surcharge' | translate }}\r\n                                </button>\r\n                            </form>\r\n                        </clr-accordion-content>\r\n                    </clr-accordion-panel>\r\n                    <clr-accordion-panel>\r\n                        <clr-accordion-title>{{\r\n                            'order.edit-shipping-address' | translate\r\n                        }}</clr-accordion-title>\r\n                        <clr-accordion-content *clrIfExpanded>\r\n                            <vdr-address-form\r\n                                [formGroup]=\"shippingAddressForm\"\r\n                                [availableCountries]=\"availableCountries$ | async\"\r\n                                [customFields]=\"addressCustomFields\"\r\n                            ></vdr-address-form>\r\n                        </clr-accordion-content>\r\n                    </clr-accordion-panel>\r\n                    <clr-accordion-panel>\r\n                        <clr-accordion-title>{{\r\n                            'order.edit-billing-address' | translate\r\n                        }}</clr-accordion-title>\r\n                        <clr-accordion-content *clrIfExpanded>\r\n                            <vdr-address-form\r\n                                [formGroup]=\"billingAddressForm\"\r\n                                [availableCountries]=\"availableCountries$ | async\"\r\n                                [customFields]=\"addressCustomFields\"\r\n                            ></vdr-address-form>\r\n                        </clr-accordion-content>\r\n                    </clr-accordion-panel>\r\n                </clr-accordion>\r\n            </div>\r\n            <div class=\"clr-col-lg-4 order-cards\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-header\">\r\n                        {{ 'order.modification-summary' | translate }}\r\n                    </div>\r\n                    <div class=\"card-block\">\r\n                        <ul>\r\n                            <li *ngIf=\"modifyOrderInput.addItems?.length\">\r\n                                {{\r\n                                    'order.modification-adding-items'\r\n                                        | translate : { count: modifyOrderInput.addItems?.length }\r\n                                }}\r\n                            </li>\r\n                            <li *ngIf=\"modifyOrderInput.adjustOrderLines?.length\">\r\n                                {{\r\n                                    'order.modification-adjusting-lines'\r\n                                        | translate : { count: modifyOrderInput.adjustOrderLines?.length }\r\n                                }}\r\n                            </li>\r\n                            <li *ngIf=\"modifyOrderInput.surcharges?.length\">\r\n                                {{\r\n                                    'order.modification-adding-surcharges'\r\n                                        | translate : { count: modifyOrderInput.surcharges?.length }\r\n                                }}\r\n                            </li>\r\n                            <li *ngIf=\"shippingAddressForm.dirty\">\r\n                                {{ 'order.modification-updating-shipping-address' | translate }}\r\n                            </li>\r\n                            <li *ngIf=\"billingAddressForm.dirty\">\r\n                                {{ 'order.modification-updating-billing-address' | translate }}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"card-block\">\r\n                        <label class=\"clr-control-label\">{{ 'order.note' | translate }}</label>\r\n                        <textarea [(ngModel)]=\"note\" name=\"note\" clrTextarea required></textarea>\r\n                        <clr-checkbox-wrapper class=\"\">\r\n                            <input type=\"checkbox\" clrCheckbox [(ngModel)]=\"recalculateShipping\" />\r\n                            <label>{{ 'order.modification-recalculate-shipping' | translate }}</label>\r\n                        </clr-checkbox-wrapper>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <button\r\n                            class=\"btn btn-primary\"\r\n                            [disabled]=\"!canPreviewChanges()\"\r\n                            (click)=\"previewAndModify(order)\"\r\n                        >\r\n                            {{ 'order.preview-changes' | translate }}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <vdr-page-block> </vdr-page-block\r\n></vdr-page-block>\r\n", styles: [".order-table .is-cancelled td{text-decoration:line-through;background-color:var(--color-component-bg-200)}.order-table .sub-total td{border-top:1px dashed var(--color-component-border-200)}.order-table .total td{font-weight:700;border-top:1px dashed var(--color-component-border-200)}.order-table td.custom-fields-row{border-top-style:dashed;border-top-color:var(--color-grey-200)}.order-table img{border-radius:var(--border-radius-img)}.order-table .order-line-custom-fields{display:flex;flex-wrap:wrap}.order-table .order-line-custom-fields .custom-field{text-align:start;max-width:200px;overflow:hidden;text-overflow:ellipsis;margin-bottom:6px;margin-inline-end:18px}.order-table .draft-qty{max-width:48px}.order-table .order-line-custom-field{background-color:var(--color-component-bg-100)}.order-table .order-line-custom-field .custom-field-ellipsis{color:var(--color-text-300)}.order-table .net-price{font-size:11px;color:var(--color-text-300);line-height:14px}.order-table .promotions-label{-webkit-text-decoration:underline dotted var(--color-text-200);text-decoration:underline dotted var(--color-text-200);font-size:11px;margin-top:6px;cursor:pointer;text-transform:lowercase}.order-table .thumb img{width:50px;height:50px}.order-table .shipping-method-name{font-size:var(--font-size-xs);margin-inline-end:2px}.order-table .order-placed-quantity{text-decoration:line-through;color:var(--color-text-300);margin-inline-end:2px}.order-table tr.modified td{background-color:var(--color-warning-100)}.order-table .order-line-custom-field{text-align:start}.add-item-thumb{max-width:50px}\n"], dependencies: [{ kind: "directive", type: i4.ClrDatagridItemsTrackBy, selector: "[ngForTrackBy]", inputs: ["ngForTrackBy"] }, { kind: "directive", type: i4.ÇlrDatagridDetailRegisterer, selector: "[clrIfExpanded]" }, { kind: "directive", type: i4.ClrIconCustomTag, selector: "clr-icon" }, { kind: "directive", type: i4.ClrIfExpanded, selector: "[clrIfExpanded]", inputs: ["clrIfExpanded"], outputs: ["clrIfExpandedChange"] }, { kind: "directive", type: i4.ClrLabel, selector: "label", inputs: ["for"] }, { kind: "directive", type: i4.ClrCheckbox, selector: "[clrCheckbox],[clrToggle]" }, { kind: "component", type: i4.ClrCheckboxWrapper, selector: "clr-checkbox-wrapper,clr-toggle-wrapper" }, { kind: "directive", type: i4.ClrTextarea, selector: "[clrTextarea]" }, { kind: "component", type: i4.ClrAccordion, selector: "clr-accordion", inputs: ["clrAccordionMultiPanel"] }, { kind: "component", type: i4.ClrAccordionPanel, selector: "clr-accordion-panel", inputs: ["clrAccordionPanelDisabled", "clrAccordionPanelOpen"], outputs: ["clrAccordionPanelOpenChange"] }, { kind: "component", type: i4.ClrAccordionTitle, selector: "clr-accordion-title, clr-step-title" }, { kind: "component", type: i4.ClrAccordionContent, selector: "clr-accordion-content, clr-step-content" }, { kind: "directive", type: i4.ÇlrAccordionOompaLoompa, selector: "clr-accordion-panel" }, { kind: "directive", type: i4.ÇlrAccordionWillyWonka, selector: "clr-accordion" }, { kind: "directive", type: i5.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i6.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i6.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i6.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { kind: "directive", type: i6.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i6.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i6.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i6.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { kind: "directive", type: i6.MinValidator, selector: "input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]", inputs: ["min"] }, { kind: "directive", type: i6.MaxValidator, selector: "input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]", inputs: ["max"] }, { kind: "directive", type: i6.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i6.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i6.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "component", type: i2.ActionBarComponent, selector: "vdr-action-bar" }, { kind: "component", type: i2.ActionBarLeftComponent, selector: "vdr-ab-left", inputs: ["grow"] }, { kind: "component", type: i2.ActionBarRightComponent, selector: "vdr-ab-right", inputs: ["grow"] }, { kind: "component", type: i2.AffixedInputComponent, selector: "vdr-affixed-input", inputs: ["prefix", "suffix"] }, { kind: "component", type: i2.CurrencyInputComponent, selector: "vdr-currency-input", inputs: ["disabled", "readonly", "value", "currencyCode"], outputs: ["valueChange"] }, { kind: "component", type: i2.CustomFieldControlComponent, selector: "vdr-custom-field-control", inputs: ["entityName", "customFieldsFormGroup", "customField", "compact", "showLabel", "readonly"] }, { kind: "component", type: i2.FormFieldComponent, selector: "vdr-form-field", inputs: ["label", "for", "tooltip", "errors", "readOnlyToggle"] }, { kind: "directive", type: i2.FormFieldControlDirective, selector: "input, textarea, select" }, { kind: "component", type: i2.OrderStateLabelComponent, selector: "vdr-order-state-label", inputs: ["state"] }, { kind: "component", type: i2.ProductVariantSelectorComponent, selector: "vdr-product-variant-selector", outputs: ["productSelected"] }, { kind: "component", type: i2.AddressFormComponent, selector: "vdr-address-form", inputs: ["customFields", "formGroup", "availableCountries"] }, { kind: "component", type: i2.TabbedCustomFieldsComponent, selector: "vdr-tabbed-custom-fields", inputs: ["entityName", "customFields", "customFieldsFormGroup", "readonly", "compact", "showLabel"] }, { kind: "component", type: i2.PageBlockComponent, selector: "vdr-page-block" }, { kind: "component", type: i7.LineFulfillmentComponent, selector: "vdr-line-fulfillment", inputs: ["line", "allOrderFulfillments", "orderState"] }, { kind: "component", type: i8.LineRefundsComponent, selector: "vdr-line-refunds", inputs: ["line", "payments"] }, { kind: "component", type: i9.CouponCodeSelectorComponent, selector: "vdr-coupon-code-selector", inputs: ["couponCodes", "control"], outputs: ["addCouponCode", "removeCouponCode"] }, { kind: "pipe", type: i5.AsyncPipe, name: "async" }, { kind: "pipe", type: i5.CurrencyPipe, name: "currency" }, { kind: "pipe", type: i10.TranslatePipe, name: "translate" }, { kind: "pipe", type: i2.AssetPreviewPipe, name: "assetPreview" }, { kind: "pipe", type: i2.LocaleCurrencyPipe, name: "localeCurrency" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: OrderEditorComponent, decorators: [{
            type: Component,
            args: [{ selector: 'vdr-order-editor', changeDetection: ChangeDetectionStrategy.OnPush, template: "<vdr-page-block>\r\n    <vdr-action-bar *ngIf=\"entity$ | async as order\">\r\n        <vdr-ab-left>\r\n            <div class=\"flex clr-align-items-center\">\r\n                <vdr-order-state-label [state]=\"order.state\"></vdr-order-state-label>\r\n            </div>\r\n        </vdr-ab-left>\r\n\r\n        <vdr-ab-right>\r\n            <button class=\"btn btn-secondary\" (click)=\"transitionToPriorState(order)\">\r\n                {{ 'order.cancel-modification' | translate }}\r\n            </button>\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n\r\n<vdr-page-block>\r\n    <div *ngIf=\"entity$ | async as order\">\r\n        <div class=\"clr-row\">\r\n            <div class=\"clr-col-lg-8\">\r\n                <table class=\"order-table table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>{{ 'order.product-name' | translate }}</th>\r\n                            <th>{{ 'order.product-sku' | translate }}</th>\r\n                            <th>{{ 'order.unit-price' | translate }}</th>\r\n                            <th>{{ 'order.quantity' | translate }}</th>\r\n                            <th *ngIf=\"orderLineCustomFields.length\">\r\n                                {{ 'common.custom-fields' | translate }}\r\n                            </th>\r\n                            <th>{{ 'order.total' | translate }}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr\r\n                            *ngFor=\"let line of order.lines; let i = index\"\r\n                            class=\"order-line\"\r\n                            [class.is-cancelled]=\"line.quantity === 0\"\r\n                            [class.modified]=\"isLineModified(line)\"\r\n                        >\r\n                            <td class=\"align-middle thumb\">\r\n                                <img\r\n                                    *ngIf=\"line.featuredAsset\"\r\n                                    [src]=\"line.featuredAsset | assetPreview : 'tiny'\"\r\n                                />\r\n                            </td>\r\n                            <td class=\"align-middle name\">{{ line.productVariant.name }}</td>\r\n                            <td class=\"align-middle sku\">{{ line.productVariant.sku }}</td>\r\n                            <td class=\"align-middle unit-price\">\r\n                                {{ line.unitPriceWithTax | localeCurrency : order.currencyCode }}\r\n                                <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                                    {{ line.unitPrice | localeCurrency : order.currencyCode }}\r\n                                </div>\r\n                            </td>\r\n                            <td class=\"align-middle quantity\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    min=\"0\"\r\n                                    [value]=\"line.quantity\"\r\n                                    (input)=\"updateLineQuantity(line, $event.target.value)\"\r\n                                />\r\n                                <vdr-line-refunds\r\n                                    [line]=\"line\"\r\n                                    [payments]=\"order.payments\"\r\n                                ></vdr-line-refunds>\r\n                                <vdr-line-fulfillment\r\n                                    [line]=\"line\"\r\n                                    [allOrderFulfillments]=\"order.fulfillments\"\r\n                                    [orderState]=\"order.state\"\r\n                                ></vdr-line-fulfillment>\r\n                            </td>\r\n                            <td\r\n                                *ngIf=\"orderLineCustomFields.length\"\r\n                                class=\"order-line-custom-field align-middle\"\r\n                            >\r\n                                <vdr-tabbed-custom-fields\r\n                                    entityName=\"OrderLine\"\r\n                                    [customFields]=\"orderLineCustomFields\"\r\n                                    [customFieldsFormGroup]=\"orderLineCustomFieldsFormArray.get([i])\"\r\n                                    [compact]=\"true\"\r\n                                ></vdr-tabbed-custom-fields>\r\n                            </td>\r\n                            <td class=\"align-middle total\">\r\n                                {{ line.linePriceWithTax | localeCurrency : order.currencyCode }}\r\n                                <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                                    {{ line.linePrice | localeCurrency : order.currencyCode }}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr\r\n                            *ngFor=\"\r\n                                let addedLine of addedLines;\r\n                                trackBy: trackByProductVariantId;\r\n                                let i = index\r\n                            \"\r\n                            class=\"modified\"\r\n                        >\r\n                            <td class=\"align-middle thumb\">\r\n                                <img\r\n                                    *ngIf=\"addedLine.productAsset\"\r\n                                    [src]=\"addedLine.productAsset | assetPreview : 'tiny'\"\r\n                                />\r\n                            </td>\r\n                            <td class=\"align-middle name\">{{ addedLine.productVariantName }}</td>\r\n                            <td class=\"align-middle sku\">{{ addedLine.sku }}</td>\r\n                            <td class=\"align-middle unit-price\">\r\n                                {{ addedLine.priceWithTax | localeCurrency : order.currencyCode }}\r\n                                <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                                    {{ addedLine.price | localeCurrency : order.currencyCode }}\r\n                                </div>\r\n                            </td>\r\n                            <td class=\"align-middle quantity\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    min=\"0\"\r\n                                    [value]=\"addedLine.quantity\"\r\n                                    (input)=\"updateAddedItemQuantity(addedLine, $event.target.value)\"\r\n                                />\r\n                                <button class=\"icon-button\" (click)=\"removeAddedItem(i)\">\r\n                                    <clr-icon shape=\"trash\"></clr-icon>\r\n                                </button>\r\n                            </td>\r\n                            <td\r\n                                *ngIf=\"orderLineCustomFields.length\"\r\n                                class=\"order-line-custom-field align-middle\"\r\n                            >\r\n                                <ng-container *ngFor=\"let customField of orderLineCustomFields\">\r\n                                    <vdr-custom-field-control\r\n                                        [customField]=\"customField\"\r\n                                        [customFieldsFormGroup]=\"addItemCustomFieldsFormArray.get([i])\"\r\n                                        entityName=\"OrderLine\"\r\n                                        [compact]=\"true\"\r\n                                    ></vdr-custom-field-control>\r\n                                </ng-container>\r\n                            </td>\r\n                            <td class=\"align-middle total\">\r\n                                {{\r\n                                    (addedLine.priceWithTax * addedLine.quantity) / 100\r\n                                        | currency : order.currencyCode\r\n                                }}\r\n                                <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                                    {{\r\n                                        (addedLine.price * addedLine.quantity) / 100\r\n                                            | currency : order.currencyCode\r\n                                    }}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"surcharge\" *ngFor=\"let surcharge of order.surcharges\">\r\n                            <td class=\"align-middle name left\" colspan=\"2\">{{ surcharge.description }}</td>\r\n                            <td class=\"align-middle sku\">{{ surcharge.sku }}</td>\r\n                            <td class=\"align-middle\"></td>\r\n                            <td></td>\r\n                            <td *ngIf=\"orderLineCustomFields.length\"></td>\r\n                            <td class=\"align-middle total\">\r\n                                {{ surcharge.priceWithTax | localeCurrency : order.currencyCode }}\r\n                                <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                                    {{ surcharge.price | localeCurrency : order.currencyCode }}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr\r\n                            class=\"surcharge modified\"\r\n                            *ngFor=\"let surcharge of modifyOrderInput.surcharges; let i = index\"\r\n                        >\r\n                            <td class=\"align-middle name left\" colspan=\"2\">\r\n                                {{ surcharge.description }}\r\n                                <button class=\"icon-button\" (click)=\"removeSurcharge(i)\">\r\n                                    <clr-icon shape=\"trash\"></clr-icon>\r\n                                </button>\r\n                            </td>\r\n                            <td class=\"align-middle sku\">{{ surcharge.sku }}</td>\r\n                            <td class=\"align-middle\"></td>\r\n                            <td></td>\r\n                            <td *ngIf=\"orderLineCustomFields.length\"></td>\r\n                            <td class=\"align-middle total\">\r\n                                <ng-container *ngIf=\"getSurchargePrices(surcharge) as surchargePrice\">\r\n                                    {{ surchargePrice.priceWithTax | localeCurrency : order.currencyCode }}\r\n                                    <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                                        {{ surchargePrice.price | localeCurrency : order.currencyCode }}\r\n                                    </div>\r\n                                </ng-container>\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"shipping\">\r\n                            <td class=\"left clr-align-middle\">{{ 'order.shipping' | translate }}</td>\r\n                            <td class=\"clr-align-middle\">\r\n                                {{ order.shippingLines[0]?.shippingMethod?.name }}\r\n                            </td>\r\n                            <td colspan=\"3\"></td>\r\n                            <td *ngIf=\"orderLineCustomFields.length\"></td>\r\n                            <td class=\"clr-align-middle\">\r\n                                {{ order.shippingWithTax | localeCurrency : order.currencyCode }}\r\n                                <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                                    {{ order.shipping | localeCurrency : order.currencyCode }}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <h4 class=\"mb-2\">{{ 'order.modifications' | translate }}</h4>\r\n                <clr-accordion>\r\n                    <clr-accordion-panel>\r\n                        <clr-accordion-title>{{ 'order.add-item-to-order' | translate }}</clr-accordion-title>\r\n                        <clr-accordion-content *clrIfExpanded>\r\n                            <vdr-product-variant-selector\r\n                                class=\"mb-4\"\r\n                                (productSelected)=\"addItemSelectedVariant = $event\"\r\n                            >\r\n                            </vdr-product-variant-selector>\r\n                            <div *ngIf=\"addItemSelectedVariant\" class=\"flex mb-4\">\r\n                                <img\r\n                                    *ngIf=\"addItemSelectedVariant.productAsset as asset\"\r\n                                    [src]=\"asset | assetPreview : 'tiny'\"\r\n                                    class=\"mr-4 add-item-thumb\"\r\n                                />\r\n                                <div>\r\n                                    <strong class=\"mr-4\">{{\r\n                                        addItemSelectedVariant.productVariantName\r\n                                    }}</strong>\r\n                                    <small>{{ addItemSelectedVariant.sku }}</small>\r\n                                    <div>\r\n                                        {{\r\n                                            getSelectedItemPrice(addItemSelectedVariant)\r\n                                                | localeCurrency : order.currencyCode\r\n                                        }}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <ng-container *ngFor=\"let customField of orderLineCustomFields\">\r\n                                <vdr-custom-field-control\r\n                                    [readonly]=\"!addItemSelectedVariant\"\r\n                                    [customField]=\"customField\"\r\n                                    [customFieldsFormGroup]=\"addItemCustomFieldsForm\"\r\n                                    entityName=\"OrderLine\"\r\n                                    [compact]=\"true\"\r\n                                ></vdr-custom-field-control>\r\n                            </ng-container>\r\n                            <button\r\n                                class=\"btn btn-secondary\"\r\n                                [disabled]=\"!addItemSelectedVariant || addItemCustomFieldsForm.invalid\"\r\n                                (click)=\"addItemToOrder(addItemSelectedVariant)\"\r\n                            >\r\n                                {{ 'order.add-item-to-order' | translate }}\r\n                            </button>\r\n                        </clr-accordion-content>\r\n                    </clr-accordion-panel>\r\n                    <clr-accordion-panel>\r\n                        <clr-accordion-title>{{ 'order.set-coupon-codes' | translate }}</clr-accordion-title>\r\n                        <clr-accordion-content *clrIfExpanded>\r\n                            <vdr-coupon-code-selector\r\n                                [control]=\"couponCodesControl\"\r\n                            ></vdr-coupon-code-selector>\r\n                        </clr-accordion-content>\r\n                    </clr-accordion-panel>\r\n\r\n                    <clr-accordion-panel>\r\n                        <clr-accordion-title>{{ 'order.add-surcharge' | translate }}</clr-accordion-title>\r\n                        <clr-accordion-content *clrIfExpanded>\r\n                            <form [formGroup]=\"surchargeForm\" (submit)=\"addSurcharge(surchargeForm.value)\">\r\n                                <vdr-form-field [label]=\"'common.description' | translate\" for=\"description\"\r\n                                    ><input id=\"description\" type=\"text\" formControlName=\"description\"\r\n                                /></vdr-form-field>\r\n                                <vdr-form-field [label]=\"'order.product-sku' | translate\" for=\"sku\"\r\n                                    ><input id=\"sku\" type=\"text\" formControlName=\"sku\"\r\n                                /></vdr-form-field>\r\n                                <vdr-form-field [label]=\"'common.price' | translate\" for=\"price\">\r\n                                    <vdr-currency-input\r\n                                        [currencyCode]=\"order.currencyCode\"\r\n                                        id=\"price\"\r\n                                        formControlName=\"price\"\r\n                                    ></vdr-currency-input>\r\n                                </vdr-form-field>\r\n                                <vdr-form-field\r\n                                    [label]=\"\r\n                                        'catalog.price-includes-tax-at'\r\n                                            | translate : { rate: surchargeForm.get('taxRate')?.value }\r\n                                    \"\r\n                                    for=\"priceIncludesTax\"\r\n                                    ><input\r\n                                        id=\"priceIncludesTax\"\r\n                                        type=\"checkbox\"\r\n                                        clrCheckbox\r\n                                        formControlName=\"priceIncludesTax\"\r\n                                /></vdr-form-field>\r\n                                <vdr-form-field [label]=\"'order.tax-rate' | translate\" for=\"taxRate\">\r\n                                    <vdr-affixed-input suffix=\"%\"\r\n                                        ><input\r\n                                            id=\"taxRate\"\r\n                                            type=\"number\"\r\n                                            min=\"0\"\r\n                                            max=\"100\"\r\n                                            formControlName=\"taxRate\"\r\n                                    /></vdr-affixed-input>\r\n                                </vdr-form-field>\r\n                                <vdr-form-field\r\n                                    [label]=\"'order.tax-description' | translate\"\r\n                                    for=\"taxDescription\"\r\n                                    ><input id=\"taxDescription\" type=\"text\" formControlName=\"taxDescription\"\r\n                                /></vdr-form-field>\r\n                                <button\r\n                                    class=\"btn btn-secondary\"\r\n                                    [disabled]=\"\r\n                                        surchargeForm.invalid ||\r\n                                        surchargeForm.pristine ||\r\n                                        surchargeForm.get('price')?.value === 0\r\n                                    \"\r\n                                >\r\n                                    {{ 'order.add-surcharge' | translate }}\r\n                                </button>\r\n                            </form>\r\n                        </clr-accordion-content>\r\n                    </clr-accordion-panel>\r\n                    <clr-accordion-panel>\r\n                        <clr-accordion-title>{{\r\n                            'order.edit-shipping-address' | translate\r\n                        }}</clr-accordion-title>\r\n                        <clr-accordion-content *clrIfExpanded>\r\n                            <vdr-address-form\r\n                                [formGroup]=\"shippingAddressForm\"\r\n                                [availableCountries]=\"availableCountries$ | async\"\r\n                                [customFields]=\"addressCustomFields\"\r\n                            ></vdr-address-form>\r\n                        </clr-accordion-content>\r\n                    </clr-accordion-panel>\r\n                    <clr-accordion-panel>\r\n                        <clr-accordion-title>{{\r\n                            'order.edit-billing-address' | translate\r\n                        }}</clr-accordion-title>\r\n                        <clr-accordion-content *clrIfExpanded>\r\n                            <vdr-address-form\r\n                                [formGroup]=\"billingAddressForm\"\r\n                                [availableCountries]=\"availableCountries$ | async\"\r\n                                [customFields]=\"addressCustomFields\"\r\n                            ></vdr-address-form>\r\n                        </clr-accordion-content>\r\n                    </clr-accordion-panel>\r\n                </clr-accordion>\r\n            </div>\r\n            <div class=\"clr-col-lg-4 order-cards\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-header\">\r\n                        {{ 'order.modification-summary' | translate }}\r\n                    </div>\r\n                    <div class=\"card-block\">\r\n                        <ul>\r\n                            <li *ngIf=\"modifyOrderInput.addItems?.length\">\r\n                                {{\r\n                                    'order.modification-adding-items'\r\n                                        | translate : { count: modifyOrderInput.addItems?.length }\r\n                                }}\r\n                            </li>\r\n                            <li *ngIf=\"modifyOrderInput.adjustOrderLines?.length\">\r\n                                {{\r\n                                    'order.modification-adjusting-lines'\r\n                                        | translate : { count: modifyOrderInput.adjustOrderLines?.length }\r\n                                }}\r\n                            </li>\r\n                            <li *ngIf=\"modifyOrderInput.surcharges?.length\">\r\n                                {{\r\n                                    'order.modification-adding-surcharges'\r\n                                        | translate : { count: modifyOrderInput.surcharges?.length }\r\n                                }}\r\n                            </li>\r\n                            <li *ngIf=\"shippingAddressForm.dirty\">\r\n                                {{ 'order.modification-updating-shipping-address' | translate }}\r\n                            </li>\r\n                            <li *ngIf=\"billingAddressForm.dirty\">\r\n                                {{ 'order.modification-updating-billing-address' | translate }}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"card-block\">\r\n                        <label class=\"clr-control-label\">{{ 'order.note' | translate }}</label>\r\n                        <textarea [(ngModel)]=\"note\" name=\"note\" clrTextarea required></textarea>\r\n                        <clr-checkbox-wrapper class=\"\">\r\n                            <input type=\"checkbox\" clrCheckbox [(ngModel)]=\"recalculateShipping\" />\r\n                            <label>{{ 'order.modification-recalculate-shipping' | translate }}</label>\r\n                        </clr-checkbox-wrapper>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <button\r\n                            class=\"btn btn-primary\"\r\n                            [disabled]=\"!canPreviewChanges()\"\r\n                            (click)=\"previewAndModify(order)\"\r\n                        >\r\n                            {{ 'order.preview-changes' | translate }}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <vdr-page-block> </vdr-page-block\r\n></vdr-page-block>\r\n", styles: [".order-table .is-cancelled td{text-decoration:line-through;background-color:var(--color-component-bg-200)}.order-table .sub-total td{border-top:1px dashed var(--color-component-border-200)}.order-table .total td{font-weight:700;border-top:1px dashed var(--color-component-border-200)}.order-table td.custom-fields-row{border-top-style:dashed;border-top-color:var(--color-grey-200)}.order-table img{border-radius:var(--border-radius-img)}.order-table .order-line-custom-fields{display:flex;flex-wrap:wrap}.order-table .order-line-custom-fields .custom-field{text-align:start;max-width:200px;overflow:hidden;text-overflow:ellipsis;margin-bottom:6px;margin-inline-end:18px}.order-table .draft-qty{max-width:48px}.order-table .order-line-custom-field{background-color:var(--color-component-bg-100)}.order-table .order-line-custom-field .custom-field-ellipsis{color:var(--color-text-300)}.order-table .net-price{font-size:11px;color:var(--color-text-300);line-height:14px}.order-table .promotions-label{-webkit-text-decoration:underline dotted var(--color-text-200);text-decoration:underline dotted var(--color-text-200);font-size:11px;margin-top:6px;cursor:pointer;text-transform:lowercase}.order-table .thumb img{width:50px;height:50px}.order-table .shipping-method-name{font-size:var(--font-size-xs);margin-inline-end:2px}.order-table .order-placed-quantity{text-decoration:line-through;color:var(--color-text-300);margin-inline-end:2px}.order-table tr.modified td{background-color:var(--color-warning-100)}.order-table .order-line-custom-field{text-align:start}.add-item-thumb{max-width:50px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i1.ActivatedRoute }, { type: i2.ServerConfigService }, { type: i0.ChangeDetectorRef }, { type: i2.DataService }, { type: i2.NotificationService }, { type: i2.ModalService }, { type: i3.OrderTransitionService }]; } });
//# sourceMappingURL=data:application/json;base64,