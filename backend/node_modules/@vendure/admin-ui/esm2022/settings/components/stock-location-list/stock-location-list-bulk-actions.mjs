import { AssignStockLocationsToChannelDocument, createBulkAssignToChannelAction, createBulkDeleteAction, createBulkRemoveFromChannelAction, DeleteStockLocationsDocument, DeletionResult, Permission, RemoveStockLocationsFromChannelDocument, } from '@vendure/admin-ui/core';
import { gql } from 'apollo-angular';
import { map } from 'rxjs/operators';
const DELETE_STOCK_LOCATIONS = gql `
    mutation DeleteStockLocations($input: [DeleteStockLocationInput!]!) {
        deleteStockLocations(input: $input) {
            result
            message
        }
    }
`;
const ASSIGN_STOCK_LOCATIONS_TO_CHANNEL = gql `
    mutation AssignStockLocationsToChannel($input: AssignStockLocationsToChannelInput!) {
        assignStockLocationsToChannel(input: $input) {
            id
            name
        }
    }
`;
const REMOVE_STOCK_LOCATIONS_FROM_CHANNEL = gql `
    mutation RemoveStockLocationsFromChannel($input: RemoveStockLocationsFromChannelInput!) {
        removeStockLocationsFromChannel(input: $input) {
            id
            name
        }
    }
`;
export const deleteStockLocationsBulkAction = createBulkDeleteAction({
    location: 'stock-location-list',
    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteStockLocation) ||
        userPermissions.includes(Permission.DeleteCatalog),
    getItemName: item => item.name,
    bulkDelete: (dataService, ids) => dataService
        .mutate(DeleteStockLocationsDocument, {
        input: ids.map(id => ({ id })),
    })
        .pipe(map(res => res.deleteStockLocations)),
    shouldRetryItem: response => response.result === DeletionResult.NOT_DELETED,
});
export const assignStockLocationsToChannelBulkAction = createBulkAssignToChannelAction({
    location: 'stock-location-list',
    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||
        userPermissions.includes(Permission.UpdateStockLocation),
    getItemName: item => item.name,
    bulkAssignToChannel: (dataService, stockLocationIds, channelId) => dataService
        .mutate(AssignStockLocationsToChannelDocument, {
        input: {
            channelId,
            stockLocationIds,
        },
    })
        .pipe(map(res => res.assignStockLocationsToChannel)),
});
export const removeStockLocationsFromChannelBulkAction = createBulkRemoveFromChannelAction({
    location: 'stock-location-list',
    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteCatalog) ||
        userPermissions.includes(Permission.DeleteStockLocation),
    getItemName: item => item.name,
    bulkRemoveFromChannel: (dataService, stockLocationIds, channelId) => dataService
        .mutate(RemoveStockLocationsFromChannelDocument, {
        input: {
            channelId,
            stockLocationIds,
        },
    })
        .pipe(map(res => res.removeStockLocationsFromChannel)),
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvY2stbG9jYXRpb24tbGlzdC1idWxrLWFjdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL3NldHRpbmdzL3NyYy9jb21wb25lbnRzL3N0b2NrLWxvY2F0aW9uLWxpc3Qvc3RvY2stbG9jYXRpb24tbGlzdC1idWxrLWFjdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNILHFDQUFxQyxFQUNyQywrQkFBK0IsRUFDL0Isc0JBQXNCLEVBQ3RCLGlDQUFpQyxFQUNqQyw0QkFBNEIsRUFDNUIsY0FBYyxFQUdkLFVBQVUsRUFDVix1Q0FBdUMsR0FDMUMsTUFBTSx3QkFBd0IsQ0FBQztBQUNoQyxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDckMsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXJDLE1BQU0sc0JBQXNCLEdBQUcsR0FBRyxDQUFBOzs7Ozs7O0NBT2pDLENBQUM7QUFFRixNQUFNLGlDQUFpQyxHQUFHLEdBQUcsQ0FBQTs7Ozs7OztDQU81QyxDQUFDO0FBRUYsTUFBTSxtQ0FBbUMsR0FBRyxHQUFHLENBQUE7Ozs7Ozs7Q0FPOUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLDhCQUE4QixHQUFHLHNCQUFzQixDQUVsRTtJQUNFLFFBQVEsRUFBRSxxQkFBcUI7SUFDL0Isa0JBQWtCLEVBQUUsZUFBZSxDQUFDLEVBQUUsQ0FDbEMsZUFBZSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsbUJBQW1CLENBQUM7UUFDeEQsZUFBZSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDO0lBQ3RELFdBQVcsRUFBRSxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJO0lBQzlCLFVBQVUsRUFBRSxDQUFDLFdBQVcsRUFBRSxHQUFHLEVBQUUsRUFBRSxDQUM3QixXQUFXO1NBQ04sTUFBTSxDQUFDLDRCQUE0QixFQUFFO1FBQ2xDLEtBQUssRUFBRSxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7S0FDakMsQ0FBQztTQUNELElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsb0JBQW9CLENBQUMsQ0FBQztJQUNuRCxlQUFlLEVBQUUsUUFBUSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsTUFBTSxLQUFLLGNBQWMsQ0FBQyxXQUFXO0NBQzlFLENBQUMsQ0FBQztBQUVILE1BQU0sQ0FBQyxNQUFNLHVDQUF1QyxHQUFHLCtCQUErQixDQUVwRjtJQUNFLFFBQVEsRUFBRSxxQkFBcUI7SUFDL0Isa0JBQWtCLEVBQUUsZUFBZSxDQUFDLEVBQUUsQ0FDbEMsZUFBZSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDO1FBQ2xELGVBQWUsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLG1CQUFtQixDQUFDO0lBQzVELFdBQVcsRUFBRSxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJO0lBQzlCLG1CQUFtQixFQUFFLENBQUMsV0FBVyxFQUFFLGdCQUFnQixFQUFFLFNBQVMsRUFBRSxFQUFFLENBQzlELFdBQVc7U0FDTixNQUFNLENBQUMscUNBQXFDLEVBQUU7UUFDM0MsS0FBSyxFQUFFO1lBQ0gsU0FBUztZQUNULGdCQUFnQjtTQUNuQjtLQUNKLENBQUM7U0FDRCxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLDZCQUE2QixDQUFDLENBQUM7Q0FDL0QsQ0FBQyxDQUFDO0FBRUgsTUFBTSxDQUFDLE1BQU0seUNBQXlDLEdBQUcsaUNBQWlDLENBRXhGO0lBQ0UsUUFBUSxFQUFFLHFCQUFxQjtJQUMvQixrQkFBa0IsRUFBRSxlQUFlLENBQUMsRUFBRSxDQUNsQyxlQUFlLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUM7UUFDbEQsZUFBZSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsbUJBQW1CLENBQUM7SUFDNUQsV0FBVyxFQUFFLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUk7SUFDOUIscUJBQXFCLEVBQUUsQ0FBQyxXQUFXLEVBQUUsZ0JBQWdCLEVBQUUsU0FBUyxFQUFFLEVBQUUsQ0FDaEUsV0FBVztTQUNOLE1BQU0sQ0FBQyx1Q0FBdUMsRUFBRTtRQUM3QyxLQUFLLEVBQUU7WUFDSCxTQUFTO1lBQ1QsZ0JBQWdCO1NBQ25CO0tBQ0osQ0FBQztTQUNELElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsK0JBQStCLENBQUMsQ0FBQztDQUNqRSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gICAgQXNzaWduU3RvY2tMb2NhdGlvbnNUb0NoYW5uZWxEb2N1bWVudCxcclxuICAgIGNyZWF0ZUJ1bGtBc3NpZ25Ub0NoYW5uZWxBY3Rpb24sXHJcbiAgICBjcmVhdGVCdWxrRGVsZXRlQWN0aW9uLFxyXG4gICAgY3JlYXRlQnVsa1JlbW92ZUZyb21DaGFubmVsQWN0aW9uLFxyXG4gICAgRGVsZXRlU3RvY2tMb2NhdGlvbnNEb2N1bWVudCxcclxuICAgIERlbGV0aW9uUmVzdWx0LFxyXG4gICAgR2V0U3RvY2tMb2NhdGlvbkxpc3RRdWVyeSxcclxuICAgIEl0ZW1PZixcclxuICAgIFBlcm1pc3Npb24sXHJcbiAgICBSZW1vdmVTdG9ja0xvY2F0aW9uc0Zyb21DaGFubmVsRG9jdW1lbnQsXHJcbn0gZnJvbSAnQHZlbmR1cmUvYWRtaW4tdWkvY29yZSc7XHJcbmltcG9ydCB7IGdxbCB9IGZyb20gJ2Fwb2xsby1hbmd1bGFyJztcclxuaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5cclxuY29uc3QgREVMRVRFX1NUT0NLX0xPQ0FUSU9OUyA9IGdxbGBcclxuICAgIG11dGF0aW9uIERlbGV0ZVN0b2NrTG9jYXRpb25zKCRpbnB1dDogW0RlbGV0ZVN0b2NrTG9jYXRpb25JbnB1dCFdISkge1xyXG4gICAgICAgIGRlbGV0ZVN0b2NrTG9jYXRpb25zKGlucHV0OiAkaW5wdXQpIHtcclxuICAgICAgICAgICAgcmVzdWx0XHJcbiAgICAgICAgICAgIG1lc3NhZ2VcclxuICAgICAgICB9XHJcbiAgICB9XHJcbmA7XHJcblxyXG5jb25zdCBBU1NJR05fU1RPQ0tfTE9DQVRJT05TX1RPX0NIQU5ORUwgPSBncWxgXHJcbiAgICBtdXRhdGlvbiBBc3NpZ25TdG9ja0xvY2F0aW9uc1RvQ2hhbm5lbCgkaW5wdXQ6IEFzc2lnblN0b2NrTG9jYXRpb25zVG9DaGFubmVsSW5wdXQhKSB7XHJcbiAgICAgICAgYXNzaWduU3RvY2tMb2NhdGlvbnNUb0NoYW5uZWwoaW5wdXQ6ICRpbnB1dCkge1xyXG4gICAgICAgICAgICBpZFxyXG4gICAgICAgICAgICBuYW1lXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5gO1xyXG5cclxuY29uc3QgUkVNT1ZFX1NUT0NLX0xPQ0FUSU9OU19GUk9NX0NIQU5ORUwgPSBncWxgXHJcbiAgICBtdXRhdGlvbiBSZW1vdmVTdG9ja0xvY2F0aW9uc0Zyb21DaGFubmVsKCRpbnB1dDogUmVtb3ZlU3RvY2tMb2NhdGlvbnNGcm9tQ2hhbm5lbElucHV0ISkge1xyXG4gICAgICAgIHJlbW92ZVN0b2NrTG9jYXRpb25zRnJvbUNoYW5uZWwoaW5wdXQ6ICRpbnB1dCkge1xyXG4gICAgICAgICAgICBpZFxyXG4gICAgICAgICAgICBuYW1lXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRlbGV0ZVN0b2NrTG9jYXRpb25zQnVsa0FjdGlvbiA9IGNyZWF0ZUJ1bGtEZWxldGVBY3Rpb248XHJcbiAgICBJdGVtT2Y8R2V0U3RvY2tMb2NhdGlvbkxpc3RRdWVyeSwgJ3N0b2NrTG9jYXRpb25zJz5cclxuPih7XHJcbiAgICBsb2NhdGlvbjogJ3N0b2NrLWxvY2F0aW9uLWxpc3QnLFxyXG4gICAgcmVxdWlyZXNQZXJtaXNzaW9uOiB1c2VyUGVybWlzc2lvbnMgPT5cclxuICAgICAgICB1c2VyUGVybWlzc2lvbnMuaW5jbHVkZXMoUGVybWlzc2lvbi5EZWxldGVTdG9ja0xvY2F0aW9uKSB8fFxyXG4gICAgICAgIHVzZXJQZXJtaXNzaW9ucy5pbmNsdWRlcyhQZXJtaXNzaW9uLkRlbGV0ZUNhdGFsb2cpLFxyXG4gICAgZ2V0SXRlbU5hbWU6IGl0ZW0gPT4gaXRlbS5uYW1lLFxyXG4gICAgYnVsa0RlbGV0ZTogKGRhdGFTZXJ2aWNlLCBpZHMpID0+XHJcbiAgICAgICAgZGF0YVNlcnZpY2VcclxuICAgICAgICAgICAgLm11dGF0ZShEZWxldGVTdG9ja0xvY2F0aW9uc0RvY3VtZW50LCB7XHJcbiAgICAgICAgICAgICAgICBpbnB1dDogaWRzLm1hcChpZCA9PiAoeyBpZCB9KSksXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5waXBlKG1hcChyZXMgPT4gcmVzLmRlbGV0ZVN0b2NrTG9jYXRpb25zKSksXHJcbiAgICBzaG91bGRSZXRyeUl0ZW06IHJlc3BvbnNlID0+IHJlc3BvbnNlLnJlc3VsdCA9PT0gRGVsZXRpb25SZXN1bHQuTk9UX0RFTEVURUQsXHJcbn0pO1xyXG5cclxuZXhwb3J0IGNvbnN0IGFzc2lnblN0b2NrTG9jYXRpb25zVG9DaGFubmVsQnVsa0FjdGlvbiA9IGNyZWF0ZUJ1bGtBc3NpZ25Ub0NoYW5uZWxBY3Rpb248XHJcbiAgICBJdGVtT2Y8R2V0U3RvY2tMb2NhdGlvbkxpc3RRdWVyeSwgJ3N0b2NrTG9jYXRpb25zJz5cclxuPih7XHJcbiAgICBsb2NhdGlvbjogJ3N0b2NrLWxvY2F0aW9uLWxpc3QnLFxyXG4gICAgcmVxdWlyZXNQZXJtaXNzaW9uOiB1c2VyUGVybWlzc2lvbnMgPT5cclxuICAgICAgICB1c2VyUGVybWlzc2lvbnMuaW5jbHVkZXMoUGVybWlzc2lvbi5VcGRhdGVDYXRhbG9nKSB8fFxyXG4gICAgICAgIHVzZXJQZXJtaXNzaW9ucy5pbmNsdWRlcyhQZXJtaXNzaW9uLlVwZGF0ZVN0b2NrTG9jYXRpb24pLFxyXG4gICAgZ2V0SXRlbU5hbWU6IGl0ZW0gPT4gaXRlbS5uYW1lLFxyXG4gICAgYnVsa0Fzc2lnblRvQ2hhbm5lbDogKGRhdGFTZXJ2aWNlLCBzdG9ja0xvY2F0aW9uSWRzLCBjaGFubmVsSWQpID0+XHJcbiAgICAgICAgZGF0YVNlcnZpY2VcclxuICAgICAgICAgICAgLm11dGF0ZShBc3NpZ25TdG9ja0xvY2F0aW9uc1RvQ2hhbm5lbERvY3VtZW50LCB7XHJcbiAgICAgICAgICAgICAgICBpbnB1dDoge1xyXG4gICAgICAgICAgICAgICAgICAgIGNoYW5uZWxJZCxcclxuICAgICAgICAgICAgICAgICAgICBzdG9ja0xvY2F0aW9uSWRzLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLnBpcGUobWFwKHJlcyA9PiByZXMuYXNzaWduU3RvY2tMb2NhdGlvbnNUb0NoYW5uZWwpKSxcclxufSk7XHJcblxyXG5leHBvcnQgY29uc3QgcmVtb3ZlU3RvY2tMb2NhdGlvbnNGcm9tQ2hhbm5lbEJ1bGtBY3Rpb24gPSBjcmVhdGVCdWxrUmVtb3ZlRnJvbUNoYW5uZWxBY3Rpb248XHJcbiAgICBJdGVtT2Y8R2V0U3RvY2tMb2NhdGlvbkxpc3RRdWVyeSwgJ3N0b2NrTG9jYXRpb25zJz5cclxuPih7XHJcbiAgICBsb2NhdGlvbjogJ3N0b2NrLWxvY2F0aW9uLWxpc3QnLFxyXG4gICAgcmVxdWlyZXNQZXJtaXNzaW9uOiB1c2VyUGVybWlzc2lvbnMgPT5cclxuICAgICAgICB1c2VyUGVybWlzc2lvbnMuaW5jbHVkZXMoUGVybWlzc2lvbi5EZWxldGVDYXRhbG9nKSB8fFxyXG4gICAgICAgIHVzZXJQZXJtaXNzaW9ucy5pbmNsdWRlcyhQZXJtaXNzaW9uLkRlbGV0ZVN0b2NrTG9jYXRpb24pLFxyXG4gICAgZ2V0SXRlbU5hbWU6IGl0ZW0gPT4gaXRlbS5uYW1lLFxyXG4gICAgYnVsa1JlbW92ZUZyb21DaGFubmVsOiAoZGF0YVNlcnZpY2UsIHN0b2NrTG9jYXRpb25JZHMsIGNoYW5uZWxJZCkgPT5cclxuICAgICAgICBkYXRhU2VydmljZVxyXG4gICAgICAgICAgICAubXV0YXRlKFJlbW92ZVN0b2NrTG9jYXRpb25zRnJvbUNoYW5uZWxEb2N1bWVudCwge1xyXG4gICAgICAgICAgICAgICAgaW5wdXQ6IHtcclxuICAgICAgICAgICAgICAgICAgICBjaGFubmVsSWQsXHJcbiAgICAgICAgICAgICAgICAgICAgc3RvY2tMb2NhdGlvbklkcyxcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5waXBlKG1hcChyZXMgPT4gcmVzLnJlbW92ZVN0b2NrTG9jYXRpb25zRnJvbUNoYW5uZWwpKSxcclxufSk7XHJcbiJdfQ==