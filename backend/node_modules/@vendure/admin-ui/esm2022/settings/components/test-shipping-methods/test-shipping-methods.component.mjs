import { ChangeDetectionStrategy, Component } from '@angular/core';
import { Subject } from 'rxjs';
import { switchMap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@vendure/admin-ui/core";
import * as i2 from "../test-order-builder/test-order-builder.component";
import * as i3 from "../test-address-form/test-address-form.component";
import * as i4 from "../shipping-eligibility-test-result/shipping-eligibility-test-result.component";
import * as i5 from "@angular/common";
export class TestShippingMethodsComponent {
    constructor(dataService) {
        this.dataService = dataService;
        this.testDataUpdated = false;
        this.fetchTestResult$ = new Subject();
    }
    ngOnInit() {
        this.activeChannel$ = this.dataService.settings
            .getActiveChannel()
            .mapStream(data => data.activeChannel);
        this.testResult$ = this.fetchTestResult$.pipe(switchMap(([address, lines]) => {
            const input = {
                shippingAddress: { ...address, streetLine1: 'test' },
                lines: lines.map(l => ({ productVariantId: l.id, quantity: l.quantity })),
            };
            return this.dataService.shippingMethod
                .testEligibleShippingMethods(input)
                .mapSingle(result => result.testEligibleShippingMethods);
        }));
    }
    setTestOrderLines(event) {
        this.testOrderLines = event;
        this.testDataUpdated = true;
    }
    setTestAddress(event) {
        this.testAddress = event;
        this.testDataUpdated = true;
    }
    allTestDataPresent() {
        return !!(this.testAddress && this.testOrderLines && this.testOrderLines.length);
    }
    runTest() {
        this.fetchTestResult$.next([this.testAddress, this.testOrderLines]);
        this.testDataUpdated = false;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: TestShippingMethodsComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.2", type: TestShippingMethodsComponent, selector: "vdr-test-shipping-methods", ngImport: i0, template: "<vdr-page-block>\r\n    <div class=\"test-wrapper\">\r\n        <div class=\"\">\r\n            <vdr-test-order-builder (orderLinesChange)=\"setTestOrderLines($event)\"></vdr-test-order-builder>\r\n        </div>\r\n        <div class=\"\">\r\n            <vdr-test-address-form (addressChange)=\"setTestAddress($event)\"></vdr-test-address-form>\r\n            <vdr-shipping-eligibility-test-result\r\n                class=\"mt-1\"\r\n                [currencyCode]=\"(activeChannel$ | async)?.currencyCode\"\r\n                [okToRun]=\"allTestDataPresent()\"\r\n                [testDataUpdated]=\"testDataUpdated\"\r\n                [testResult]=\"testResult$ | async\"\r\n                (runTest)=\"runTest()\"\r\n            ></vdr-shipping-eligibility-test-result>\r\n        </div>\r\n    </div>\r\n</vdr-page-block>\r\n", styles: [".test-wrapper{display:flex;width:100%;gap:var(--space-unit)}.test-wrapper>div{flex:1}@media screen and (max-width: 992px){.test-wrapper{flex-direction:column}}\n"], dependencies: [{ kind: "component", type: i1.PageBlockComponent, selector: "vdr-page-block" }, { kind: "component", type: i2.TestOrderBuilderComponent, selector: "vdr-test-order-builder", outputs: ["orderLinesChange"] }, { kind: "component", type: i3.TestAddressFormComponent, selector: "vdr-test-address-form", outputs: ["addressChange"] }, { kind: "component", type: i4.ShippingEligibilityTestResultComponent, selector: "vdr-shipping-eligibility-test-result", inputs: ["testResult", "okToRun", "testDataUpdated", "currencyCode"], outputs: ["runTest"] }, { kind: "pipe", type: i5.AsyncPipe, name: "async" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.2", ngImport: i0, type: TestShippingMethodsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'vdr-test-shipping-methods', changeDetection: ChangeDetectionStrategy.OnPush, template: "<vdr-page-block>\r\n    <div class=\"test-wrapper\">\r\n        <div class=\"\">\r\n            <vdr-test-order-builder (orderLinesChange)=\"setTestOrderLines($event)\"></vdr-test-order-builder>\r\n        </div>\r\n        <div class=\"\">\r\n            <vdr-test-address-form (addressChange)=\"setTestAddress($event)\"></vdr-test-address-form>\r\n            <vdr-shipping-eligibility-test-result\r\n                class=\"mt-1\"\r\n                [currencyCode]=\"(activeChannel$ | async)?.currencyCode\"\r\n                [okToRun]=\"allTestDataPresent()\"\r\n                [testDataUpdated]=\"testDataUpdated\"\r\n                [testResult]=\"testResult$ | async\"\r\n                (runTest)=\"runTest()\"\r\n            ></vdr-shipping-eligibility-test-result>\r\n        </div>\r\n    </div>\r\n</vdr-page-block>\r\n", styles: [".test-wrapper{display:flex;width:100%;gap:var(--space-unit)}.test-wrapper>div{flex:1}@media screen and (max-width: 992px){.test-wrapper{flex-direction:column}}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.DataService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdC1zaGlwcGluZy1tZXRob2RzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvc2V0dGluZ3Mvc3JjL2NvbXBvbmVudHMvdGVzdC1zaGlwcGluZy1tZXRob2RzL3Rlc3Qtc2hpcHBpbmctbWV0aG9kcy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL3NldHRpbmdzL3NyYy9jb21wb25lbnRzL3Rlc3Qtc2hpcHBpbmctbWV0aG9kcy90ZXN0LXNoaXBwaW5nLW1ldGhvZHMuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQU8zRSxPQUFPLEVBQWMsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7Ozs7OztBQVUzQyxNQUFNLE9BQU8sNEJBQTRCO0lBUXJDLFlBQW9CLFdBQXdCO1FBQXhCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBSjVDLG9CQUFlLEdBQUcsS0FBSyxDQUFDO1FBRWhCLHFCQUFnQixHQUFHLElBQUksT0FBTyxFQUFrQyxDQUFDO0lBRTFCLENBQUM7SUFFaEQsUUFBUTtRQUNKLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRO2FBQzFDLGdCQUFnQixFQUFFO2FBQ2xCLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUMzQyxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQ3pDLFNBQVMsQ0FBQyxDQUFDLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxFQUFFLEVBQUU7WUFDM0IsTUFBTSxLQUFLLEdBQXFDO2dCQUM1QyxlQUFlLEVBQUUsRUFBRSxHQUFHLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFO2dCQUNwRCxLQUFLLEVBQUUsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxnQkFBZ0IsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLFFBQVEsRUFBRSxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQzthQUM1RSxDQUFDO1lBQ0YsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLGNBQWM7aUJBQ2pDLDJCQUEyQixDQUFDLEtBQUssQ0FBQztpQkFDbEMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLDJCQUEyQixDQUFDLENBQUM7UUFDakUsQ0FBQyxDQUFDLENBQ0wsQ0FBQztJQUNOLENBQUM7SUFFRCxpQkFBaUIsQ0FBQyxLQUFzQjtRQUNwQyxJQUFJLENBQUMsY0FBYyxHQUFHLEtBQUssQ0FBQztRQUM1QixJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQztJQUNoQyxDQUFDO0lBRUQsY0FBYyxDQUFDLEtBQWtCO1FBQzdCLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDO0lBQ2hDLENBQUM7SUFFRCxrQkFBa0I7UUFDZCxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLElBQUksSUFBSSxDQUFDLGNBQWMsSUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3JGLENBQUM7SUFFRCxPQUFPO1FBQ0gsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7UUFDcEUsSUFBSSxDQUFDLGVBQWUsR0FBRyxLQUFLLENBQUM7SUFDakMsQ0FBQzs4R0E1Q1EsNEJBQTRCO2tHQUE1Qiw0QkFBNEIsaUVDbEJ6QyxtMEJBa0JBOzsyRkRBYSw0QkFBNEI7a0JBTnhDLFNBQVM7K0JBQ0ksMkJBQTJCLG1CQUdwQix1QkFBdUIsQ0FBQyxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7XHJcbiAgICBEYXRhU2VydmljZSxcclxuICAgIEdldEFjdGl2ZUNoYW5uZWxRdWVyeSxcclxuICAgIFNoaXBwaW5nTWV0aG9kUXVvdGUsXHJcbiAgICBUZXN0RWxpZ2libGVTaGlwcGluZ01ldGhvZHNJbnB1dCxcclxufSBmcm9tICdAdmVuZHVyZS9hZG1pbi11aS9jb3JlJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBzd2l0Y2hNYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcbmltcG9ydCB7IFRlc3RBZGRyZXNzIH0gZnJvbSAnLi4vdGVzdC1hZGRyZXNzLWZvcm0vdGVzdC1hZGRyZXNzLWZvcm0uY29tcG9uZW50JztcclxuaW1wb3J0IHsgVGVzdE9yZGVyTGluZSB9IGZyb20gJy4uL3Rlc3Qtb3JkZXItYnVpbGRlci90ZXN0LW9yZGVyLWJ1aWxkZXIuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICd2ZHItdGVzdC1zaGlwcGluZy1tZXRob2RzJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi90ZXN0LXNoaXBwaW5nLW1ldGhvZHMuY29tcG9uZW50Lmh0bWwnLFxyXG4gICAgc3R5bGVVcmxzOiBbJy4vdGVzdC1zaGlwcGluZy1tZXRob2RzLmNvbXBvbmVudC5zY3NzJ10sXHJcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcclxufSlcclxuZXhwb3J0IGNsYXNzIFRlc3RTaGlwcGluZ01ldGhvZHNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gICAgYWN0aXZlQ2hhbm5lbCQ6IE9ic2VydmFibGU8R2V0QWN0aXZlQ2hhbm5lbFF1ZXJ5WydhY3RpdmVDaGFubmVsJ10+O1xyXG4gICAgdGVzdEFkZHJlc3M6IFRlc3RBZGRyZXNzO1xyXG4gICAgdGVzdE9yZGVyTGluZXM6IFRlc3RPcmRlckxpbmVbXTtcclxuICAgIHRlc3REYXRhVXBkYXRlZCA9IGZhbHNlO1xyXG4gICAgdGVzdFJlc3VsdCQ6IE9ic2VydmFibGU8U2hpcHBpbmdNZXRob2RRdW90ZVtdIHwgdW5kZWZpbmVkPjtcclxuICAgIHByaXZhdGUgZmV0Y2hUZXN0UmVzdWx0JCA9IG5ldyBTdWJqZWN0PFtUZXN0QWRkcmVzcywgVGVzdE9yZGVyTGluZVtdXT4oKTtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGRhdGFTZXJ2aWNlOiBEYXRhU2VydmljZSkge31cclxuXHJcbiAgICBuZ09uSW5pdCgpIHtcclxuICAgICAgICB0aGlzLmFjdGl2ZUNoYW5uZWwkID0gdGhpcy5kYXRhU2VydmljZS5zZXR0aW5nc1xyXG4gICAgICAgICAgICAuZ2V0QWN0aXZlQ2hhbm5lbCgpXHJcbiAgICAgICAgICAgIC5tYXBTdHJlYW0oZGF0YSA9PiBkYXRhLmFjdGl2ZUNoYW5uZWwpO1xyXG4gICAgICAgIHRoaXMudGVzdFJlc3VsdCQgPSB0aGlzLmZldGNoVGVzdFJlc3VsdCQucGlwZShcclxuICAgICAgICAgICAgc3dpdGNoTWFwKChbYWRkcmVzcywgbGluZXNdKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBpbnB1dDogVGVzdEVsaWdpYmxlU2hpcHBpbmdNZXRob2RzSW5wdXQgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2hpcHBpbmdBZGRyZXNzOiB7IC4uLmFkZHJlc3MsIHN0cmVldExpbmUxOiAndGVzdCcgfSxcclxuICAgICAgICAgICAgICAgICAgICBsaW5lczogbGluZXMubWFwKGwgPT4gKHsgcHJvZHVjdFZhcmlhbnRJZDogbC5pZCwgcXVhbnRpdHk6IGwucXVhbnRpdHkgfSkpLFxyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmRhdGFTZXJ2aWNlLnNoaXBwaW5nTWV0aG9kXHJcbiAgICAgICAgICAgICAgICAgICAgLnRlc3RFbGlnaWJsZVNoaXBwaW5nTWV0aG9kcyhpbnB1dClcclxuICAgICAgICAgICAgICAgICAgICAubWFwU2luZ2xlKHJlc3VsdCA9PiByZXN1bHQudGVzdEVsaWdpYmxlU2hpcHBpbmdNZXRob2RzKTtcclxuICAgICAgICAgICAgfSksXHJcbiAgICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRUZXN0T3JkZXJMaW5lcyhldmVudDogVGVzdE9yZGVyTGluZVtdKSB7XHJcbiAgICAgICAgdGhpcy50ZXN0T3JkZXJMaW5lcyA9IGV2ZW50O1xyXG4gICAgICAgIHRoaXMudGVzdERhdGFVcGRhdGVkID0gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRUZXN0QWRkcmVzcyhldmVudDogVGVzdEFkZHJlc3MpIHtcclxuICAgICAgICB0aGlzLnRlc3RBZGRyZXNzID0gZXZlbnQ7XHJcbiAgICAgICAgdGhpcy50ZXN0RGF0YVVwZGF0ZWQgPSB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIGFsbFRlc3REYXRhUHJlc2VudCgpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gISEodGhpcy50ZXN0QWRkcmVzcyAmJiB0aGlzLnRlc3RPcmRlckxpbmVzICYmIHRoaXMudGVzdE9yZGVyTGluZXMubGVuZ3RoKTtcclxuICAgIH1cclxuXHJcbiAgICBydW5UZXN0KCkge1xyXG4gICAgICAgIHRoaXMuZmV0Y2hUZXN0UmVzdWx0JC5uZXh0KFt0aGlzLnRlc3RBZGRyZXNzLCB0aGlzLnRlc3RPcmRlckxpbmVzXSk7XHJcbiAgICAgICAgdGhpcy50ZXN0RGF0YVVwZGF0ZWQgPSBmYWxzZTtcclxuICAgIH1cclxufVxyXG4iLCI8dmRyLXBhZ2UtYmxvY2s+XHJcbiAgICA8ZGl2IGNsYXNzPVwidGVzdC13cmFwcGVyXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cIlwiPlxyXG4gICAgICAgICAgICA8dmRyLXRlc3Qtb3JkZXItYnVpbGRlciAob3JkZXJMaW5lc0NoYW5nZSk9XCJzZXRUZXN0T3JkZXJMaW5lcygkZXZlbnQpXCI+PC92ZHItdGVzdC1vcmRlci1idWlsZGVyPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJcIj5cclxuICAgICAgICAgICAgPHZkci10ZXN0LWFkZHJlc3MtZm9ybSAoYWRkcmVzc0NoYW5nZSk9XCJzZXRUZXN0QWRkcmVzcygkZXZlbnQpXCI+PC92ZHItdGVzdC1hZGRyZXNzLWZvcm0+XHJcbiAgICAgICAgICAgIDx2ZHItc2hpcHBpbmctZWxpZ2liaWxpdHktdGVzdC1yZXN1bHRcclxuICAgICAgICAgICAgICAgIGNsYXNzPVwibXQtMVwiXHJcbiAgICAgICAgICAgICAgICBbY3VycmVuY3lDb2RlXT1cIihhY3RpdmVDaGFubmVsJCB8IGFzeW5jKT8uY3VycmVuY3lDb2RlXCJcclxuICAgICAgICAgICAgICAgIFtva1RvUnVuXT1cImFsbFRlc3REYXRhUHJlc2VudCgpXCJcclxuICAgICAgICAgICAgICAgIFt0ZXN0RGF0YVVwZGF0ZWRdPVwidGVzdERhdGFVcGRhdGVkXCJcclxuICAgICAgICAgICAgICAgIFt0ZXN0UmVzdWx0XT1cInRlc3RSZXN1bHQkIHwgYXN5bmNcIlxyXG4gICAgICAgICAgICAgICAgKHJ1blRlc3QpPVwicnVuVGVzdCgpXCJcclxuICAgICAgICAgICAgPjwvdmRyLXNoaXBwaW5nLWVsaWdpYmlsaXR5LXRlc3QtcmVzdWx0PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbjwvdmRyLXBhZ2UtYmxvY2s+XHJcbiJdfQ==