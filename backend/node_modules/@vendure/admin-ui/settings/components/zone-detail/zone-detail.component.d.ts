import { ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';
import { FormBuilder } from '@angular/forms';
import { DataService, GetZoneDetailDocument, GetZoneDetailQuery, LanguageCode, NotificationService, Permission, TypedBaseDetailComponent } from '@vendure/admin-ui/core';
import * as i0 from "@angular/core";
export declare const GET_ZONE_DETAIL: import("apollo-angular").TypedDocumentNode<unknown, unknown>;
export declare class ZoneDetailComponent extends TypedBaseDetailComponent<typeof GetZoneDetailDocument, 'zone'> implements OnInit, OnDestroy {
    private changeDetector;
    protected dataService: DataService;
    private formBuilder;
    private notificationService;
    customFields: import("@vendure/admin-ui/core").CustomFieldConfig[];
    detailForm: import("@angular/forms").FormGroup<{
        name: import("@angular/forms").FormControl<string | null>;
        customFields: import("@angular/forms").FormGroup<{
            [x: string]: import("@angular/forms").FormControl<false | "" | 0 | Date | null>;
        }>;
    }>;
    readonly updatePermission: Permission[];
    constructor(changeDetector: ChangeDetectorRef, dataService: DataService, formBuilder: FormBuilder, notificationService: NotificationService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    saveButtonEnabled(): boolean;
    create(): void;
    save(): void;
    /**
     * Update the form values when the entity changes.
     */
    protected setFormValues(entity: NonNullable<GetZoneDetailQuery['zone']>, languageCode: LanguageCode): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ZoneDetailComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ZoneDetailComponent, "vdr-zone-detail", never, {}, {}, never, never, false, never>;
}
