import { ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';
import { FormBuilder } from '@angular/forms';
import { DataService, GetGlobalSettingsDetailDocument, GlobalSettings, LanguageCode, NotificationService, Permission, TypedBaseDetailComponent } from '@vendure/admin-ui/core';
import * as i0 from "@angular/core";
export declare const GET_GLOBAL_SETTINGS_DETAIL: import("apollo-angular").TypedDocumentNode<unknown, unknown>;
export declare class GlobalSettingsComponent extends TypedBaseDetailComponent<typeof GetGlobalSettingsDetailDocument, 'globalSettings'> implements OnInit, OnDestroy {
    private changeDetector;
    protected dataService: DataService;
    private formBuilder;
    private notificationService;
    customFields: import("@vendure/admin-ui/core").CustomFieldConfig[];
    detailForm: import("@angular/forms").FormGroup<{
        availableLanguages: import("@angular/forms").FormControl<LanguageCode[] | null>;
        trackInventory: import("@angular/forms").FormControl<boolean | null>;
        outOfStockThreshold: import("@angular/forms").FormControl<number | null>;
        customFields: import("@angular/forms").FormGroup<{
            [x: string]: import("@angular/forms").FormControl<false | "" | 0 | Date | null>;
        }>;
    }>;
    languageCodes: LanguageCode[];
    readonly updatePermission: Permission[];
    constructor(changeDetector: ChangeDetectorRef, dataService: DataService, formBuilder: FormBuilder, notificationService: NotificationService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    save(): void;
    protected setFormValues(entity: GlobalSettings, languageCode: LanguageCode): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<GlobalSettingsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<GlobalSettingsComponent, "vdr-global-settings", never, {}, {}, never, never, false, never>;
}
