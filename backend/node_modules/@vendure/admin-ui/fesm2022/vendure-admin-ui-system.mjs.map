{"version":3,"file":"vendure-admin-ui-system.mjs","sources":["../../src/lib/system/src/components/health-check/health-check.component.ts","../../src/lib/system/src/components/health-check/health-check.component.html","../../src/lib/system/src/components/job-state-label/job-state-label.component.ts","../../src/lib/system/src/components/job-state-label/job-state-label.component.html","../../src/lib/system/src/components/job-list/job-list.component.ts","../../src/lib/system/src/components/job-list/job-list.component.html","../../src/lib/system/src/system.routes.ts","../../src/lib/system/src/system.module.ts","../../src/lib/system/src/public_api.ts","../../src/lib/system/src/vendure-admin-ui-system.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { HealthCheckService } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-health-check',\r\n    templateUrl: './health-check.component.html',\r\n    styleUrls: ['./health-check.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class HealthCheckComponent {\r\n    constructor(public healthCheckService: HealthCheckService) {}\r\n}\r\n","<vdr-page-header>\r\n    <vdr-page-title></vdr-page-title>\r\n</vdr-page-header>\r\n<vdr-page-body>\r\n    <vdr-page-block>\r\n        <vdr-action-bar>\r\n            <vdr-ab-left>\r\n                <div class=\"system-status-header\" *ngIf=\"healthCheckService.status$ | async as status\">\r\n                    <div class=\"status-icon\">\r\n                        <clr-icon\r\n                            [attr.shape]=\"status === 'ok' ? 'check-circle' : 'exclamation-circle'\"\r\n                            [ngClass]=\"{ 'is-success': status === 'ok', 'is-danger': status !== 'ok' }\"\r\n                            size=\"48\"\r\n                        ></clr-icon>\r\n                    </div>\r\n                    <div class=\"status-detail\">\r\n                        <ng-container *ngIf=\"status === 'ok'; else error\">\r\n                            {{ 'system.health-all-systems-up' | translate }}\r\n                        </ng-container>\r\n                        <ng-template #error>\r\n                            {{ 'system.health-error' | translate }}\r\n                        </ng-template>\r\n                        <div class=\"last-checked\">\r\n                            {{ 'system.health-last-checked' | translate }}:\r\n                            {{ healthCheckService.lastCheck$ | async | localeDate : 'mediumTime' }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </vdr-ab-left>\r\n            <vdr-ab-right>\r\n                <vdr-action-bar-items locationId=\"system-status\"></vdr-action-bar-items>\r\n                <button class=\"btn btn-secondary\" (click)=\"healthCheckService.refresh()\">\r\n                    <clr-icon shape=\"refresh\"></clr-icon> {{ 'system.health-refresh' | translate }}\r\n                </button>\r\n            </vdr-ab-right>\r\n        </vdr-action-bar>\r\n    </vdr-page-block>\r\n    <vdr-page-block>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th class=\"left\">\r\n                        {{ 'common.name' | translate }}\r\n                    </th>\r\n                    <th class=\"left\">\r\n                        {{ 'system.health-status' | translate }}\r\n                    </th>\r\n                    <th class=\"left\">\r\n                        {{ 'system.health-message' | translate }}\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let row of healthCheckService.details$ | async\">\r\n                    <td class=\"align-middle left\">{{ row.key }}</td>\r\n                    <td class=\"align-middle left\">\r\n                        <vdr-chip [colorType]=\"row.result.status === 'up' ? 'success' : 'error'\">\r\n                            <ng-container *ngIf=\"row.result.status === 'up'; else down\">\r\n                                <clr-icon shape=\"check-circle\"></clr-icon>\r\n                                {{ 'system.health-status-up' | translate }}\r\n                            </ng-container>\r\n                            <ng-template #down>\r\n                                <clr-icon shape=\"exclamation-circle\"></clr-icon>\r\n                                {{ 'system.health-status-down' | translate }}\r\n                            </ng-template>\r\n                        </vdr-chip>\r\n                    </td>\r\n                    <td class=\"align-middle left\">{{ row.result.message }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </vdr-page-block>\r\n</vdr-page-body>\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { JobInfoFragment, JobState } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-job-state-label',\n    templateUrl: './job-state-label.component.html',\n    styleUrls: ['./job-state-label.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class JobStateLabelComponent {\n    @Input()\n    job: JobInfoFragment;\n\n    get iconShape(): string {\n        switch (this.job.state) {\n            case JobState.COMPLETED:\n                return 'check-circle';\n            case JobState.FAILED:\n                return 'exclamation-circle';\n            case JobState.CANCELLED:\n                return 'ban';\n            case JobState.PENDING:\n            case JobState.RETRYING:\n                return 'hourglass';\n            case JobState.RUNNING:\n                return 'sync';\n        }\n    }\n\n    get colorType(): string {\n        switch (this.job.state) {\n            case JobState.COMPLETED:\n                return 'success';\n            case JobState.FAILED:\n            case JobState.CANCELLED:\n                return 'error';\n            case JobState.PENDING:\n            case JobState.RETRYING:\n                return '';\n            case JobState.RUNNING:\n                return 'warning';\n        }\n    }\n}\n","<vdr-chip [colorType]=\"colorType\">\r\n    <clr-icon [attr.shape]=\"iconShape\" class=\"mr1\"></clr-icon>\r\n    {{ job.state | titlecase }}\r\n    <span *ngIf=\"job.state === 'RUNNING'\" class=\"progress\">\r\n        {{ (job.progress / 100) | percent }}\r\n    </span>\r\n</vdr-chip>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n    BaseListComponent,\r\n    DataService,\r\n    GetAllJobsQuery,\r\n    GetJobQueueListQuery,\r\n    ItemOf,\r\n    JobState,\r\n    SortOrder,\r\n} from '@vendure/admin-ui/core';\r\nimport { Observable, timer } from 'rxjs';\r\nimport { filter, map, takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-job-list',\r\n    templateUrl: './job-list.component.html',\r\n    styleUrls: ['./job-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class JobListComponent\r\n    extends BaseListComponent<GetAllJobsQuery, ItemOf<GetAllJobsQuery, 'jobs'>>\r\n    implements OnInit\r\n{\r\n    queues$: Observable<GetJobQueueListQuery['jobQueues']>;\r\n    liveUpdate = new FormControl(true);\r\n    queueFilter = new FormControl('all');\r\n    stateFilter = new FormControl<JobState | string>('');\r\n\r\n    constructor(private dataService: DataService, router: Router, route: ActivatedRoute) {\r\n        super(router, route);\r\n        super.setQueryFn(\r\n            (...args: any[]) => this.dataService.settings.getAllJobs(...args),\r\n            data => data.jobs,\r\n            (skip, take) => {\r\n                const queueFilter =\r\n                    this.queueFilter.value === 'all' ? null : { queueName: { eq: this.queueFilter.value } };\r\n                const stateFilter = this.stateFilter.value;\r\n                return {\r\n                    options: {\r\n                        skip,\r\n                        take,\r\n                        filter: {\r\n                            ...queueFilter,\r\n                            ...(stateFilter ? { state: { eq: stateFilter } } : {}),\r\n                        },\r\n                        sort: {\r\n                            createdAt: SortOrder.DESC,\r\n                        },\r\n                    },\r\n                };\r\n            },\r\n        );\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        timer(5000, 2000)\r\n            .pipe(\r\n                takeUntil(this.destroy$),\r\n                filter(() => !!this.liveUpdate.value),\r\n            )\r\n            .subscribe(() => {\r\n                this.refresh();\r\n            });\r\n        this.queues$ = this.dataService.settings\r\n            .getJobQueues()\r\n            .mapStream(res => res.jobQueues)\r\n            .pipe(map(queues => [{ name: 'all', running: true }, ...queues]));\r\n    }\r\n\r\n    hasResult(job: ItemOf<GetAllJobsQuery, 'jobs'>): boolean {\r\n        const result = job.result;\r\n        if (result == null) {\r\n            return false;\r\n        }\r\n        if (typeof result === 'object') {\r\n            return Object.keys(result).length > 0;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    cancelJob(id: string) {\r\n        this.dataService.settings.cancelJob(id).subscribe(() => this.refresh());\r\n    }\r\n}\r\n","<vdr-page-header>\r\n    <vdr-page-title></vdr-page-title>\r\n</vdr-page-header>\r\n<vdr-page-body>\r\n    <vdr-page-block>\r\n        <vdr-action-bar>\r\n            <vdr-ab-left>\r\n                <clr-checkbox-wrapper class=\"mr-2\">\r\n                    <input type=\"checkbox\" clrCheckbox [formControl]=\"liveUpdate\" name=\"live-update\" />\r\n                    <label>{{ 'common.live-update' | translate }}</label>\r\n                </clr-checkbox-wrapper>\r\n            </vdr-ab-left>\r\n            <vdr-ab-right>\r\n                <vdr-action-bar-items locationId=\"job-list\"></vdr-action-bar-items>\r\n                <ng-select\r\n                    class=\"mr-2\"\r\n                    [addTag]=\"false\"\r\n                    [hideSelected]=\"true\"\r\n                    [multiple]=\"false\"\r\n                    [markFirst]=\"false\"\r\n                    [clearable]=\"false\"\r\n                    [searchable]=\"false\"\r\n                    [formControl]=\"stateFilter\"\r\n                    (change)=\"refresh()\"\r\n                >\r\n                    <ng-option [value]=\"''\">\r\n                        <vdr-chip>{{ 'system.job-state-all' | translate }}</vdr-chip>\r\n                    </ng-option>\r\n                    <ng-option [value]=\"'PENDING'\">\r\n                        <vdr-chip>{{ 'system.job-state-pending' | translate }}</vdr-chip>\r\n                    </ng-option>\r\n                    <ng-option [value]=\"'RUNNING'\">\r\n                        <vdr-chip colorType=\"warning\">{{ 'system.job-state-running' | translate }}</vdr-chip>\r\n                    </ng-option>\r\n                    <ng-option [value]=\"'COMPLETED'\">\r\n                        <vdr-chip colorType=\"success\">{{ 'system.job-state-completed' | translate }}</vdr-chip>\r\n                    </ng-option>\r\n                    <ng-option [value]=\"'FAILED'\">\r\n                        <vdr-chip colorType=\"error\">{{ 'system.job-state-failed' | translate }}</vdr-chip>\r\n                    </ng-option>\r\n                    <ng-option [value]=\"'CANCELLED'\">\r\n                        <vdr-chip colorType=\"error\">{{ 'system.job-state-cancelled' | translate }}</vdr-chip>\r\n                    </ng-option>\r\n                </ng-select>\r\n                <ng-select\r\n                    [addTag]=\"false\"\r\n                    [items]=\"queues$ | async\"\r\n                    [hideSelected]=\"true\"\r\n                    [multiple]=\"false\"\r\n                    [markFirst]=\"false\"\r\n                    [clearable]=\"false\"\r\n                    [searchable]=\"false\"\r\n                    bindValue=\"name\"\r\n                    [formControl]=\"queueFilter\"\r\n                    (change)=\"refresh()\"\r\n                >\r\n                    <ng-template ng-label-tmp ng-option-tmp let-item=\"item\">\r\n                        <ng-container *ngIf=\"item.name === 'all'; else others\">\r\n                            <vdr-chip>{{ 'system.all-job-queues' | translate }}</vdr-chip>\r\n                        </ng-container>\r\n                        <ng-template #others>\r\n                            <vdr-chip [colorFrom]=\"item.name\">{{ item.name }}</vdr-chip>\r\n                        </ng-template>\r\n                    </ng-template>\r\n                </ng-select>\r\n            </vdr-ab-right>\r\n        </vdr-action-bar>\r\n    </vdr-page-block>\r\n\r\n    <vdr-data-table-2\r\n        id=\"job-list\"\r\n        [items]=\"items$ | async\"\r\n        [itemsPerPage]=\"itemsPerPage$ | async\"\r\n        [totalItems]=\"totalItems$ | async\"\r\n        [currentPage]=\"currentPage$ | async\"\r\n        (pageChange)=\"setPageNumber($event)\"\r\n        (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n    >\r\n        <vdr-dt2-column [heading]=\"'common.id' | translate\" id=\"id\">\r\n            <ng-template let-job=\"item\">\r\n                {{ job.id }}\r\n            </ng-template>\r\n        </vdr-dt2-column>\r\n        <vdr-dt2-column [heading]=\"'common.created-at' | translate\" id=\"created-at\">\r\n            <ng-template let-job=\"item\">\r\n                {{ job.createdAt | timeAgo }}\r\n            </ng-template>\r\n        </vdr-dt2-column>\r\n        <vdr-dt2-column [heading]=\"'system.job-queue-name' | translate\" id=\"job-queue-name\" [optional]=\"false\">\r\n            <ng-template let-job=\"item\">\r\n                <vdr-chip [colorFrom]=\"job.queueName\">{{ job.queueName }}</vdr-chip>\r\n            </ng-template>\r\n        </vdr-dt2-column>\r\n        <vdr-dt2-column [heading]=\"'system.job-data' | translate\" id=\"job-data\" [optional]=\"false\">\r\n            <ng-template let-job=\"item\">\r\n                <vdr-dropdown *ngIf=\"job.data\">\r\n                    <button\r\n                        class=\"button-small\"\r\n                        vdrDropdownTrigger\r\n                        [title]=\"'system.job-data' | translate\"\r\n                    >\r\n                        <clr-icon shape=\"details\"></clr-icon>\r\n                    </button>\r\n                    <vdr-dropdown-menu>\r\n                        <div class=\"result-detail\">\r\n                            <vdr-object-tree [value]=\"job.data\"></vdr-object-tree>\r\n                        </div>\r\n                    </vdr-dropdown-menu>\r\n                </vdr-dropdown>\r\n            </ng-template>\r\n        </vdr-dt2-column>\r\n        <vdr-dt2-column [heading]=\"'system.job-state' | translate\" id=\"job-state\">\r\n            <ng-template let-job=\"item\">\r\n                <vdr-job-state-label [job]=\"job\"></vdr-job-state-label>\r\n                <div *ngIf=\"job.state === 'FAILED'\" class=\"retry-info\">after {{ job.attempts }} attempts</div>\r\n                <div *ngIf=\"job.state === 'RUNNING' || job.state === 'RETRYING'\" class=\"retry-info\">\r\n                    attempting {{ job.attempts }} of {{ job.retries + 1 }}\r\n                </div>\r\n            </ng-template>\r\n        </vdr-dt2-column>\r\n        <vdr-dt2-column [heading]=\"'system.job-duration' | translate\" id=\"job-duration\">\r\n            <ng-template let-job=\"item\">\r\n                {{ job.duration | duration }}\r\n            </ng-template>\r\n        </vdr-dt2-column>\r\n        <vdr-dt2-column [heading]=\"'system.job-result' | translate\" id=\"job-result\">\r\n            <ng-template let-job=\"item\">\r\n                <vdr-dropdown *ngIf=\"hasResult(job)\">\r\n                    <button class=\"button-small mr-1\" vdrDropdownTrigger>\r\n                        <clr-icon shape=\"details\"></clr-icon>\r\n                        {{ 'system.job-result' | translate }}\r\n                    </button>\r\n                    <vdr-dropdown-menu>\r\n                        <div class=\"result-detail\">\r\n                            <vdr-object-tree [value]=\"job.result\"></vdr-object-tree>\r\n                        </div>\r\n                    </vdr-dropdown-menu>\r\n                </vdr-dropdown>\r\n                <vdr-dropdown *ngIf=\"job.error\">\r\n                    <button class=\"button-small\" vdrDropdownTrigger>\r\n                        <clr-icon shape=\"exclamation-circle\"></clr-icon>\r\n                        {{ 'system.job-error' | translate }}\r\n                    </button>\r\n                    <vdr-dropdown-menu>\r\n                        <div class=\"result-detail\">\r\n                            {{ job.error }}\r\n                        </div>\r\n                    </vdr-dropdown-menu>\r\n                </vdr-dropdown>\r\n                <vdr-dropdown *ngIf=\"!job.isSettled && job.state !== 'FAILED'\">\r\n                    <button class=\"icon-button\" vdrDropdownTrigger>\r\n                        <clr-icon shape=\"ellipsis-vertical\" size=\"12\"></clr-icon>\r\n                    </button>\r\n                    <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                        <button\r\n                            type=\"button\"\r\n                            class=\"delete-button\"\r\n                            (click)=\"cancelJob(job.id)\"\r\n                            [disabled]=\"!(['DeleteSettings', 'DeleteSystem'] | hasPermission)\"\r\n                            vdrDropdownItem\r\n                        >\r\n                            <clr-icon shape=\"ban\" class=\"is-danger\"></clr-icon>\r\n                            {{ 'common.cancel' | translate }}\r\n                        </button>\r\n                    </vdr-dropdown-menu>\r\n                </vdr-dropdown>\r\n            </ng-template>\r\n        </vdr-dt2-column>\r\n    </vdr-data-table-2>\r\n</vdr-page-body>\r\n","import { Route } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\n\r\nimport { HealthCheckComponent } from './components/health-check/health-check.component';\r\nimport { JobListComponent } from './components/job-list/job-list.component';\r\n\r\nexport const systemRoutes: Route[] = [\r\n    {\r\n        path: 'jobs',\r\n        component: JobListComponent,\r\n        data: {\r\n            breadcrumb: _('breadcrumb.job-queue'),\r\n        },\r\n    },\r\n    {\r\n        path: 'system-status',\r\n        component: HealthCheckComponent,\r\n        data: {\r\n            breadcrumb: _('breadcrumb.system-status'),\r\n        },\r\n    },\r\n];\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '@vendure/admin-ui/core';\r\n\r\nimport { HealthCheckComponent } from './components/health-check/health-check.component';\r\nimport { JobListComponent } from './components/job-list/job-list.component';\r\nimport { JobStateLabelComponent } from './components/job-state-label/job-state-label.component';\r\nimport { systemRoutes } from './system.routes';\r\n\r\n@NgModule({\r\n    declarations: [HealthCheckComponent, JobListComponent, JobStateLabelComponent],\r\n    imports: [SharedModule, RouterModule.forChild(systemRoutes)],\r\n})\r\nexport class SystemModule {}\r\n","// This file was generated by the build-public-api.ts script\nexport * from './components/health-check/health-check.component';\nexport * from './components/job-list/job-list.component';\nexport * from './components/job-state-label/job-state-label.component';\nexport * from './system.module';\nexport * from './system.routes';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i2","i3","i1","i4","i7.JobStateLabelComponent","i8","_"],"mappings":"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"}