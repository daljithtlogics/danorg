{"version":3,"file":"vendure-admin-ui-login.mjs","sources":["../../src/lib/login/src/components/login/login.component.ts","../../src/lib/login/src/components/login/login.component.html","../../src/lib/login/src/providers/login.guard.ts","../../src/lib/login/src/login.routes.ts","../../src/lib/login/src/login.module.ts","../../src/lib/login/src/public_api.ts","../../src/lib/login/src/vendure-admin-ui-login.ts"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ADMIN_UI_VERSION, AuthService, AUTH_REDIRECT_PARAM, getAppConfig } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent {\r\n    username = '';\r\n    password = '';\r\n    rememberMe = false;\r\n    version = ADMIN_UI_VERSION;\r\n    errorMessage: string | undefined;\r\n    brand = getAppConfig().brand;\r\n    hideVendureBranding = getAppConfig().hideVendureBranding;\r\n    hideVersion = getAppConfig().hideVersion;\r\n    customImageUrl = getAppConfig().loginImageUrl;\r\n    imageUrl = '';\r\n    imageUnsplashUrl = '';\r\n    imageLocation = '';\r\n    imageCreator = '';\r\n    imageCreatorUrl = '';\r\n\r\n    constructor(private authService: AuthService, private router: Router, private httpClient: HttpClient) {\r\n        if (this.customImageUrl) {\r\n            this.imageUrl = this.customImageUrl;\r\n        } else {\r\n            this.loadImage();\r\n        }\r\n    }\r\n\r\n    logIn(): void {\r\n        this.errorMessage = undefined;\r\n        this.authService.logIn(this.username, this.password, this.rememberMe).subscribe(result => {\r\n            switch (result.__typename) {\r\n                case 'CurrentUser':\r\n                    const redirect = this.getRedirectRoute();\r\n                    this.router.navigateByUrl(redirect ? redirect : '/');\r\n                    break;\r\n                case 'InvalidCredentialsError':\r\n                case 'NativeAuthStrategyError':\r\n                    this.errorMessage = result.message;\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    loadImage() {\r\n        this.httpClient\r\n            .get('https://login-image.vendure.io')\r\n            .toPromise()\r\n            .then(res => {\r\n                this.updateImage(res);\r\n            });\r\n    }\r\n\r\n    updateImage(res: any) {\r\n        const user: any = (res as any).user;\r\n        const location: any = (res as any).location;\r\n\r\n        this.imageUrl = res.urls.regular + '?utm_source=Vendure+Login+Image&utm_medium=referral';\r\n        this.imageCreator = user.name;\r\n        this.imageLocation = location.name;\r\n        this.imageCreatorUrl = user.links.html + '?utm_source=Vendure+Login+Image&utm_medium=referral';\r\n        this.imageUnsplashUrl = res.links.html;\r\n    }\r\n\r\n    /**\r\n     * Attempts to read a redirect param from the current url and parse it into a\r\n     * route from which the user was redirected after a 401 error.\r\n     */\r\n    private getRedirectRoute(): string | undefined {\r\n        let redirectTo: string | undefined;\r\n        const re = new RegExp(`${AUTH_REDIRECT_PARAM}=(.*)`);\r\n        try {\r\n            const redirectToParam = window.location.search.match(re);\r\n            if (redirectToParam && 1 < redirectToParam.length) {\r\n                redirectTo = atob(decodeURIComponent(redirectToParam[1]));\r\n            }\r\n        } catch (e: any) {\r\n            // ignore\r\n        }\r\n        return redirectTo;\r\n    }\r\n}\r\n","<div class=\"login-wrapper\">\r\n    <div class=\"login-wrapper-inner\">\r\n        <div class=\"login-wrapper-image\">\r\n            <div class=\"login-wrapper-image-content\">\r\n                <div class=\"login-wrapper-image-title\">\r\n                    {{ 'common.login-image-title' | translate }}\r\n                </div>\r\n                <div class=\"login-wrapper-image-copyright\">\r\n                    <p *ngIf=\"imageCreator\" class=\"creator\">\r\n                        Photo by <a [href]=\"imageCreatorUrl\" target=\"_blank\">{{ imageCreator }}</a> on\r\n                        <a [href]=\"imageUnsplashUrl\" target=\"_blank\">Unsplash</a>\r\n                    </p>\r\n                    <p *ngIf=\"imageLocation\" class=\"location\">{{ imageLocation }}</p>\r\n                </div>\r\n            </div>\r\n            <img *ngIf=\"imageUrl\" [src]=\"imageUrl\" [alt]=\"imageUrl\" />\r\n        </div>\r\n        <div class=\"login-wrapper-form\">\r\n            <p class=\"login-title\">\r\n                {{ 'common.login-title' | translate : { brand: hideVendureBranding ? brand : 'Vendure' } }}\r\n            </p>\r\n            <form class=\"login-form\">\r\n                <div class=\"login-group\">\r\n                    <input\r\n                        class=\"username\"\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        id=\"login_username\"\r\n                        [(ngModel)]=\"username\"\r\n                        [placeholder]=\"'common.username' | translate\"\r\n                    />\r\n                    <input\r\n                        class=\"password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        id=\"login_password\"\r\n                        [(ngModel)]=\"password\"\r\n                        [placeholder]=\"'common.password' | translate\"\r\n                    />\r\n                    <clr-alert\r\n                        [clrAlertType]=\"'danger'\"\r\n                        [clrAlertClosable]=\"false\"\r\n                        [class.visible]=\"errorMessage\"\r\n                        class=\"login-error\"\r\n                    >\r\n                        <clr-alert-item>\r\n                            <span class=\"alert-text\">\r\n                                {{ errorMessage }}\r\n                            </span>\r\n                        </clr-alert-item>\r\n                    </clr-alert>\r\n                    <clr-checkbox-wrapper>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            clrCheckbox\r\n                            id=\"rememberme\"\r\n                            name=\"rememberme\"\r\n                            [(ngModel)]=\"rememberMe\"\r\n                        />\r\n                        <label>{{ 'common.remember-me' | translate }}</label>\r\n                    </clr-checkbox-wrapper>\r\n                    <div>\r\n                        <button\r\n                            type=\"submit\"\r\n                            class=\"button primary login-button\"\r\n                            (click)=\"logIn()\"\r\n                            [disabled]=\"!username || !password\"\r\n                        >\r\n                            {{ 'common.login' | translate }}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"version\">\r\n                    <span *ngIf=\"brand\"\r\n                        >{{ brand }} <span *ngIf=\"!hideVendureBranding || !hideVersion\">-</span></span\r\n                    >\r\n                    <span *ngIf=\"!hideVendureBranding\">vendure</span>\r\n                    <span *ngIf=\"!hideVersion\">v{{ version }}</span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <img class=\"login-wrapper-logo\" src=\"assets/logo-login.webp\" *ngIf=\"!hideVendureBranding\" />\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { AuthService } from '@vendure/admin-ui/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n/**\r\n * This guard prevents loggen-in users from navigating to the login screen.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class LoginGuard  {\r\n    constructor(private router: Router, private authService: AuthService) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot): Observable<boolean> {\r\n        return this.authService.checkAuthenticatedStatus().pipe(\r\n            map(authenticated => {\r\n                if (authenticated) {\r\n                    this.router.navigate(['/']);\r\n                }\r\n                return !authenticated;\r\n            }),\r\n        );\r\n    }\r\n}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { LoginGuard } from './providers/login.guard';\r\n\r\nexport const loginRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: LoginComponent,\r\n        pathMatch: 'full',\r\n        canActivate: [LoginGuard],\r\n    },\r\n];\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '@vendure/admin-ui/core';\r\n\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { loginRoutes } from './login.routes';\r\n\r\n@NgModule({\r\n    imports: [SharedModule, RouterModule.forChild(loginRoutes)],\r\n    exports: [],\r\n    declarations: [LoginComponent],\r\n})\r\nexport class LoginModule {}\r\n","// This file was generated by the build-public-api.ts script\nexport * from './components/login/login.component';\nexport * from './login.module';\nexport * from './login.routes';\nexport * from './providers/login.guard';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i2","i1"],"mappings":"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"}