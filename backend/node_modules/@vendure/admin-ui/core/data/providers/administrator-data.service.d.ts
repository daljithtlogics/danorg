import * as Codegen from '../../common/generated-types';
import { BaseDataService } from './base-data.service';
export declare class AdministratorDataService {
    private baseDataService;
    constructor(baseDataService: BaseDataService);
    getActiveAdministrator(): import("@vendure/admin-ui/core").QueryResult<Codegen.GetActiveAdministratorQuery, Record<string, any>>;
    createAdministrator(input: Codegen.CreateAdministratorInput): import("rxjs").Observable<Codegen.CreateAdministratorMutation>;
    updateAdministrator(input: Codegen.UpdateAdministratorInput): import("rxjs").Observable<Codegen.UpdateAdministratorMutation>;
    updateActiveAdministrator(input: Codegen.UpdateActiveAdministratorInput): import("rxjs").Observable<Codegen.UpdateActiveAdministratorMutation>;
    deleteAdministrator(id: string): import("rxjs").Observable<Codegen.DeleteAdministratorMutation>;
    deleteAdministrators(ids: string[]): import("rxjs").Observable<Codegen.DeleteAdministratorsMutation>;
    getRoles(take?: number, skip?: number): import("@vendure/admin-ui/core").QueryResult<Codegen.GetRolesQuery, Codegen.Exact<{
        options?: Codegen.InputMaybe<Codegen.RoleListOptions> | undefined;
    }>>;
    createRole(input: Codegen.CreateRoleInput): import("rxjs").Observable<Codegen.CreateRoleMutation>;
    updateRole(input: Codegen.UpdateRoleInput): import("rxjs").Observable<Codegen.UpdateRoleMutation>;
    deleteRole(id: string): import("rxjs").Observable<Codegen.DeleteRoleMutation>;
    deleteRoles(ids: string[]): import("rxjs").Observable<Codegen.DeleteRolesMutation>;
}
