import * as Codegen from '../../common/generated-types';
import { BaseDataService } from './base-data.service';
export declare class CollectionDataService {
    private baseDataService;
    constructor(baseDataService: BaseDataService);
    getCollectionFilters(): import("@vendure/admin-ui/core").QueryResult<Codegen.GetCollectionFiltersQuery, Record<string, any>>;
    getCollections(options?: Codegen.CollectionListOptions): import("@vendure/admin-ui/core").QueryResult<Codegen.GetCollectionListQuery, Codegen.Exact<{
        options?: Codegen.InputMaybe<Codegen.CollectionListOptions> | undefined;
    }>>;
    createCollection(input: Codegen.CreateCollectionInput): import("rxjs").Observable<Codegen.CreateCollectionMutation>;
    updateCollection(input: Codegen.UpdateCollectionInput): import("rxjs").Observable<Codegen.UpdateCollectionMutation>;
    moveCollection(inputs: Codegen.MoveCollectionInput[]): import("rxjs").Observable<Codegen.MoveCollectionMutation[]>;
    deleteCollection(id: string): import("rxjs").Observable<Codegen.DeleteCollectionMutation>;
    deleteCollections(ids: string[]): import("rxjs").Observable<Codegen.DeleteCollectionsMutation>;
    previewCollectionVariants(input: Codegen.PreviewCollectionVariantsInput, options: Codegen.ProductVariantListOptions): import("@vendure/admin-ui/core").QueryResult<Codegen.PreviewCollectionContentsQuery, Codegen.Exact<{
        input: Codegen.PreviewCollectionVariantsInput;
        options?: Codegen.InputMaybe<Codegen.ProductVariantListOptions> | undefined;
    }>>;
    getCollectionContents(id: string, take?: number, skip?: number, filterTerm?: string): import("@vendure/admin-ui/core").QueryResult<Codegen.GetCollectionContentsQuery, Codegen.Exact<{
        id: string;
        options?: Codegen.InputMaybe<Codegen.ProductVariantListOptions> | undefined;
    }>>;
    assignCollectionsToChannel(input: Codegen.AssignCollectionsToChannelInput): import("rxjs").Observable<Codegen.AssignCollectionsToChannelMutation>;
    removeCollectionsFromChannel(input: Codegen.RemoveCollectionsFromChannelInput): import("rxjs").Observable<Codegen.RemoveCollectionsFromChannelMutation>;
}
