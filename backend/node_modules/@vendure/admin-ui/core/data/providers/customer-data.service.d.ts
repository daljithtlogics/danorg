import * as Codegen from '../../common/generated-types';
import { BaseDataService } from './base-data.service';
export declare class CustomerDataService {
    private baseDataService;
    constructor(baseDataService: BaseDataService);
    getCustomerList(take?: number, skip?: number, filterTerm?: string): import("@vendure/admin-ui/core").QueryResult<Codegen.GetCustomerListQuery, Codegen.Exact<{
        options?: Codegen.InputMaybe<Codegen.CustomerListOptions> | undefined;
    }>>;
    createCustomer(input: Codegen.CreateCustomerInput, password?: string | null): import("rxjs").Observable<Codegen.CreateCustomerMutation>;
    updateCustomer(input: Codegen.UpdateCustomerInput): import("rxjs").Observable<Codegen.UpdateCustomerMutation>;
    deleteCustomer(id: string): import("rxjs").Observable<Codegen.DeleteCustomerMutation>;
    deleteCustomers(ids: string[]): import("rxjs").Observable<Codegen.DeleteCustomersMutation>;
    createCustomerAddress(customerId: string, input: Codegen.CreateAddressInput): import("rxjs").Observable<Codegen.CreateCustomerAddressMutation>;
    updateCustomerAddress(input: Codegen.UpdateAddressInput): import("rxjs").Observable<Codegen.UpdateCustomerAddressMutation>;
    deleteCustomerAddress(id: string): import("rxjs").Observable<Codegen.DeleteCustomerAddressMutation>;
    createCustomerGroup(input: Codegen.CreateCustomerGroupInput): import("rxjs").Observable<Codegen.CreateCustomerGroupMutation>;
    updateCustomerGroup(input: Codegen.UpdateCustomerGroupInput): import("rxjs").Observable<Codegen.UpdateCustomerGroupMutation>;
    deleteCustomerGroup(id: string): import("rxjs").Observable<Codegen.DeleteCustomerGroupMutation>;
    deleteCustomerGroups(ids: string[]): import("rxjs").Observable<Codegen.DeleteCustomerGroupsMutation>;
    getCustomerGroupList(options?: Codegen.CustomerGroupListOptions): import("@vendure/admin-ui/core").QueryResult<Codegen.GetCustomerGroupsQuery, Codegen.Exact<{
        options?: Codegen.InputMaybe<Codegen.CustomerGroupListOptions> | undefined;
    }>>;
    getCustomerGroupWithCustomers(id: string, options: Codegen.CustomerListOptions): import("@vendure/admin-ui/core").QueryResult<Codegen.GetCustomerGroupWithCustomersQuery, Codegen.Exact<{
        id: string;
        options?: Codegen.InputMaybe<Codegen.CustomerListOptions> | undefined;
    }>>;
    addCustomersToGroup(groupId: string, customerIds: string[]): import("rxjs").Observable<Codegen.AddCustomersToGroupMutation>;
    removeCustomersFromGroup(groupId: string, customerIds: string[]): import("rxjs").Observable<Codegen.RemoveCustomersFromGroupMutation>;
    getCustomerHistory(id: string, options?: Codegen.HistoryEntryListOptions): import("@vendure/admin-ui/core").QueryResult<Codegen.GetCustomerHistoryQuery, Codegen.Exact<{
        id: string;
        options?: Codegen.InputMaybe<Codegen.HistoryEntryListOptions> | undefined;
    }>>;
    addNoteToCustomer(customerId: string, note: string): import("rxjs").Observable<Codegen.AddNoteToCustomerMutation>;
    updateCustomerNote(input: Codegen.UpdateCustomerNoteInput): import("rxjs").Observable<Codegen.UpdateCustomerNoteMutation>;
    deleteCustomerNote(id: string): import("rxjs").Observable<Codegen.DeleteCustomerNoteMutation>;
}
