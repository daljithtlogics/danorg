import * as Codegen from '../../common/generated-types';
import { BaseDataService } from './base-data.service';
export declare class OrderDataService {
    private baseDataService;
    constructor(baseDataService: BaseDataService);
    getOrders(options?: Codegen.OrderListOptions): import("@vendure/admin-ui/core").QueryResult<Codegen.GetOrderListQuery, Codegen.Exact<{
        options?: Codegen.InputMaybe<Codegen.OrderListOptions> | undefined;
    }>>;
    getOrder(id: string): import("@vendure/admin-ui/core").QueryResult<Codegen.GetOrderQuery, Codegen.Exact<{
        id: string;
    }>>;
    getOrderHistory(id: string, options?: Codegen.HistoryEntryListOptions): import("@vendure/admin-ui/core").QueryResult<Codegen.GetOrderHistoryQuery, Codegen.Exact<{
        id: string;
        options?: Codegen.InputMaybe<Codegen.HistoryEntryListOptions> | undefined;
    }>>;
    settlePayment(id: string): import("rxjs").Observable<Codegen.SettlePaymentMutation>;
    cancelPayment(id: string): import("rxjs").Observable<Codegen.CancelPaymentMutation>;
    transitionPaymentToState(id: string, state: string): import("rxjs").Observable<Codegen.TransitionPaymentToStateMutation>;
    createFulfillment(input: Codegen.FulfillOrderInput): import("rxjs").Observable<Codegen.CreateFulfillmentMutation>;
    transitionFulfillmentToState(id: string, state: string): import("rxjs").Observable<Codegen.TransitionFulfillmentToStateMutation>;
    cancelOrder(input: Codegen.CancelOrderInput): import("rxjs").Observable<Codegen.CancelOrderMutation>;
    refundOrder(input: Codegen.RefundOrderInput): import("rxjs").Observable<Codegen.RefundOrderMutation>;
    settleRefund(input: Codegen.SettleRefundInput, orderId: string): import("rxjs").Observable<Codegen.SettleRefundMutation>;
    addNoteToOrder(input: Codegen.AddNoteToOrderInput): import("rxjs").Observable<Codegen.AddNoteToOrderMutation>;
    updateOrderNote(input: Codegen.UpdateOrderNoteInput): import("rxjs").Observable<Codegen.UpdateOrderNoteMutation>;
    deleteOrderNote(id: string): import("rxjs").Observable<Codegen.DeleteOrderNoteMutation>;
    transitionToState(id: string, state: string): import("rxjs").Observable<Codegen.TransitionOrderToStateMutation>;
    updateOrderCustomFields(input: Codegen.UpdateOrderInput): import("rxjs").Observable<Codegen.UpdateOrderCustomFieldsMutation>;
    modifyOrder(input: Codegen.ModifyOrderInput): import("rxjs").Observable<Codegen.ModifyOrderMutation>;
    addManualPaymentToOrder(input: Codegen.ManualPaymentInput): import("rxjs").Observable<Codegen.AddManualPaymentMutation>;
    createDraftOrder(): import("rxjs").Observable<Codegen.CreateDraftOrderMutation>;
    deleteDraftOrder(orderId: string): import("rxjs").Observable<Codegen.DeleteDraftOrderMutation>;
    addItemToDraftOrder(orderId: string, input: Codegen.AddItemToDraftOrderInput): import("rxjs").Observable<Codegen.AddItemToDraftOrderMutation>;
    adjustDraftOrderLine(orderId: string, input: Codegen.AdjustDraftOrderLineInput): import("rxjs").Observable<Codegen.AdjustDraftOrderLineMutation>;
    removeDraftOrderLine(orderId: string, orderLineId: string): import("rxjs").Observable<Codegen.RemoveDraftOrderLineMutation>;
    setCustomerForDraftOrder(orderId: string, { customerId, input }: {
        customerId?: string;
        input?: Codegen.CreateCustomerInput;
    }): import("rxjs").Observable<Codegen.SetCustomerForDraftOrderMutation>;
    setDraftOrderShippingAddress(orderId: string, input: Codegen.CreateAddressInput): import("rxjs").Observable<Codegen.SetDraftOrderShippingAddressMutation>;
    setDraftOrderBillingAddress(orderId: string, input: Codegen.CreateAddressInput): import("rxjs").Observable<Codegen.SetDraftOrderBillingAddressMutation>;
    applyCouponCodeToDraftOrder(orderId: string, couponCode: string): import("rxjs").Observable<Codegen.ApplyCouponCodeToDraftOrderMutation>;
    removeCouponCodeFromDraftOrder(orderId: string, couponCode: string): import("rxjs").Observable<Codegen.RemoveCouponCodeFromDraftOrderMutation>;
    getDraftOrderEligibleShippingMethods(orderId: string): import("@vendure/admin-ui/core").QueryResult<Codegen.DraftOrderEligibleShippingMethodsQuery, Codegen.Exact<{
        orderId: string;
    }>>;
    setDraftOrderShippingMethod(orderId: string, shippingMethodId: string): import("rxjs").Observable<Codegen.SetDraftOrderShippingMethodMutation>;
}
