import { ActivatedRoute } from '@angular/router';
import { Observable } from 'rxjs';
import { ActionBarContext, ActionBarItem, NavMenuBadgeType, NavMenuItem, NavMenuSection, RouterLinkDefinition } from './nav-builder-types';
import * as i0 from "@angular/core";
/**
 * This service is used to define the contents of configurable menus in the application.
 */
export declare class NavBuilderService {
    menuConfig$: Observable<NavMenuSection[]>;
    actionBarConfig$: Observable<ActionBarItem[]>;
    sectionBadges: {
        [sectionId: string]: Observable<NavMenuBadgeType>;
    };
    private initialNavMenuConfig$;
    private addedNavMenuSections;
    private addedNavMenuItems;
    private addedActionBarItems;
    constructor();
    /**
     * Used to define the initial sections and items of the main nav menu.
     */
    defineNavMenuSections(config: NavMenuSection[]): void;
    /**
     * Add a section to the main nav menu. Providing the `before` argument will
     * move the section before any existing section with the specified id. If
     * omitted (or if the id is not found) the section will be appended to the
     * existing set of sections.
     *
     * Providing the `id` of an existing section will replace that section.
     */
    addNavMenuSection(config: NavMenuSection, before?: string): void;
    /**
     * Add a menu item to an existing section specified by `sectionId`. The id of the section
     * can be found by inspecting the DOM and finding the `data-section-id` attribute.
     * Providing the `before` argument will move the item before any existing item with the specified id.
     * If omitted (or if the name is not found) the item will be appended to the
     * end of the section.
     *
     * Providing the `id` of an existing item in that section will replace
     * that item.
     */
    addNavMenuItem(config: NavMenuItem, sectionId: string, before?: string): void;
    /**
     * Adds a button to the ActionBar at the top right of each list or detail view. The locationId can
     * be determined by inspecting the DOM and finding the `<vdr-action-bar>` element and its
     * `data-location-id` attribute.
     */
    addActionBarItem(config: ActionBarItem): void;
    getRouterLink(config: {
        routerLink?: RouterLinkDefinition;
        context: ActionBarContext;
    }, route: ActivatedRoute): string[] | null;
    private setupStreams;
    static ɵfac: i0.ɵɵFactoryDeclaration<NavBuilderService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<NavBuilderService>;
}
