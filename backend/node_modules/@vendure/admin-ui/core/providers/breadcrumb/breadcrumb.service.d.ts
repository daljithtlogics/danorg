import { OnDestroy } from '@angular/core';
import { ActivatedRoute, Data, Params, Router } from '@angular/router';
import { Observable } from 'rxjs';
import { DataService } from '../../data/providers/data.service';
import * as i0 from "@angular/core";
export type BreadcrumbString = string;
export interface BreadcrumbLabelLinkPair {
    label: string;
    link: any[];
}
export type BreadcrumbValue = BreadcrumbString | BreadcrumbLabelLinkPair | BreadcrumbLabelLinkPair[];
export type BreadcrumbFunction = (data: Data, params: Params, dataService: DataService) => BreadcrumbValue | Observable<BreadcrumbValue>;
export type BreadcrumbDefinition = BreadcrumbValue | BreadcrumbFunction | Observable<BreadcrumbValue>;
export declare class BreadcrumbService implements OnDestroy {
    private router;
    private route;
    private dataService;
    breadcrumbs$: Observable<Array<{
        link: string | any[];
        label: string;
    }>>;
    private destroy$;
    constructor(router: Router, route: ActivatedRoute, dataService: DataService);
    ngOnDestroy(): void;
    private generateBreadcrumbs;
    /**
     * Walks the route definition tree to assemble an array from which the breadcrumbs can be derived.
     */
    private assembleBreadcrumbParts;
    /**
     * Accounts for relative routes in the link array, i.e. arrays whose first element is either:
     * * `./`   - this appends the rest of the link segments to the current active route
     * * `../`  - this removes the last segment of the current active route, and appends the link segments
     *            to the parent route.
     */
    private normalizeRelativeLinks;
    static ɵfac: i0.ɵɵFactoryDeclaration<BreadcrumbService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<BreadcrumbService>;
}
