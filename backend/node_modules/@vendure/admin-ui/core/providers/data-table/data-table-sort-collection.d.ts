import { ActivatedRoute, Router } from '@angular/router';
import { CustomFieldConfig } from '../../common/generated-types';
import { DataTableSort, DataTableSortOptions, DataTableSortOrder } from './data-table-sort';
export declare class DataTableSortCollection<SortInput extends Record<string, 'ASC' | 'DESC'>, Names extends [...Array<keyof SortInput>] = []> {
    #private;
    private router;
    valueChanges: import("rxjs").Observable<{
        name: string;
        sortOrder: DataTableSortOrder | undefined;
    }[]>;
    private readonly destroy$;
    constructor(router: Router);
    get length(): number;
    destroy(): void;
    addSort<Name extends keyof SortInput>(config: DataTableSortOptions<SortInput, Name>): DataTableSortCollection<SortInput, [...Names, Name]>;
    addSorts<Name extends keyof SortInput>(configs: Array<DataTableSortOptions<SortInput, Name>>): DataTableSortCollection<SortInput, [...Names, Name]>;
    addCustomFieldSorts(customFields: CustomFieldConfig[]): this;
    defaultSort(name: keyof SortInput, sortOrder: DataTableSortOrder): this;
    get(name: Names[number]): DataTableSort<SortInput> | undefined;
    connectToRoute(route: ActivatedRoute): this;
    createSortInput(): SortInput;
    private serialize;
    private onSetValue;
}
