import { OnInit } from '@angular/core';
import { FormControl } from '@angular/forms';
import { DefaultFormComponentId, DefaultFormComponentUiConfig } from '@vendure/common/lib/shared-types';
import { Observable } from 'rxjs';
import { FormInputComponent } from '../../../common/component-registry-types';
import { GetProductVariantQuery, ProductSelectorSearchQuery } from '../../../common/generated-types';
import { DataService } from '../../../data/providers/data.service';
import * as i0 from "@angular/core";
/**
 * @description
 * Allows the selection of multiple ProductVariants via an autocomplete select input.
 * Should be used with `ID` type **list** fields which represent ProductVariant IDs.
 *
 * @docsCategory custom-input-components
 * @docsPage default-inputs
 */
export declare class ProductSelectorFormInputComponent implements FormInputComponent, OnInit {
    private dataService;
    static readonly id: DefaultFormComponentId;
    readonly isListInput = true;
    readonly: boolean;
    formControl: FormControl<Array<string | {
        id: string;
    }>>;
    config: DefaultFormComponentUiConfig<'product-selector-form-input'>;
    selection$: Observable<Array<GetProductVariantQuery['productVariant']>>;
    constructor(dataService: DataService);
    ngOnInit(): void;
    addProductVariant(product: ProductSelectorSearchQuery['search']['items'][number]): void;
    removeProductVariant(id: string): void;
    private getId;
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductSelectorFormInputComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ProductSelectorFormInputComponent, "vdr-product-selector-form-input", never, {}, {}, never, never, false, never>;
}
