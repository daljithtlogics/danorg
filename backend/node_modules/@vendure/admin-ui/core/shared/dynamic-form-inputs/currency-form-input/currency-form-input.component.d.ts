import { UntypedFormControl } from '@angular/forms';
import { DefaultFormComponentConfig, DefaultFormComponentId } from '@vendure/common/lib/shared-types';
import { Observable } from 'rxjs';
import { FormInputComponent } from '../../../common/component-registry-types';
import { CurrencyCode } from '../../../common/generated-types';
import { DataService } from '../../../data/providers/data.service';
import * as i0 from "@angular/core";
/**
 * @description
 * An input for monetary values. Should be used with `int` type fields.
 *
 * @docsCategory custom-input-components
 * @docsPage default-inputs
 */
export declare class CurrencyFormInputComponent implements FormInputComponent {
    private dataService;
    static readonly id: DefaultFormComponentId;
    readonly: boolean;
    formControl: UntypedFormControl;
    currencyCode$: Observable<CurrencyCode>;
    config: DefaultFormComponentConfig<'currency-form-input'>;
    constructor(dataService: DataService);
    static ɵfac: i0.ɵɵFactoryDeclaration<CurrencyFormInputComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CurrencyFormInputComponent, "vdr-currency-form-input", never, { "readonly": { "alias": "readonly"; "required": false; }; }, {}, never, never, false, never>;
}
