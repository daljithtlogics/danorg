import { UntypedFormControl } from '@angular/forms';
import { DefaultFormComponentId } from '@vendure/common/lib/shared-types';
import { FormInputComponent, InputComponentConfig } from '../../../common/component-registry-types';
import { FacetValueFragment } from '../../../common/generated-types';
import * as i0 from "@angular/core";
/**
 * @description
 * Allows the selection of multiple FacetValues via an autocomplete select input.
 * Should be used with `ID` type **list** fields which represent FacetValue IDs.
 *
 * @docsCategory custom-input-components
 * @docsPage default-inputs
 */
export declare class FacetValueFormInputComponent implements FormInputComponent {
    static readonly id: DefaultFormComponentId;
    readonly isListInput = true;
    readonly: boolean;
    formControl: UntypedFormControl;
    config: InputComponentConfig;
    valueTransformFn: (values: FacetValueFragment[]) => string | FacetValueFragment[];
    static ɵfac: i0.ɵɵFactoryDeclaration<FacetValueFormInputComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<FacetValueFormInputComponent, "vdr-facet-value-form-input", never, {}, {}, never, never, false, never>;
}
