import { OnInit } from '@angular/core';
import { FormControl } from '@angular/forms';
import { DefaultFormComponentConfig, DefaultFormComponentId } from '@vendure/common/lib/shared-types';
import { Observable } from 'rxjs';
import { ItemOf } from '../../../common/base-list.component';
import { FormInputComponent } from '../../../common/component-registry-types';
import { GetCustomerGroupsQuery } from '../../../common/generated-types';
import { DataService } from '../../../data/providers/data.service';
import * as i0 from "@angular/core";
/**
 * @description
 * Allows the selection of a Customer via an autocomplete select input.
 * Should be used with `ID` type fields which represent Customer IDs.
 *
 * @docsCategory custom-input-components
 * @docsPage default-inputs
 */
export declare class CustomerGroupFormInputComponent implements FormInputComponent, OnInit {
    private dataService;
    static readonly id: DefaultFormComponentId;
    readonly: boolean;
    formControl: FormControl<string | {
        id: string;
    }>;
    customerGroups$: Observable<GetCustomerGroupsQuery['customerGroups']['items']>;
    config: DefaultFormComponentConfig<'customer-group-form-input'>;
    constructor(dataService: DataService);
    ngOnInit(): void;
    selectGroup(group: ItemOf<GetCustomerGroupsQuery, 'customerGroups'>): void;
    compareWith(o1: ItemOf<GetCustomerGroupsQuery, 'customerGroups'>, o2: ItemOf<GetCustomerGroupsQuery, 'customerGroups'>): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<CustomerGroupFormInputComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CustomerGroupFormInputComponent, "vdr-customer-group-form-input", never, { "readonly": { "alias": "readonly"; "required": false; }; }, {}, never, never, false, never>;
}
