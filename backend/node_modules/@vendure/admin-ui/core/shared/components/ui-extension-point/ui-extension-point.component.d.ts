import { AfterViewInit, OnInit } from '@angular/core';
import { Observable } from 'rxjs';
import { CodeJar } from 'codejar';
import { UIExtensionLocationId } from '../../../common/component-registry-types';
import { DataService } from '../../../data/providers/data.service';
import * as i0 from "@angular/core";
type UiExtensionType = 'actionBar' | 'navMenu' | 'detailComponent' | 'dataTable';
export declare class UiExtensionPointComponent implements OnInit, AfterViewInit {
    private dataService;
    locationId: UIExtensionLocationId;
    metadata?: any;
    topPx: number;
    leftPx: number;
    display: 'block' | 'inline-block';
    api: UiExtensionType;
    private editorElementRef;
    private dropdownComponent;
    display$: Observable<boolean>;
    jar: CodeJar;
    readonly isDevMode: boolean;
    constructor(dataService: DataService);
    getCodeTemplate(api: UiExtensionType): string;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<UiExtensionPointComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<UiExtensionPointComponent, "vdr-ui-extension-point", never, { "locationId": { "alias": "locationId"; "required": false; }; "metadata": { "alias": "metadata"; "required": false; }; "topPx": { "alias": "topPx"; "required": false; }; "leftPx": { "alias": "leftPx"; "required": false; }; "display": { "alias": "display"; "required": false; }; "api": { "alias": "api"; "required": false; }; }, {}, never, ["*"], false, never>;
}
export {};
