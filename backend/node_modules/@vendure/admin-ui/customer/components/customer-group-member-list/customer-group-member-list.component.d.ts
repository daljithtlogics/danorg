import { EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { FormControl } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { BulkActionLocationId, Customer, DataService, GetCustomerGroupsQuery, ItemOf, SelectionManager } from '@vendure/admin-ui/core';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export interface CustomerGroupMemberFetchParams {
    skip: number;
    take: number;
    filterTerm: string;
}
export type CustomerGroupMember = Pick<Customer, 'id' | 'createdAt' | 'updatedAt' | 'title' | 'firstName' | 'lastName' | 'emailAddress'>;
export declare class CustomerGroupMemberListComponent implements OnInit, OnDestroy {
    private router;
    private dataService;
    locationId: BulkActionLocationId;
    members: CustomerGroupMember[];
    totalItems: number;
    route: ActivatedRoute;
    selectedMemberIds: string[];
    activeGroup: ItemOf<GetCustomerGroupsQuery, 'customerGroups'>;
    selectionChange: EventEmitter<string[]>;
    fetchParamsChange: EventEmitter<CustomerGroupMemberFetchParams>;
    membersItemsPerPage$: Observable<number>;
    membersCurrentPage$: Observable<number>;
    filterTermControl: FormControl<string | null>;
    selectionManager: SelectionManager<CustomerGroupMember>;
    private refresh$;
    private destroy$;
    constructor(router: Router, dataService: DataService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    setContentsPageNumber(page: number): void;
    setContentsItemsPerPage(perPage: number): void;
    refresh(): void;
    private setParam;
    static ɵfac: i0.ɵɵFactoryDeclaration<CustomerGroupMemberListComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CustomerGroupMemberListComponent, "vdr-customer-group-member-list", never, { "locationId": { "alias": "locationId"; "required": false; }; "members": { "alias": "members"; "required": false; }; "totalItems": { "alias": "totalItems"; "required": false; }; "route": { "alias": "route"; "required": false; }; "selectedMemberIds": { "alias": "selectedMemberIds"; "required": false; }; "activeGroup": { "alias": "activeGroup"; "required": false; }; }, { "selectionChange": "selectionChange"; "fetchParamsChange": "fetchParamsChange"; }, never, never, false, never>;
}
